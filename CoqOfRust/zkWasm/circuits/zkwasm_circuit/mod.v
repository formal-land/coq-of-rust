(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module circuits.
  Module zkwasm_circuit.
    Definition value_VAR_COLUMNS : Value.t :=
      M.run
        ltac:(M.monadic
          (M.match_operator (|
            M.alloc (| Value.Tuple [] |),
            [
              fun γ =>
                ltac:(M.monadic
                  (let γ := M.use (M.alloc (| Value.Bool false |)) in
                  let _ := M.is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                  M.alloc (| Value.Integer 58 |)));
              fun γ => ltac:(M.monadic (M.alloc (| Value.Integer 50 |)))
            ]
          |))).
    
    Definition value_RESERVE_ROWS : Value.t :=
      M.run
        ltac:(M.monadic (M.get_constant (| "delphinus_zkwasm::circuits::bit_table::STEP_SIZE" |))).
    
    (* StructRecord
      {
        name := "AssignedCells";
        ty_params := [ "F" ];
        fields :=
          [
            ("pre_image_table_cells",
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                [
                  Ty.apply
                    (Ty.path "std::sync::mutex::Mutex")
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        [
                          Ty.apply
                            (Ty.path
                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                            [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ] ]
                        ]
                    ];
                  Ty.path "alloc::alloc::Global"
                ]);
            ("post_image_table_cells",
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                [
                  Ty.apply
                    (Ty.path "std::sync::mutex::Mutex")
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        [
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path
                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ];
                                  Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ]
                                ]
                            ]
                        ]
                    ];
                  Ty.path "alloc::alloc::Global"
                ]);
            ("mtable_rest_mops",
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                [
                  Ty.apply
                    (Ty.path "std::sync::mutex::Mutex")
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ] ]
                    ];
                  Ty.path "alloc::alloc::Global"
                ]);
            ("rest_memory_finalize_ops_cell",
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                [
                  Ty.apply
                    (Ty.path "std::sync::mutex::Mutex")
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        [
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ] ]
                        ]
                    ];
                  Ty.path "alloc::alloc::Global"
                ]);
            ("etable_cells",
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                [
                  Ty.apply
                    (Ty.path "std::sync::mutex::Mutex")
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        [
                          Ty.apply
                            (Ty.path
                              "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                            [ F ]
                        ]
                    ];
                  Ty.path "alloc::alloc::Global"
                ]);
            ("rest_jops_cell_in_frame_table",
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                [
                  Ty.apply
                    (Ty.path "std::sync::mutex::Mutex")
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ] ]
                    ];
                  Ty.path "alloc::alloc::Global"
                ]);
            ("static_frame_entry_in_frame_table",
              Ty.apply
                (Ty.path "alloc::sync::Arc")
                [
                  Ty.apply
                    (Ty.path "std::sync::mutex::Mutex")
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        [
                          Ty.apply
                            (Ty.path "array")
                            [
                              Ty.tuple
                                [
                                  Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ];
                                  Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ]
                                ]
                            ]
                        ]
                    ];
                  Ty.path "alloc::alloc::Global"
                ])
          ];
      } *)
    
    Module Impl_core_default_Default_where_core_default_Default_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_zkwasm_circuit_AssignedCells_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells") [ F ].
      
      (* Default *)
      Definition default (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [] =>
          ltac:(M.monadic
            (Value.StructRecord
              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells"
              [
                ("pre_image_table_cells",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path
                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "default",
                      []
                    |),
                    []
                  |));
                ("post_image_table_cells",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ]
                                            ];
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "default",
                      []
                    |),
                    []
                  |));
                ("mtable_rest_mops",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "default",
                      []
                    |),
                    []
                  |));
                ("rest_memory_finalize_ops_cell",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "default",
                      []
                    |),
                    []
                  |));
                ("etable_cells",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path
                                      "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                    [ F ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "default",
                      []
                    |),
                    []
                  |));
                ("rest_jops_cell_in_frame_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "default",
                      []
                    |),
                    []
                  |));
                ("static_frame_entry_in_frame_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path "array")
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ];
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "default",
                      []
                    |),
                    []
                  |))
              ]))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        forall (F : Ty.t),
        M.IsTraitInstance
          "core::default::Default"
          (Self F)
          (* Trait polymorphic types *) []
          (* Instance *) [ ("default", InstanceField.Method (default F)) ].
    End Impl_core_default_Default_where_core_default_Default_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_zkwasm_circuit_AssignedCells_F.
    
    Module Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_zkwasm_circuit_AssignedCells_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells") [ F ].
      
      (* Clone *)
      Definition clone (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells"
              [
                ("pre_image_table_cells",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path
                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                        "pre_image_table_cells"
                      |)
                    ]
                  |));
                ("post_image_table_cells",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ]
                                            ];
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                        "post_image_table_cells"
                      |)
                    ]
                  |));
                ("mtable_rest_mops",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                        "mtable_rest_mops"
                      |)
                    ]
                  |));
                ("rest_memory_finalize_ops_cell",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                        "rest_memory_finalize_ops_cell"
                      |)
                    ]
                  |));
                ("etable_cells",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path
                                      "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                    [ F ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                        "etable_cells"
                      |)
                    ]
                  |));
                ("rest_jops_cell_in_frame_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                        "rest_jops_cell_in_frame_table"
                      |)
                    ]
                  |));
                ("static_frame_entry_in_frame_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "alloc::sync::Arc")
                        [
                          Ty.apply
                            (Ty.path "std::sync::mutex::Mutex")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.apply
                                    (Ty.path "array")
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ];
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                        "static_frame_entry_in_frame_table"
                      |)
                    ]
                  |))
              ]))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        forall (F : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (Self F)
          (* Trait polymorphic types *) []
          (* Instance *) [ ("clone", InstanceField.Method (clone F)) ].
    End Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_zkwasm_circuit_AssignedCells_F.
    
    (* StructRecord
      {
        name := "ZkWasmCircuitConfig";
        ty_params := [ "F" ];
        fields :=
          [
            ("rtable",
              Ty.apply (Ty.path "delphinus_zkwasm::circuits::rtable::RangeTableConfig") [ F ]);
            ("image_table",
              Ty.apply (Ty.path "delphinus_zkwasm::circuits::image_table::ImageTableConfig") [ F ]);
            ("post_image_table",
              Ty.apply
                (Ty.path "delphinus_zkwasm::circuits::post_image_table::PostImageTableConfig")
                [ F ]);
            ("mtable",
              Ty.apply (Ty.path "delphinus_zkwasm::circuits::mtable::MemoryTableConfig") [ F ]);
            ("jtable",
              Ty.apply (Ty.path "delphinus_zkwasm::circuits::jtable::JumpTableConfig") [ F ]);
            ("etable",
              Ty.apply (Ty.path "delphinus_zkwasm::circuits::etable::EventTableConfig") [ F ]);
            ("bit_table",
              Ty.apply (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableConfig") [ F ]);
            ("external_host_call_table",
              Ty.apply
                (Ty.path
                  "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig")
                [ F ]);
            ("context_helper_table",
              Ty.apply
                (Ty.path
                  "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig")
                [ F ]);
            ("foreign_table_from_zero_index",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ]);
            ("max_available_rows", Ty.path "usize");
            ("circuit_maximal_pages", Ty.path "u32");
            ("k", Ty.path "u32")
          ];
      } *)
    
    Module Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_zkwasm_circuit_ZkWasmCircuitConfig_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig") [ F ].
      
      (* Clone *)
      Definition clone (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig"
              [
                ("rtable",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::rtable::RangeTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "rtable"
                      |)
                    ]
                  |));
                ("image_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::image_table::ImageTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "image_table"
                      |)
                    ]
                  |));
                ("post_image_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path
                          "delphinus_zkwasm::circuits::post_image_table::PostImageTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "post_image_table"
                      |)
                    ]
                  |));
                ("mtable",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::mtable::MemoryTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "mtable"
                      |)
                    ]
                  |));
                ("jtable",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::jtable::JumpTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "jtable"
                      |)
                    ]
                  |));
                ("etable",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::etable::EventTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "etable"
                      |)
                    ]
                  |));
                ("bit_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "bit_table"
                      |)
                    ]
                  |));
                ("external_host_call_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path
                          "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "external_host_call_table"
                      |)
                    ]
                  |));
                ("context_helper_table",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path
                          "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig")
                        [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "context_helper_table"
                      |)
                    ]
                  |));
                ("foreign_table_from_zero_index",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "foreign_table_from_zero_index"
                      |)
                    ]
                  |));
                ("max_available_rows",
                  M.call_closure (|
                    M.get_trait_method (| "core::clone::Clone", Ty.path "usize", [], "clone", [] |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "max_available_rows"
                      |)
                    ]
                  |));
                ("circuit_maximal_pages",
                  M.call_closure (|
                    M.get_trait_method (| "core::clone::Clone", Ty.path "u32", [], "clone", [] |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "circuit_maximal_pages"
                      |)
                    ]
                  |));
                ("k",
                  M.call_closure (|
                    M.get_trait_method (| "core::clone::Clone", Ty.path "u32", [], "clone", [] |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                        "k"
                      |)
                    ]
                  |))
              ]))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        forall (F : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (Self F)
          (* Trait polymorphic types *) []
          (* Instance *) [ ("clone", InstanceField.Method (clone F)) ].
    End Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_zkwasm_circuit_ZkWasmCircuitConfig_F.
    
    Module Impl_halo2_proofs_plonk_circuit_Circuit_where_pairing_bn256_arithmetic_fields_FieldExt_F_F_for_delphinus_zkwasm_circuits_ZkWasmCircuit_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "delphinus_zkwasm::circuits::ZkWasmCircuit") [ F ].
      
      (*     type Config = ZkWasmCircuitConfig<F>; *)
      Definition _Config (F : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig") [ F ].
      
      (*     type FloorPlanner = FlatFloorPlanner; *)
      Definition _FloorPlanner (F : Ty.t) : Ty.t :=
        Ty.path "halo2_proofs::circuit::floor_planner::flat::FlatFloorPlanner".
      
      (*
          fn without_witnesses(&self) -> Self {
              ZkWasmCircuit::new(
                  self.k,
                  // fill slice like circuit_without_witness
                  Slice {
                      itable: self.slice.itable.clone(),
                      br_table: self.slice.br_table.clone(),
                      elem_table: self.slice.elem_table.clone(),
                      configure_table: self.slice.configure_table.clone(),
                      static_jtable: self.slice.static_jtable.clone(),
      
                      etable: Arc::new(EventTable::default()),
                      frame_table: Arc::new(JumpTable::default()),
      
                      imtable: self.slice.imtable.clone(),
                      post_imtable: self.slice.imtable.clone(),
      
                      initialization_state: self.slice.initialization_state.clone(),
                      post_initialization_state: self.slice.initialization_state.clone(),
      
                      is_last_slice: self.slice.is_last_slice,
                  },
              )
              .unwrap()
          }
      *)
      Definition without_witnesses (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              M.get_associated_function (|
                Ty.apply
                  (Ty.path "core::result::Result")
                  [
                    Ty.apply (Ty.path "delphinus_zkwasm::circuits::ZkWasmCircuit") [ F ];
                    Ty.path "delphinus_zkwasm::error::BuildingCircuitError"
                  ],
                "unwrap",
                []
              |),
              [
                M.call_closure (|
                  M.get_associated_function (|
                    Ty.apply (Ty.path "delphinus_zkwasm::circuits::ZkWasmCircuit") [ F ],
                    "new",
                    []
                  |),
                  [
                    M.read (|
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::ZkWasmCircuit",
                        "k"
                      |)
                    |);
                    Value.StructRecord
                      "specs::slice::Slice"
                      [
                        ("itable",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::itable::InstructionTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "itable"
                              |)
                            ]
                          |));
                        ("br_table",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [ Ty.path "specs::brtable::BrTable"; Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "br_table"
                              |)
                            ]
                          |));
                        ("elem_table",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::brtable::ElemTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "elem_table"
                              |)
                            ]
                          |));
                        ("configure_table",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::configure_table::ConfigureTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "configure_table"
                              |)
                            ]
                          |));
                        ("static_jtable",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.apply
                                    (Ty.path "array")
                                    [ Ty.path "specs::jtable::StaticFrameEntry" ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "static_jtable"
                              |)
                            ]
                          |));
                        ("etable",
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::etable::EventTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              "new",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_trait_method (|
                                  "core::default::Default",
                                  Ty.path "specs::etable::EventTable",
                                  [],
                                  "default",
                                  []
                                |),
                                []
                              |)
                            ]
                          |));
                        ("frame_table",
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [ Ty.path "specs::jtable::JumpTable"; Ty.path "alloc::alloc::Global"
                                ],
                              "new",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_trait_method (|
                                  "core::default::Default",
                                  Ty.path "specs::jtable::JumpTable",
                                  [],
                                  "default",
                                  []
                                |),
                                []
                              |)
                            ]
                          |));
                        ("imtable",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::imtable::InitMemoryTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "imtable"
                              |)
                            ]
                          |));
                        ("post_imtable",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::imtable::InitMemoryTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "imtable"
                              |)
                            ]
                          |));
                        ("initialization_state",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.apply
                                    (Ty.path "specs::state::InitializationState")
                                    [ Ty.path "u32"; Ty.path "num_bigint::biguint::BigUint" ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "initialization_state"
                              |)
                            ]
                          |));
                        ("post_initialization_state",
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::clone::Clone",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.apply
                                    (Ty.path "specs::state::InitializationState")
                                    [ Ty.path "u32"; Ty.path "num_bigint::biguint::BigUint" ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "clone",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                  "slice"
                                |),
                                "specs::slice::Slice",
                                "initialization_state"
                              |)
                            ]
                          |));
                        ("is_last_slice",
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                "slice"
                              |),
                              "specs::slice::Slice",
                              "is_last_slice"
                            |)
                          |))
                      ]
                  ]
                |)
              ]
            |)))
        | _, _ => M.impossible
        end.
      
      (*
          fn configure(meta: &mut ConstraintSystem<F>) -> Self::Config {
              let k = zkwasm_k();
      
              /*
               * Allocate a column to enable assign_advice_from_constant.
               */
              {
                  let constants = meta.fixed_column();
                  meta.enable_constant(constants);
                  meta.enable_equality(constants);
              }
      
              let memory_addr_sel = if cfg!(feature = "continuation") {
                  Some(meta.fixed_column())
              } else {
                  None
              };
      
              let foreign_table_from_zero_index = meta.fixed_column();
      
              let mut cols = [(); VAR_COLUMNS].map(|_| meta.advice_column()).into_iter();
      
              let rtable = RangeTableConfig::configure(meta);
              let image_table = ImageTableConfig::configure(meta, memory_addr_sel);
              let mtable = MemoryTableConfig::configure(meta, k, &mut cols, &rtable, &image_table);
              let post_image_table =
                  PostImageTableConfig::configure(meta, memory_addr_sel, &mtable, &image_table);
              let jtable = JumpTableConfig::configure(meta, &mut cols);
              let external_host_call_table = ExternalHostCallTableConfig::configure(meta);
              let bit_table = BitTableConfig::configure(meta, &rtable);
      
              let wasm_input_helper_table =
                  WasmInputHelperTableConfig::configure(meta, foreign_table_from_zero_index);
              let context_helper_table =
                  ContextContHelperTableConfig::configure(meta, foreign_table_from_zero_index);
      
              let mut foreign_table_configs: BTreeMap<_, Box<(dyn ForeignTableConfig<F>)>> =
                  BTreeMap::new();
              foreign_table_configs.insert(
                  WASM_INPUT_FOREIGN_TABLE_KEY,
                  Box::new(wasm_input_helper_table.clone()),
              );
              foreign_table_configs.insert(
                  CONTEXT_FOREIGN_TABLE_KEY,
                  Box::new(context_helper_table.clone()),
              );
      
              let etable = EventTableConfig::configure(
                  meta,
                  k,
                  &mut cols,
                  &rtable,
                  &image_table,
                  &mtable,
                  &jtable,
                  &bit_table,
                  &external_host_call_table,
                  &foreign_table_configs,
              );
      
              assert_eq!(cols.count(), 0);
      
              let max_available_rows = (1 << k) - (meta.blinding_factors() + 1 + RESERVE_ROWS);
              debug!("max_available_rows: {:?}", max_available_rows);
      
              let circuit_maximal_pages = compute_maximal_pages(k);
              info!(
                  "Circuit K: {} supports up to {} pages.",
                  k, circuit_maximal_pages
              );
      
              Self::Config {
                  rtable,
                  image_table,
                  post_image_table,
                  mtable,
                  jtable,
                  etable,
                  bit_table,
                  external_host_call_table,
                  context_helper_table,
                  foreign_table_from_zero_index,
      
                  max_available_rows,
                  circuit_maximal_pages,
      
                  k,
              }
          }
      *)
      Definition configure (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ meta ] =>
          ltac:(M.monadic
            (let meta := M.alloc (| meta |) in
            M.read (|
              let k :=
                M.alloc (|
                  M.call_closure (|
                    M.get_function (| "delphinus_zkwasm::circuits::config::zkwasm_k", [] |),
                    []
                  |)
                |) in
              let _ :=
                let constants :=
                  M.alloc (|
                    M.call_closure (|
                      M.get_associated_function (|
                        Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                        "fixed_column",
                        []
                      |),
                      [ M.read (| meta |) ]
                    |)
                  |) in
                let _ :=
                  M.alloc (|
                    M.call_closure (|
                      M.get_associated_function (|
                        Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                        "enable_constant",
                        []
                      |),
                      [ M.read (| meta |); M.read (| constants |) ]
                    |)
                  |) in
                let _ :=
                  M.alloc (|
                    M.call_closure (|
                      M.get_associated_function (|
                        Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                        "enable_equality",
                        [
                          Ty.apply
                            (Ty.path "halo2_proofs::plonk::circuit::Column")
                            [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ]
                        ]
                      |),
                      [ M.read (| meta |); M.read (| constants |) ]
                    |)
                  |) in
                M.alloc (| Value.Tuple [] |) in
              let memory_addr_sel :=
                M.copy (|
                  M.match_operator (|
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.use (M.alloc (| Value.Bool false |)) in
                          let _ :=
                            M.is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            Value.StructTuple
                              "core::option::Option::Some"
                              [
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem")
                                      [ F ],
                                    "fixed_column",
                                    []
                                  |),
                                  [ M.read (| meta |) ]
                                |)
                              ]
                          |)));
                      fun γ =>
                        ltac:(M.monadic
                          (M.alloc (| Value.StructTuple "core::option::Option::None" [] |)))
                    ]
                  |)
                |) in
              let foreign_table_from_zero_index :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "fixed_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let cols :=
                M.alloc (|
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::iter::traits::collect::IntoIterator",
                      Ty.apply
                        (Ty.path "array")
                        [
                          Ty.apply
                            (Ty.path "halo2_proofs::plonk::circuit::Column")
                            [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]
                        ],
                      [],
                      "into_iter",
                      []
                    |),
                    [
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply (Ty.path "array") [ Ty.tuple [] ],
                          "map",
                          [
                            Ty.function
                              [ Ty.tuple [ Ty.tuple [] ] ]
                              (Ty.apply
                                (Ty.path "halo2_proofs::plonk::circuit::Column")
                                [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
                            Ty.apply
                              (Ty.path "halo2_proofs::plonk::circuit::Column")
                              [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]
                          ]
                        |),
                        [
                          repeat (Value.Tuple []) 50;
                          M.closure
                            (fun γ =>
                              ltac:(M.monadic
                                match γ with
                                | [ α0 ] =>
                                  M.match_operator (|
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path
                                                  "halo2_proofs::plonk::circuit::ConstraintSystem")
                                                [ F ],
                                              "advice_column",
                                              []
                                            |),
                                            [ M.read (| meta |) ]
                                          |)))
                                    ]
                                  |)
                                | _ => M.impossible (||)
                                end))
                        ]
                      |)
                    ]
                  |)
                |) in
              let rtable :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::rtable::RangeTableConfig")
                        [ F ],
                      "configure",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let image_table :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::image_table::ImageTableConfig")
                        [ F ],
                      "configure",
                      []
                    |),
                    [ M.read (| meta |); M.read (| memory_addr_sel |) ]
                  |)
                |) in
              let mtable :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::mtable::MemoryTableConfig")
                        [ F ],
                      "configure",
                      [
                        Ty.apply
                          (Ty.path "core::array::iter::IntoIter")
                          [
                            Ty.apply
                              (Ty.path "halo2_proofs::plonk::circuit::Column")
                              [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]
                          ]
                      ]
                    |),
                    [ M.read (| meta |); M.read (| k |); cols; rtable; image_table ]
                  |)
                |) in
              let post_image_table :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path
                          "delphinus_zkwasm::circuits::post_image_table::PostImageTableConfig")
                        [ F ],
                      "configure",
                      []
                    |),
                    [ M.read (| meta |); M.read (| memory_addr_sel |); mtable; image_table ]
                  |)
                |) in
              let jtable :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::jtable::JumpTableConfig")
                        [ F ],
                      "configure",
                      [
                        Ty.apply
                          (Ty.path "core::array::iter::IntoIter")
                          [
                            Ty.apply
                              (Ty.path "halo2_proofs::plonk::circuit::Column")
                              [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]
                          ]
                      ]
                    |),
                    [ M.read (| meta |); cols ]
                  |)
                |) in
              let external_host_call_table :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path
                          "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig")
                        [ F ],
                      "configure",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let bit_table :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableConfig")
                        [ F ],
                      "configure",
                      []
                    |),
                    [ M.read (| meta |); rtable ]
                  |)
                |) in
              let wasm_input_helper_table :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path
                          "delphinus_zkwasm::foreign::wasm_input_helper::circuits::WasmInputHelperTableConfig")
                        [ F ],
                      "configure",
                      []
                    |),
                    [ M.read (| meta |); M.read (| foreign_table_from_zero_index |) ]
                  |)
                |) in
              let context_helper_table :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path
                          "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig")
                        [ F ],
                      "configure",
                      []
                    |),
                    [ M.read (| meta |); M.read (| foreign_table_from_zero_index |) ]
                  |)
                |) in
              let foreign_table_configs :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "alloc::collections::btree::map::BTreeMap")
                        [
                          Ty.apply (Ty.path "&") [ Ty.path "str" ];
                          Ty.apply
                            (Ty.path "alloc::boxed::Box")
                            [
                              Ty.dyn
                                [ ("delphinus_zkwasm::foreign::ForeignTableConfig::Trait", []) ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      "new",
                      []
                    |),
                    []
                  |)
                |) in
              let _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "alloc::collections::btree::map::BTreeMap")
                        [
                          Ty.apply (Ty.path "&") [ Ty.path "str" ];
                          Ty.apply
                            (Ty.path "alloc::boxed::Box")
                            [
                              Ty.dyn
                                [ ("delphinus_zkwasm::foreign::ForeignTableConfig::Trait", []) ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      "insert",
                      []
                    |),
                    [
                      foreign_table_configs;
                      M.read (|
                        M.get_constant (|
                          "delphinus_zkwasm::foreign::wasm_input_helper::circuits::WASM_INPUT_FOREIGN_TABLE_KEY"
                        |)
                      |);
                      (* Unsize *)
                      M.pointer_coercion
                        (M.call_closure (|
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "alloc::boxed::Box")
                              [
                                Ty.apply
                                  (Ty.path
                                    "delphinus_zkwasm::foreign::wasm_input_helper::circuits::WasmInputHelperTableConfig")
                                  [ F ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            "new",
                            []
                          |),
                          [
                            M.call_closure (|
                              M.get_trait_method (|
                                "core::clone::Clone",
                                Ty.apply
                                  (Ty.path
                                    "delphinus_zkwasm::foreign::wasm_input_helper::circuits::WasmInputHelperTableConfig")
                                  [ F ],
                                [],
                                "clone",
                                []
                              |),
                              [ wasm_input_helper_table ]
                            |)
                          ]
                        |))
                    ]
                  |)
                |) in
              let _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "alloc::collections::btree::map::BTreeMap")
                        [
                          Ty.apply (Ty.path "&") [ Ty.path "str" ];
                          Ty.apply
                            (Ty.path "alloc::boxed::Box")
                            [
                              Ty.dyn
                                [ ("delphinus_zkwasm::foreign::ForeignTableConfig::Trait", []) ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      "insert",
                      []
                    |),
                    [
                      foreign_table_configs;
                      M.read (|
                        M.get_constant (|
                          "delphinus_zkwasm::foreign::context::circuits::CONTEXT_FOREIGN_TABLE_KEY"
                        |)
                      |);
                      (* Unsize *)
                      M.pointer_coercion
                        (M.call_closure (|
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "alloc::boxed::Box")
                              [
                                Ty.apply
                                  (Ty.path
                                    "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig")
                                  [ F ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            "new",
                            []
                          |),
                          [
                            M.call_closure (|
                              M.get_trait_method (|
                                "core::clone::Clone",
                                Ty.apply
                                  (Ty.path
                                    "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig")
                                  [ F ],
                                [],
                                "clone",
                                []
                              |),
                              [ context_helper_table ]
                            |)
                          ]
                        |))
                    ]
                  |)
                |) in
              let etable :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::etable::EventTableConfig")
                        [ F ],
                      "configure",
                      [
                        Ty.apply
                          (Ty.path "core::array::iter::IntoIter")
                          [
                            Ty.apply
                              (Ty.path "halo2_proofs::plonk::circuit::Column")
                              [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]
                          ]
                      ]
                    |),
                    [
                      M.read (| meta |);
                      M.read (| k |);
                      cols;
                      rtable;
                      image_table;
                      mtable;
                      jtable;
                      bit_table;
                      external_host_call_table;
                      foreign_table_configs
                    ]
                  |)
                |) in
              let _ :=
                M.match_operator (|
                  M.alloc (|
                    Value.Tuple
                      [
                        M.alloc (|
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::iter::traits::iterator::Iterator",
                              Ty.apply
                                (Ty.path "core::array::iter::IntoIter")
                                [
                                  Ty.apply
                                    (Ty.path "halo2_proofs::plonk::circuit::Column")
                                    [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]
                                ],
                              [],
                              "count",
                              []
                            |),
                            [ M.read (| cols |) ]
                          |)
                        |);
                        M.alloc (| Value.Integer 0 |)
                      ]
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let left_val := M.copy (| γ0_0 |) in
                        let right_val := M.copy (| γ0_1 |) in
                        M.match_operator (|
                          M.alloc (| Value.Tuple [] |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ :=
                                  M.use
                                    (M.alloc (|
                                      UnOp.Pure.not
                                        (BinOp.Pure.eq
                                          (M.read (| M.read (| left_val |) |))
                                          (M.read (| M.read (| right_val |) |)))
                                    |)) in
                                let _ :=
                                  M.is_constant_or_break_match (|
                                    M.read (| γ |),
                                    Value.Bool true
                                  |) in
                                M.alloc (|
                                  M.never_to_any (|
                                    M.read (|
                                      let kind :=
                                        M.alloc (|
                                          Value.StructTuple "core::panicking::AssertKind::Eq" []
                                        |) in
                                      M.alloc (|
                                        M.call_closure (|
                                          M.get_function (|
                                            "core::panicking::assert_failed",
                                            [ Ty.path "usize"; Ty.path "usize" ]
                                          |),
                                          [
                                            M.read (| kind |);
                                            M.read (| left_val |);
                                            M.read (| right_val |);
                                            Value.StructTuple "core::option::Option::None" []
                                          ]
                                        |)
                                      |)
                                    |)
                                  |)
                                |)));
                            fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                          ]
                        |)))
                  ]
                |) in
              let max_available_rows :=
                M.alloc (|
                  BinOp.Panic.sub (|
                    Integer.Usize,
                    BinOp.Panic.shl (| Value.Integer 1, M.read (| k |) |),
                    BinOp.Panic.add (|
                      Integer.Usize,
                      BinOp.Panic.add (|
                        Integer.Usize,
                        M.call_closure (|
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem")
                              [ F ],
                            "blinding_factors",
                            []
                          |),
                          [ M.read (| meta |) ]
                        |),
                        Value.Integer 1
                      |),
                      M.read (|
                        M.get_constant (|
                          "delphinus_zkwasm::circuits::zkwasm_circuit::RESERVE_ROWS"
                        |)
                      |)
                    |)
                  |)
                |) in
              let _ :=
                let lvl := M.alloc (| Value.StructTuple "log::Level::Debug" [] |) in
                M.match_operator (|
                  M.alloc (| Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ :=
                          M.use
                            (M.alloc (|
                              LogicalOp.and (|
                                M.call_closure (|
                                  M.get_trait_method (|
                                    "core::cmp::PartialOrd",
                                    Ty.path "log::Level",
                                    [ Ty.path "log::LevelFilter" ],
                                    "le",
                                    []
                                  |),
                                  [ lvl; M.get_constant (| "log::STATIC_MAX_LEVEL" |) ]
                                |),
                                ltac:(M.monadic
                                  (M.call_closure (|
                                    M.get_trait_method (|
                                      "core::cmp::PartialOrd",
                                      Ty.path "log::Level",
                                      [ Ty.path "log::LevelFilter" ],
                                      "le",
                                      []
                                    |),
                                    [
                                      lvl;
                                      M.alloc (|
                                        M.call_closure (|
                                          M.get_function (| "log::max_level", [] |),
                                          []
                                        |)
                                      |)
                                    ]
                                  |)))
                              |)
                            |)) in
                        let _ :=
                          M.is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        let _ :=
                          M.alloc (|
                            M.call_closure (|
                              M.get_function (| "log::__private_api::log", [ Ty.tuple [] ] |),
                              [
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::fmt::Arguments",
                                    "new_v1",
                                    []
                                  |),
                                  [
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [ M.read (| Value.String "max_available_rows: " |) ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_debug",
                                                [ Ty.path "usize" ]
                                              |),
                                              [ max_available_rows ]
                                            |)
                                          ]
                                      |))
                                  ]
                                |);
                                M.read (| lvl |);
                                M.alloc (|
                                  Value.Tuple
                                    [
                                      M.read (|
                                        Value.String "delphinus_zkwasm::circuits::zkwasm_circuit"
                                      |);
                                      M.read (|
                                        Value.String "delphinus_zkwasm::circuits::zkwasm_circuit"
                                      |);
                                      M.read (|
                                        Value.String
                                          "crates/zkwasm/src/circuits/zkwasm_circuit/mod.rs"
                                      |)
                                    ]
                                |);
                                Value.Integer 199;
                                Value.Tuple []
                              ]
                            |)
                          |) in
                        M.alloc (| Value.Tuple [] |)));
                    fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                  ]
                |) in
              let circuit_maximal_pages :=
                M.alloc (|
                  M.call_closure (|
                    M.get_function (|
                      "delphinus_zkwasm::circuits::image_table::compute_maximal_pages",
                      []
                    |),
                    [ M.read (| k |) ]
                  |)
                |) in
              let _ :=
                let lvl := M.alloc (| Value.StructTuple "log::Level::Info" [] |) in
                M.match_operator (|
                  M.alloc (| Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ :=
                          M.use
                            (M.alloc (|
                              LogicalOp.and (|
                                M.call_closure (|
                                  M.get_trait_method (|
                                    "core::cmp::PartialOrd",
                                    Ty.path "log::Level",
                                    [ Ty.path "log::LevelFilter" ],
                                    "le",
                                    []
                                  |),
                                  [ lvl; M.get_constant (| "log::STATIC_MAX_LEVEL" |) ]
                                |),
                                ltac:(M.monadic
                                  (M.call_closure (|
                                    M.get_trait_method (|
                                      "core::cmp::PartialOrd",
                                      Ty.path "log::Level",
                                      [ Ty.path "log::LevelFilter" ],
                                      "le",
                                      []
                                    |),
                                    [
                                      lvl;
                                      M.alloc (|
                                        M.call_closure (|
                                          M.get_function (| "log::max_level", [] |),
                                          []
                                        |)
                                      |)
                                    ]
                                  |)))
                              |)
                            |)) in
                        let _ :=
                          M.is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        let _ :=
                          M.alloc (|
                            M.call_closure (|
                              M.get_function (| "log::__private_api::log", [ Ty.tuple [] ] |),
                              [
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::fmt::Arguments",
                                    "new_v1",
                                    []
                                  |),
                                  [
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.read (| Value.String "Circuit K: " |);
                                            M.read (| Value.String " supports up to " |);
                                            M.read (| Value.String " pages." |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "u32" ]
                                              |),
                                              [ k ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "u32" ]
                                              |),
                                              [ circuit_maximal_pages ]
                                            |)
                                          ]
                                      |))
                                  ]
                                |);
                                M.read (| lvl |);
                                M.alloc (|
                                  Value.Tuple
                                    [
                                      M.read (|
                                        Value.String "delphinus_zkwasm::circuits::zkwasm_circuit"
                                      |);
                                      M.read (|
                                        Value.String "delphinus_zkwasm::circuits::zkwasm_circuit"
                                      |);
                                      M.read (|
                                        Value.String
                                          "crates/zkwasm/src/circuits/zkwasm_circuit/mod.rs"
                                      |)
                                    ]
                                |);
                                Value.Integer 202;
                                Value.Tuple []
                              ]
                            |)
                          |) in
                        M.alloc (| Value.Tuple [] |)));
                    fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                  ]
                |) in
              M.alloc (|
                Value.StructRecord
                  "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig"
                  [
                    ("rtable", M.read (| rtable |));
                    ("image_table", M.read (| image_table |));
                    ("post_image_table", M.read (| post_image_table |));
                    ("mtable", M.read (| mtable |));
                    ("jtable", M.read (| jtable |));
                    ("etable", M.read (| etable |));
                    ("bit_table", M.read (| bit_table |));
                    ("external_host_call_table", M.read (| external_host_call_table |));
                    ("context_helper_table", M.read (| context_helper_table |));
                    ("foreign_table_from_zero_index", M.read (| foreign_table_from_zero_index |));
                    ("max_available_rows", M.read (| max_available_rows |));
                    ("circuit_maximal_pages", M.read (| circuit_maximal_pages |));
                    ("k", M.read (| k |))
                  ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      (*
          fn synthesize(&self, config: Self::Config, layouter: impl Layouter<F>) -> Result<(), Error> {
              let assign_timer = start_timer!(|| "Assign");
      
              let rchip = RangeTableChip::new(config.rtable);
              let image_chip = ImageTableChip::new(config.image_table);
              let post_image_chip = PostImageTableChip::new(config.post_image_table);
              let mchip = MemoryTableChip::new(config.mtable, config.max_available_rows);
              let frame_table_chip = JumpTableChip::new(config.jtable, config.max_available_rows);
              let echip = EventTableChip::new(
                  config.etable,
                  compute_slice_capability(self.k) as usize,
                  config.max_available_rows,
              );
              let bit_chip = BitTableChip::new(config.bit_table, config.max_available_rows);
              let external_host_call_chip =
                  ExternalHostCallChip::new(config.external_host_call_table, config.max_available_rows);
              let context_chip = ContextContHelperTableChip::new(config.context_helper_table);
      
              let image_table_assigner = ImageTableAssigner::new(
                  // Add one for default lookup value
                  self.slice.itable.len() + 1,
                  self.slice.br_table.entries().len() + self.slice.elem_table.entries().len() + 1,
                  config.circuit_maximal_pages,
              );
      
              let memory_writing_table: MemoryWritingTable = MemoryWritingTable::from(
                  config.k,
                  self.slice.create_memory_table(memory_event_of_step),
              );
      
              let etable = exec_with_profile!(
                  || "Prepare memory info for etable",
                  EventTableWithMemoryInfo::new(&self.slice.etable, &memory_writing_table,)
              );
      
              let assigned_cells = AssignedCells::default();
      
              let layouter_cloned = layouter.clone();
              let assigned_cells_cloned = assigned_cells.clone();
      
              rayon::scope(move |s| {
                  let memory_writing_table = Arc::new(memory_writing_table);
                  let etable = Arc::new(etable);
      
                  let _layouter = layouter.clone();
                  s.spawn(move |_| {
                      exec_with_profile!(
                          || "Init range chip",
                          rchip.init(_layouter, config.k).unwrap()
                      );
                  });
      
                  let _layouter = layouter.clone();
                  s.spawn(move |_| {
                      exec_with_profile!(
                          || "Init foreign table index",
                          _layouter
                              .assign_region(
                                  || "foreign helper",
                                  |region| {
                                      for offset in 0..foreign_table_enable_lines(config.k) {
                                          region.assign_fixed(
                                              || "foreign table from zero index",
                                              config.foreign_table_from_zero_index,
                                              offset,
                                              || Ok(F::from(offset as u64)),
                                          )?;
                                      }
      
                                      Ok(())
                                  },
                              )
                              .unwrap()
                      );
                  });
      
                  let _layouter = layouter.clone();
                  let _etable = etable.clone();
                  s.spawn(move |_| {
                      exec_with_profile!(
                          || "Assign bit table",
                          bit_chip
                              .assign(_layouter, _etable.filter_bit_table_entries())
                              .unwrap()
                      );
                  });
      
                  let _layouter = layouter.clone();
                  s.spawn(move |_| {
                      exec_with_profile!(
                          || "Assign external host call table",
                          external_host_call_chip
                              .assign(
                                  _layouter,
                                  &self.slice.etable.filter_external_host_call_table(),
                              )
                              .unwrap()
                      );
                  });
      
                  let _layouter = layouter.clone();
                  s.spawn(move |_| {
                      exec_with_profile!(
                          || "Assign context cont chip",
                          context_chip
                              .assign(
                                  _layouter,
                                  &self.slice.etable.get_context_inputs(),
                                  &self.slice.etable.get_context_outputs()
                              )
                              .unwrap()
                      );
                  });
      
                  let _layouter = layouter.clone();
                  let _assigned_cells = assigned_cells.clone();
                  s.spawn(move |_| {
                      let pre_image_table = self.slice.encode_pre_compilation_table_values(config.k);
      
                      let cells = exec_with_profile!(
                          || "Assign pre image table chip",
                          image_chip
                              .assign(_layouter, &image_table_assigner, pre_image_table)
                              .unwrap()
                      );
      
                      *_assigned_cells.pre_image_table_cells.lock().unwrap() = Some(cells);
                  });
      
                  let _layouter = layouter.clone();
                  let _assigned_cells = assigned_cells.clone();
                  let _memory_writing_table = memory_writing_table.clone();
                  s.spawn(move |_| {
                      let post_image_table: ImageTableLayouter<F> =
                          self.slice.encode_post_compilation_table_values(config.k);
      
                      let (rest_memory_writing_ops, memory_finalized_set) =
                          _memory_writing_table.count_rest_memory_finalize_ops();
      
                      let cells = post_image_chip
                          .assign(
                              _layouter,
                              &image_table_assigner,
                              post_image_table,
                              rest_memory_writing_ops,
                              memory_finalized_set,
                          )
                          .unwrap();
      
                      *_assigned_cells.post_image_table_cells.lock().unwrap() = Some(cells);
                  });
      
                  let _layouter = layouter.clone();
                  let _assigned_cells = assigned_cells.clone();
                  s.spawn(move |_| {
                      exec_with_profile!(|| "Assign frame table", {
                          let (rest_jops_cell, static_frame_entry_cells) = frame_table_chip
                              .assign(
                                  _layouter,
                                  &self.slice.static_jtable,
                                  &self.slice.frame_table,
                              )
                              .unwrap();
      
                          *_assigned_cells
                              .rest_jops_cell_in_frame_table
                              .lock()
                              .unwrap() = Some(rest_jops_cell);
                          *_assigned_cells
                              .static_frame_entry_in_frame_table
                              .lock()
                              .unwrap() = Some(static_frame_entry_cells);
                      });
                  });
      
                  let _layouter = layouter.clone();
                  let _assigned_cells = assigned_cells.clone();
                  s.spawn(move |_| {
                      exec_with_profile!(|| "Assign mtable", {
                          let (rest_mops, rest_memory_finalize_ops_cell) =
                              mchip.assign(_layouter, &memory_writing_table).unwrap();
      
                          *_assigned_cells.mtable_rest_mops.lock().unwrap() = Some(rest_mops);
                          *_assigned_cells
                              .rest_memory_finalize_ops_cell
                              .lock()
                              .unwrap() = Some(rest_memory_finalize_ops_cell);
                      });
                  });
      
                  let _layouter = layouter.clone();
                  let _assigned_cells = assigned_cells.clone();
                  s.spawn(move |_| {
                      exec_with_profile!(|| "Assign etable", {
                          let cells = echip
                              .assign(
                                  _layouter,
                                  &self.slice.itable,
                                  &etable,
                                  &self.slice.configure_table,
                                  &self.slice.initialization_state,
                                  &self.slice.post_initialization_state,
                                  self.slice.is_last_slice,
                              )
                              .unwrap();
      
                          *_assigned_cells.etable_cells.lock().unwrap() = Some(cells);
                      });
                  });
              });
      
              macro_rules! into_inner {
                  ($arc:ident) => {
                      let $arc = Arc::try_unwrap(assigned_cells_cloned.$arc)
                          .unwrap()
                          .into_inner()
                          .unwrap()
                          .unwrap();
                  };
              }
      
              into_inner!(static_frame_entry_in_frame_table);
              into_inner!(etable_cells);
              into_inner!(mtable_rest_mops);
              into_inner!(rest_memory_finalize_ops_cell);
              into_inner!(pre_image_table_cells);
              into_inner!(post_image_table_cells);
              into_inner!(rest_jops_cell_in_frame_table);
              /*
               * Permutation between chips
               *
               */
              layouter_cloned.assign_region(
                  || "permutation between tables",
                  |region| {
                      // 1. static frame entries
                      // 1.1. between frame table and pre image table
                      for (left, right) in static_frame_entry_in_frame_table
                          .iter()
                          .zip(pre_image_table_cells.static_frame_entries.iter())
                      {
                          // enable
                          region.constrain_equal(left.0.cell(), right.0.cell())?;
                          // entry
                          region.constrain_equal(left.1.cell(), right.1.cell())?;
                      }
      
                      // 1.2 (if continuation) between frame table and post image table
                      if let Some((post_image_table_cells, _)) = post_image_table_cells.as_ref() {
                          for (left, right) in static_frame_entry_in_frame_table
                              .iter()
                              .zip(post_image_table_cells.static_frame_entries.iter())
                          {
                              // enable
                              region.constrain_equal(left.0.cell(), right.0.cell())?;
                              // entry
                              region.constrain_equal(left.1.cell(), right.1.cell())?;
                          }
                      }
      
                      // 2. rest jops
                      // 2.1 (if not continuation) rest_jops between event chip and frame chip
                      if let Some(rest_jops_in_event_chip) = etable_cells.rest_jops.as_ref() {
                          region.constrain_equal(
                              rest_jops_in_event_chip.cell(),
                              rest_jops_cell_in_frame_table.cell(),
                          )?;
                      }
      
                      // 2.2 (if continuation and last slice circuit) rest_jops between post image chip and frame chip
                      #[cfg(feature = "continuation")]
                      if self.slice.is_last_slice {
                          if let Some((assigned_post_image_table_cells, _)) =
                              post_image_table_cells.as_ref()
                          {
                              region.constrain_equal(
                                  assigned_post_image_table_cells
                                      .initialization_state
                                      .jops
                                      .cell(),
                                  rest_jops_cell_in_frame_table.cell(),
                              )?;
                          }
                      }
      
                      // 3. rest_mops between event chip and memory chip
                      region.constrain_equal(etable_cells.rest_mops.cell(), mtable_rest_mops.cell())?;
      
                      // 4. (if continuation) memory finalized count between memory chip and post image chip
                      if let Some((_, rest_memory_finalized_ops_in_post_image_table)) =
                          post_image_table_cells.as_ref()
                      {
                          region.constrain_equal(
                              rest_memory_finalized_ops_in_post_image_table.cell(),
                              rest_memory_finalize_ops_cell.as_ref().unwrap().cell(),
                          )?;
                      }
      
                      // 5. initialization state
                      // 5.1 between event chip and pre image chip
                      etable_cells
                          .pre_initialization_state
                          .zip_for_each(&pre_image_table_cells.initialization_state, |l, r| {
                              region.constrain_equal(l.cell(), r.cell())
                          })?;
      
                      // 5.2 (if continuation) between event chip and post image chip
                      if let Some((post_image_table_cells, _)) = post_image_table_cells.as_ref() {
                          etable_cells
                              .post_initialization_state
                              .zip_for_each(&post_image_table_cells.initialization_state, |l, r| {
                                  region.constrain_equal(l.cell(), r.cell())
                              })?;
                      }
      
                      // 6. fixed part(instructions, br_tables, padding) within pre image chip and post image chip
                      if let Some((post_image_table_cells, _)) = post_image_table_cells.as_ref() {
                          for (l, r) in pre_image_table_cells
                              .instructions
                              .iter()
                              .zip(post_image_table_cells.instructions.iter())
                          {
                              region.constrain_equal(l.cell(), r.cell())?;
                          }
      
                          for (l, r) in pre_image_table_cells
                              .br_table_entires
                              .iter()
                              .zip(post_image_table_cells.br_table_entires.iter())
                          {
                              region.constrain_equal(l.cell(), r.cell())?;
                          }
      
                          for (l, r) in pre_image_table_cells
                              .padding_entires
                              .iter()
                              .zip(post_image_table_cells.padding_entires.iter())
                          {
                              region.constrain_equal(l.cell(), r.cell())?;
                          }
                      }
      
                      Ok(())
                  },
              )?;
      
              end_timer!(assign_timer);
      
              Ok(())
          }
      *)
      Definition synthesize (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [ impl_Layouter_F_ ], [ self; config; layouter ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let config := M.alloc (| config |) in
            let layouter := M.alloc (| layouter |) in
            M.catch_return (|
              ltac:(M.monadic
                (M.read (|
                  let assign_timer :=
                    M.copy (|
                      let msg :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::ops::function::Fn",
                              Ty.function
                                [ Ty.tuple [] ]
                                (Ty.apply (Ty.path "&") [ Ty.path "str" ]),
                              [ Ty.tuple [] ],
                              "call",
                              []
                            |),
                            [
                              M.alloc (|
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        M.match_operator (|
                                          M.alloc (| α0 |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic (M.read (| Value.String "Assign" |)))
                                          ]
                                        |)
                                      | _ => M.impossible (||)
                                      end))
                              |);
                              Value.Tuple []
                            ]
                          |)
                        |) in
                      let start_info :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_trait_method (|
                              "colored::Colorize",
                              Ty.path "colored::ColoredString",
                              [],
                              "bold",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_trait_method (|
                                  "colored::Colorize",
                                  Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                  [],
                                  "yellow",
                                  []
                                |),
                                [ M.read (| Value.String "Start:" |) ]
                              |)
                            ]
                          |)
                        |) in
                      let indent_amount :=
                        M.alloc (|
                          BinOp.Panic.mul (|
                            Integer.Usize,
                            Value.Integer 2,
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "core::sync::atomic::AtomicUsize",
                                "fetch_add",
                                []
                              |),
                              [
                                M.read (|
                                  M.get_constant (| "ark_std::perf_trace::inner::NUM_INDENT" |)
                                |);
                                Value.Integer 0;
                                Value.StructTuple "core::sync::atomic::Ordering::Relaxed" []
                              ]
                            |)
                          |)
                        |) in
                      let indent :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_function (| "ark_std::perf_trace::inner::compute_indent", [] |),
                            [ M.read (| indent_amount |) ]
                          |)
                        |) in
                      let _ :=
                        let _ :=
                          M.alloc (|
                            M.call_closure (|
                              M.get_function (| "std::io::stdio::_print", [] |),
                              [
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::fmt::Arguments",
                                    "new_v1_formatted",
                                    []
                                  |),
                                  [
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.read (| Value.String "" |);
                                            M.read (| Value.String "" |);
                                            M.read (| Value.String " " |);
                                            M.read (| Value.String "
" |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "alloc::string::String" ]
                                              |),
                                              [ indent ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "colored::ColoredString" ]
                                              |),
                                              [ start_info ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.apply (Ty.path "&") [ Ty.path "str" ] ]
                                              |),
                                              [ msg ]
                                            |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Placeholder",
                                                "new",
                                                []
                                              |),
                                              [
                                                Value.Integer 0;
                                                Value.UnicodeChar 32;
                                                Value.StructTuple
                                                  "core::fmt::rt::Alignment::Unknown"
                                                  [];
                                                Value.Integer 0;
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Implied"
                                                  [];
                                                Value.StructTuple "core::fmt::rt::Count::Implied" []
                                              ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Placeholder",
                                                "new",
                                                []
                                              |),
                                              [
                                                Value.Integer 1;
                                                Value.UnicodeChar 32;
                                                Value.StructTuple
                                                  "core::fmt::rt::Alignment::Unknown"
                                                  [];
                                                Value.Integer 0;
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Implied"
                                                  [];
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Is"
                                                  [ Value.Integer 8 ]
                                              ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Placeholder",
                                                "new",
                                                []
                                              |),
                                              [
                                                Value.Integer 2;
                                                Value.UnicodeChar 32;
                                                Value.StructTuple
                                                  "core::fmt::rt::Alignment::Unknown"
                                                  [];
                                                Value.Integer 0;
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Implied"
                                                  [];
                                                Value.StructTuple "core::fmt::rt::Count::Implied" []
                                              ]
                                            |)
                                          ]
                                      |));
                                    M.call_closure (|
                                      M.get_associated_function (|
                                        Ty.path "core::fmt::rt::UnsafeArg",
                                        "new",
                                        []
                                      |),
                                      []
                                    |)
                                  ]
                                |)
                              ]
                            |)
                          |) in
                        M.alloc (| Value.Tuple [] |) in
                      let _ :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.path "core::sync::atomic::AtomicUsize",
                              "fetch_add",
                              []
                            |),
                            [
                              M.read (|
                                M.get_constant (| "ark_std::perf_trace::inner::NUM_INDENT" |)
                              |);
                              Value.Integer 1;
                              Value.StructTuple "core::sync::atomic::Ordering::Relaxed" []
                            ]
                          |)
                        |) in
                      M.alloc (|
                        Value.StructRecord
                          "ark_std::perf_trace::inner::TimerInfo"
                          [
                            ("msg",
                              M.call_closure (|
                                M.get_trait_method (|
                                  "alloc::string::ToString",
                                  Ty.path "str",
                                  [],
                                  "to_string",
                                  []
                                |),
                                [ M.read (| msg |) ]
                              |));
                            ("time",
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.path "std::time::Instant",
                                  "now",
                                  []
                                |),
                                []
                              |))
                          ]
                      |)
                    |) in
                  let rchip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "delphinus_zkwasm::circuits::rtable::RangeTableChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "rtable"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let image_chip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "delphinus_zkwasm::circuits::image_table::ImageTableChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "image_table"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let post_image_chip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path
                              "delphinus_zkwasm::circuits::post_image_table::PostImageTableChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "post_image_table"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let mchip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "delphinus_zkwasm::circuits::mtable::MemoryTableChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "mtable"
                            |)
                          |);
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "max_available_rows"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let frame_table_chip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "delphinus_zkwasm::circuits::jtable::JumpTableChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "jtable"
                            |)
                          |);
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "max_available_rows"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let echip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "delphinus_zkwasm::circuits::etable::EventTableChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "etable"
                            |)
                          |);
                          M.rust_cast
                            (M.call_closure (|
                              M.get_function (|
                                "delphinus_zkwasm::circuits::compute_slice_capability",
                                []
                              |),
                              [
                                M.read (|
                                  M.SubPointer.get_struct_record_field (|
                                    M.read (| self |),
                                    "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                    "k"
                                  |)
                                |)
                              ]
                            |));
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "max_available_rows"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let bit_chip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "bit_table"
                            |)
                          |);
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "max_available_rows"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let external_host_call_chip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path
                              "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "external_host_call_table"
                            |)
                          |);
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "max_available_rows"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let context_chip :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path
                              "delphinus_zkwasm::foreign::context::circuits::assign::ContextContHelperTableChip")
                            [ F ],
                          "new",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "context_helper_table"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let image_table_assigner :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.path
                            "delphinus_zkwasm::circuits::utils::image_table::ImageTableAssigner",
                          "new",
                          []
                        |),
                        [
                          BinOp.Panic.add (|
                            Integer.Usize,
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "specs::itable::InstructionTable",
                                "len",
                                []
                              |),
                              [
                                M.call_closure (|
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::sync::Arc")
                                      [
                                        Ty.path "specs::itable::InstructionTable";
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    "deref",
                                    []
                                  |),
                                  [
                                    M.SubPointer.get_struct_record_field (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.read (| self |),
                                        "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                        "slice"
                                      |),
                                      "specs::slice::Slice",
                                      "itable"
                                    |)
                                  ]
                                |)
                              ]
                            |),
                            Value.Integer 1
                          |);
                          BinOp.Panic.add (|
                            Integer.Usize,
                            BinOp.Panic.add (|
                              Integer.Usize,
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    [
                                      Ty.path "specs::brtable::BrTableEntry";
                                      Ty.path "alloc::alloc::Global"
                                    ],
                                  "len",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.path "specs::brtable::BrTable",
                                      "entries",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_trait_method (|
                                          "core::ops::deref::Deref",
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.path "specs::brtable::BrTable";
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          [],
                                          "deref",
                                          []
                                        |),
                                        [
                                          M.SubPointer.get_struct_record_field (|
                                            M.SubPointer.get_struct_record_field (|
                                              M.read (| self |),
                                              "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                              "slice"
                                            |),
                                            "specs::slice::Slice",
                                            "br_table"
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |),
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    [
                                      Ty.path "specs::brtable::ElemEntry";
                                      Ty.path "alloc::alloc::Global"
                                    ],
                                  "len",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.path "specs::brtable::ElemTable",
                                      "entries",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_trait_method (|
                                          "core::ops::deref::Deref",
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.path "specs::brtable::ElemTable";
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          [],
                                          "deref",
                                          []
                                        |),
                                        [
                                          M.SubPointer.get_struct_record_field (|
                                            M.SubPointer.get_struct_record_field (|
                                              M.read (| self |),
                                              "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                              "slice"
                                            |),
                                            "specs::slice::Slice",
                                            "elem_table"
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            |),
                            Value.Integer 1
                          |);
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "circuit_maximal_pages"
                            |)
                          |)
                        ]
                      |)
                    |) in
                  let memory_writing_table :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.path
                            "delphinus_zkwasm::circuits::utils::table_entry::MemoryWritingTable",
                          "from",
                          []
                        |),
                        [
                          M.read (|
                            M.SubPointer.get_struct_record_field (|
                              config,
                              "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                              "k"
                            |)
                          |);
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.path "specs::slice::Slice",
                              "create_memory_table",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                "slice"
                              |);
                              (* ReifyFnPointer *)
                              M.pointer_coercion
                                (M.get_function (|
                                  "delphinus_zkwasm::runtime::memory_event_of_step",
                                  []
                                |))
                            ]
                          |)
                        ]
                      |)
                    |) in
                  let etable :=
                    M.copy (|
                      let timer :=
                        M.copy (|
                          let msg :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_trait_method (|
                                  "core::ops::function::Fn",
                                  Ty.function
                                    [ Ty.tuple [] ]
                                    (Ty.apply (Ty.path "&") [ Ty.path "str" ]),
                                  [ Ty.tuple [] ],
                                  "call",
                                  []
                                |),
                                [
                                  M.alloc (|
                                    M.closure
                                      (fun γ =>
                                        ltac:(M.monadic
                                          match γ with
                                          | [ α0 ] =>
                                            M.match_operator (|
                                              M.alloc (| α0 |),
                                              [
                                                fun γ =>
                                                  ltac:(M.monadic
                                                    (M.read (|
                                                      Value.String "Prepare memory info for etable"
                                                    |)))
                                              ]
                                            |)
                                          | _ => M.impossible (||)
                                          end))
                                  |);
                                  Value.Tuple []
                                ]
                              |)
                            |) in
                          let start_info :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_trait_method (|
                                  "colored::Colorize",
                                  Ty.path "colored::ColoredString",
                                  [],
                                  "bold",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_trait_method (|
                                      "colored::Colorize",
                                      Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                      [],
                                      "yellow",
                                      []
                                    |),
                                    [ M.read (| Value.String "Start:" |) ]
                                  |)
                                ]
                              |)
                            |) in
                          let indent_amount :=
                            M.alloc (|
                              BinOp.Panic.mul (|
                                Integer.Usize,
                                Value.Integer 2,
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::sync::atomic::AtomicUsize",
                                    "fetch_add",
                                    []
                                  |),
                                  [
                                    M.read (|
                                      M.get_constant (| "ark_std::perf_trace::inner::NUM_INDENT" |)
                                    |);
                                    Value.Integer 0;
                                    Value.StructTuple "core::sync::atomic::Ordering::Relaxed" []
                                  ]
                                |)
                              |)
                            |) in
                          let indent :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_function (|
                                  "ark_std::perf_trace::inner::compute_indent",
                                  []
                                |),
                                [ M.read (| indent_amount |) ]
                              |)
                            |) in
                          let _ :=
                            let _ :=
                              M.alloc (|
                                M.call_closure (|
                                  M.get_function (| "std::io::stdio::_print", [] |),
                                  [
                                    M.call_closure (|
                                      M.get_associated_function (|
                                        Ty.path "core::fmt::Arguments",
                                        "new_v1_formatted",
                                        []
                                      |),
                                      [
                                        (* Unsize *)
                                        M.pointer_coercion
                                          (M.alloc (|
                                            Value.Array
                                              [
                                                M.read (| Value.String "" |);
                                                M.read (| Value.String "" |);
                                                M.read (| Value.String " " |);
                                                M.read (| Value.String "
" |)
                                              ]
                                          |));
                                        (* Unsize *)
                                        M.pointer_coercion
                                          (M.alloc (|
                                            Value.Array
                                              [
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "new_display",
                                                    [ Ty.path "alloc::string::String" ]
                                                  |),
                                                  [ indent ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "new_display",
                                                    [ Ty.path "colored::ColoredString" ]
                                                  |),
                                                  [ start_info ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "new_display",
                                                    [ Ty.apply (Ty.path "&") [ Ty.path "str" ] ]
                                                  |),
                                                  [ msg ]
                                                |)
                                              ]
                                          |));
                                        (* Unsize *)
                                        M.pointer_coercion
                                          (M.alloc (|
                                            Value.Array
                                              [
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Placeholder",
                                                    "new",
                                                    []
                                                  |),
                                                  [
                                                    Value.Integer 0;
                                                    Value.UnicodeChar 32;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Alignment::Unknown"
                                                      [];
                                                    Value.Integer 0;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      [];
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      []
                                                  ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Placeholder",
                                                    "new",
                                                    []
                                                  |),
                                                  [
                                                    Value.Integer 1;
                                                    Value.UnicodeChar 32;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Alignment::Unknown"
                                                      [];
                                                    Value.Integer 0;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      [];
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Is"
                                                      [ Value.Integer 8 ]
                                                  ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Placeholder",
                                                    "new",
                                                    []
                                                  |),
                                                  [
                                                    Value.Integer 2;
                                                    Value.UnicodeChar 32;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Alignment::Unknown"
                                                      [];
                                                    Value.Integer 0;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      [];
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      []
                                                  ]
                                                |)
                                              ]
                                          |));
                                        M.call_closure (|
                                          M.get_associated_function (|
                                            Ty.path "core::fmt::rt::UnsafeArg",
                                            "new",
                                            []
                                          |),
                                          []
                                        |)
                                      ]
                                    |)
                                  ]
                                |)
                              |) in
                            M.alloc (| Value.Tuple [] |) in
                          let _ :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.path "core::sync::atomic::AtomicUsize",
                                  "fetch_add",
                                  []
                                |),
                                [
                                  M.read (|
                                    M.get_constant (| "ark_std::perf_trace::inner::NUM_INDENT" |)
                                  |);
                                  Value.Integer 1;
                                  Value.StructTuple "core::sync::atomic::Ordering::Relaxed" []
                                ]
                              |)
                            |) in
                          M.alloc (|
                            Value.StructRecord
                              "ark_std::perf_trace::inner::TimerInfo"
                              [
                                ("msg",
                                  M.call_closure (|
                                    M.get_trait_method (|
                                      "alloc::string::ToString",
                                      Ty.path "str",
                                      [],
                                      "to_string",
                                      []
                                    |),
                                    [ M.read (| msg |) ]
                                  |));
                                ("time",
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.path "std::time::Instant",
                                      "now",
                                      []
                                    |),
                                    []
                                  |))
                              ]
                          |)
                        |) in
                      let r :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.path
                                "delphinus_zkwasm::circuits::utils::table_entry::EventTableWithMemoryInfo",
                              "new",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_trait_method (|
                                  "core::ops::deref::Deref",
                                  Ty.apply
                                    (Ty.path "alloc::sync::Arc")
                                    [
                                      Ty.path "specs::etable::EventTable";
                                      Ty.path "alloc::alloc::Global"
                                    ],
                                  [],
                                  "deref",
                                  []
                                |),
                                [
                                  M.SubPointer.get_struct_record_field (|
                                    M.SubPointer.get_struct_record_field (|
                                      M.read (| self |),
                                      "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                      "slice"
                                    |),
                                    "specs::slice::Slice",
                                    "etable"
                                  |)
                                ]
                              |);
                              memory_writing_table
                            ]
                          |)
                        |) in
                      let _ :=
                        let _ :=
                          let time :=
                            M.copy (|
                              M.SubPointer.get_struct_record_field (|
                                timer,
                                "ark_std::perf_trace::inner::TimerInfo",
                                "time"
                              |)
                            |) in
                          let final_time :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.path "std::time::Instant",
                                  "elapsed",
                                  []
                                |),
                                [ time ]
                              |)
                            |) in
                          let final_time :=
                            M.copy (|
                              let secs :=
                                M.alloc (|
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.path "core::time::Duration",
                                      "as_secs",
                                      []
                                    |),
                                    [ final_time ]
                                  |)
                                |) in
                              let millis :=
                                M.alloc (|
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.path "core::time::Duration",
                                      "subsec_millis",
                                      []
                                    |),
                                    [ final_time ]
                                  |)
                                |) in
                              let micros :=
                                M.alloc (|
                                  BinOp.Panic.rem (|
                                    Integer.U32,
                                    M.call_closure (|
                                      M.get_associated_function (|
                                        Ty.path "core::time::Duration",
                                        "subsec_micros",
                                        []
                                      |),
                                      [ final_time ]
                                    |),
                                    Value.Integer 1000
                                  |)
                                |) in
                              let nanos :=
                                M.alloc (|
                                  BinOp.Panic.rem (|
                                    Integer.U32,
                                    M.call_closure (|
                                      M.get_associated_function (|
                                        Ty.path "core::time::Duration",
                                        "subsec_nanos",
                                        []
                                      |),
                                      [ final_time ]
                                    |),
                                    Value.Integer 1000
                                  |)
                                |) in
                              M.match_operator (|
                                M.alloc (| Value.Tuple [] |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let γ :=
                                        M.use
                                          (M.alloc (|
                                            BinOp.Pure.ne (M.read (| secs |)) (Value.Integer 0)
                                          |)) in
                                      let _ :=
                                        M.is_constant_or_break_match (|
                                          M.read (| γ |),
                                          Value.Bool true
                                        |) in
                                      M.alloc (|
                                        M.call_closure (|
                                          M.get_trait_method (|
                                            "colored::Colorize",
                                            Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                            [],
                                            "bold",
                                            []
                                          |),
                                          [
                                            M.call_closure (|
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.path "alloc::string::String",
                                                [],
                                                "deref",
                                                []
                                              |),
                                              [
                                                let res :=
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      M.get_function (| "alloc::fmt::format", [] |),
                                                      [
                                                        M.call_closure (|
                                                          M.get_associated_function (|
                                                            Ty.path "core::fmt::Arguments",
                                                            "new_v1_formatted",
                                                            []
                                                          |),
                                                          [
                                                            (* Unsize *)
                                                            M.pointer_coercion
                                                              (M.alloc (|
                                                                Value.Array
                                                                  [
                                                                    M.read (| Value.String "" |);
                                                                    M.read (| Value.String "." |);
                                                                    M.read (| Value.String "s" |)
                                                                  ]
                                                              |));
                                                            (* Unsize *)
                                                            M.pointer_coercion
                                                              (M.alloc (|
                                                                Value.Array
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "core::fmt::rt::Argument",
                                                                        "new_display",
                                                                        [ Ty.path "u64" ]
                                                                      |),
                                                                      [ secs ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "core::fmt::rt::Argument",
                                                                        "new_display",
                                                                        [ Ty.path "u32" ]
                                                                      |),
                                                                      [ millis ]
                                                                    |)
                                                                  ]
                                                              |));
                                                            (* Unsize *)
                                                            M.pointer_coercion
                                                              (M.alloc (|
                                                                Value.Array
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "core::fmt::rt::Placeholder",
                                                                        "new",
                                                                        []
                                                                      |),
                                                                      [
                                                                        Value.Integer 0;
                                                                        Value.UnicodeChar 32;
                                                                        Value.StructTuple
                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                          [];
                                                                        Value.Integer 0;
                                                                        Value.StructTuple
                                                                          "core::fmt::rt::Count::Implied"
                                                                          [];
                                                                        Value.StructTuple
                                                                          "core::fmt::rt::Count::Implied"
                                                                          []
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "core::fmt::rt::Placeholder",
                                                                        "new",
                                                                        []
                                                                      |),
                                                                      [
                                                                        Value.Integer 1;
                                                                        Value.UnicodeChar 32;
                                                                        Value.StructTuple
                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                          [];
                                                                        Value.Integer 8;
                                                                        Value.StructTuple
                                                                          "core::fmt::rt::Count::Implied"
                                                                          [];
                                                                        Value.StructTuple
                                                                          "core::fmt::rt::Count::Is"
                                                                          [ Value.Integer 3 ]
                                                                      ]
                                                                    |)
                                                                  ]
                                                              |));
                                                            M.call_closure (|
                                                              M.get_associated_function (|
                                                                Ty.path "core::fmt::rt::UnsafeArg",
                                                                "new",
                                                                []
                                                              |),
                                                              []
                                                            |)
                                                          ]
                                                        |)
                                                      ]
                                                    |)
                                                  |) in
                                                res
                                              ]
                                            |)
                                          ]
                                        |)
                                      |)));
                                  fun γ =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        M.alloc (| Value.Tuple [] |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let γ :=
                                                M.use
                                                  (M.alloc (|
                                                    BinOp.Pure.gt
                                                      (M.read (| millis |))
                                                      (Value.Integer 0)
                                                  |)) in
                                              let _ :=
                                                M.is_constant_or_break_match (|
                                                  M.read (| γ |),
                                                  Value.Bool true
                                                |) in
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "colored::Colorize",
                                                    Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                                    [],
                                                    "bold",
                                                    []
                                                  |),
                                                  [
                                                    M.call_closure (|
                                                      M.get_trait_method (|
                                                        "core::ops::deref::Deref",
                                                        Ty.path "alloc::string::String",
                                                        [],
                                                        "deref",
                                                        []
                                                      |),
                                                      [
                                                        let res :=
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              M.get_function (|
                                                                "alloc::fmt::format",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.path "core::fmt::Arguments",
                                                                    "new_v1_formatted",
                                                                    []
                                                                  |),
                                                                  [
                                                                    (* Unsize *)
                                                                    M.pointer_coercion
                                                                      (M.alloc (|
                                                                        Value.Array
                                                                          [
                                                                            M.read (|
                                                                              Value.String ""
                                                                            |);
                                                                            M.read (|
                                                                              Value.String "."
                                                                            |);
                                                                            M.read (|
                                                                              Value.String "ms"
                                                                            |)
                                                                          ]
                                                                      |));
                                                                    (* Unsize *)
                                                                    M.pointer_coercion
                                                                      (M.alloc (|
                                                                        Value.Array
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "core::fmt::rt::Argument",
                                                                                "new_display",
                                                                                [ Ty.path "u32" ]
                                                                              |),
                                                                              [ millis ]
                                                                            |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "core::fmt::rt::Argument",
                                                                                "new_display",
                                                                                [ Ty.path "u32" ]
                                                                              |),
                                                                              [ micros ]
                                                                            |)
                                                                          ]
                                                                      |));
                                                                    (* Unsize *)
                                                                    M.pointer_coercion
                                                                      (M.alloc (|
                                                                        Value.Array
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "core::fmt::rt::Placeholder",
                                                                                "new",
                                                                                []
                                                                              |),
                                                                              [
                                                                                Value.Integer 0;
                                                                                Value.UnicodeChar
                                                                                  32;
                                                                                Value.StructTuple
                                                                                  "core::fmt::rt::Alignment::Unknown"
                                                                                  [];
                                                                                Value.Integer 0;
                                                                                Value.StructTuple
                                                                                  "core::fmt::rt::Count::Implied"
                                                                                  [];
                                                                                Value.StructTuple
                                                                                  "core::fmt::rt::Count::Implied"
                                                                                  []
                                                                              ]
                                                                            |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "core::fmt::rt::Placeholder",
                                                                                "new",
                                                                                []
                                                                              |),
                                                                              [
                                                                                Value.Integer 1;
                                                                                Value.UnicodeChar
                                                                                  32;
                                                                                Value.StructTuple
                                                                                  "core::fmt::rt::Alignment::Unknown"
                                                                                  [];
                                                                                Value.Integer 8;
                                                                                Value.StructTuple
                                                                                  "core::fmt::rt::Count::Implied"
                                                                                  [];
                                                                                Value.StructTuple
                                                                                  "core::fmt::rt::Count::Is"
                                                                                  [ Value.Integer 3
                                                                                  ]
                                                                              ]
                                                                            |)
                                                                          ]
                                                                      |));
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "core::fmt::rt::UnsafeArg",
                                                                        "new",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |)
                                                          |) in
                                                        res
                                                      ]
                                                    |)
                                                  ]
                                                |)
                                              |)));
                                          fun γ =>
                                            ltac:(M.monadic
                                              (M.match_operator (|
                                                M.alloc (| Value.Tuple [] |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ :=
                                                        M.use
                                                          (M.alloc (|
                                                            BinOp.Pure.gt
                                                              (M.read (| micros |))
                                                              (Value.Integer 0)
                                                          |)) in
                                                      let _ :=
                                                        M.is_constant_or_break_match (|
                                                          M.read (| γ |),
                                                          Value.Bool true
                                                        |) in
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "colored::Colorize",
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              [ Ty.path "str" ],
                                                            [],
                                                            "bold",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::deref::Deref",
                                                                Ty.path "alloc::string::String",
                                                                [],
                                                                "deref",
                                                                []
                                                              |),
                                                              [
                                                                let res :=
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      M.get_function (|
                                                                        "alloc::fmt::format",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "core::fmt::Arguments",
                                                                            "new_v1_formatted",
                                                                            []
                                                                          |),
                                                                          [
                                                                            (* Unsize *)
                                                                            M.pointer_coercion
                                                                              (M.alloc (|
                                                                                Value.Array
                                                                                  [
                                                                                    M.read (|
                                                                                      Value.String
                                                                                        ""
                                                                                    |);
                                                                                    M.read (|
                                                                                      Value.String
                                                                                        "."
                                                                                    |);
                                                                                    M.read (|
                                                                                      Value.String
                                                                                        (String.String
                                                                                          "181"
                                                                                          "s")
                                                                                    |)
                                                                                  ]
                                                                              |));
                                                                            (* Unsize *)
                                                                            M.pointer_coercion
                                                                              (M.alloc (|
                                                                                Value.Array
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::fmt::rt::Argument",
                                                                                        "new_display",
                                                                                        [
                                                                                          Ty.path
                                                                                            "u32"
                                                                                        ]
                                                                                      |),
                                                                                      [ micros ]
                                                                                    |);
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::fmt::rt::Argument",
                                                                                        "new_display",
                                                                                        [
                                                                                          Ty.path
                                                                                            "u32"
                                                                                        ]
                                                                                      |),
                                                                                      [ nanos ]
                                                                                    |)
                                                                                  ]
                                                                              |));
                                                                            (* Unsize *)
                                                                            M.pointer_coercion
                                                                              (M.alloc (|
                                                                                Value.Array
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::fmt::rt::Placeholder",
                                                                                        "new",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        Value.Integer
                                                                                          0;
                                                                                        Value.UnicodeChar
                                                                                          32;
                                                                                        Value.StructTuple
                                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                                          [];
                                                                                        Value.Integer
                                                                                          0;
                                                                                        Value.StructTuple
                                                                                          "core::fmt::rt::Count::Implied"
                                                                                          [];
                                                                                        Value.StructTuple
                                                                                          "core::fmt::rt::Count::Implied"
                                                                                          []
                                                                                      ]
                                                                                    |);
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::fmt::rt::Placeholder",
                                                                                        "new",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        Value.Integer
                                                                                          1;
                                                                                        Value.UnicodeChar
                                                                                          32;
                                                                                        Value.StructTuple
                                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                                          [];
                                                                                        Value.Integer
                                                                                          8;
                                                                                        Value.StructTuple
                                                                                          "core::fmt::rt::Count::Implied"
                                                                                          [];
                                                                                        Value.StructTuple
                                                                                          "core::fmt::rt::Count::Is"
                                                                                          [
                                                                                            Value.Integer
                                                                                              3
                                                                                          ]
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                              |));
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "core::fmt::rt::UnsafeArg",
                                                                                "new",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |) in
                                                                res
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |)));
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (M.alloc (|
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "colored::Colorize",
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              [ Ty.path "str" ],
                                                            [],
                                                            "bold",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::deref::Deref",
                                                                Ty.path "alloc::string::String",
                                                                [],
                                                                "deref",
                                                                []
                                                              |),
                                                              [
                                                                let res :=
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      M.get_function (|
                                                                        "alloc::fmt::format",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "core::fmt::Arguments",
                                                                            "new_v1",
                                                                            []
                                                                          |),
                                                                          [
                                                                            (* Unsize *)
                                                                            M.pointer_coercion
                                                                              (M.alloc (|
                                                                                Value.Array
                                                                                  [
                                                                                    M.read (|
                                                                                      Value.String
                                                                                        ""
                                                                                    |);
                                                                                    M.read (|
                                                                                      Value.String
                                                                                        "ns"
                                                                                    |)
                                                                                  ]
                                                                              |));
                                                                            (* Unsize *)
                                                                            M.pointer_coercion
                                                                              (M.alloc (|
                                                                                Value.Array
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::fmt::rt::Argument",
                                                                                        "new_display",
                                                                                        [
                                                                                          Ty.path
                                                                                            "u32"
                                                                                        ]
                                                                                      |),
                                                                                      [
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::time::Duration",
                                                                                              "subsec_nanos",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              final_time
                                                                                            ]
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                              |))
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |) in
                                                                res
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |)))
                                                ]
                                              |)))
                                        ]
                                      |)))
                                ]
                              |)
                            |) in
                          let end_info :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_trait_method (|
                                  "colored::Colorize",
                                  Ty.path "colored::ColoredString",
                                  [],
                                  "bold",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_trait_method (|
                                      "colored::Colorize",
                                      Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                      [],
                                      "green",
                                      []
                                    |),
                                    [ M.read (| Value.String "End:" |) ]
                                  |)
                                ]
                              |)
                            |) in
                          let message :=
                            M.copy (|
                              let res :=
                                M.alloc (|
                                  M.call_closure (|
                                    M.get_function (| "alloc::fmt::format", [] |),
                                    [
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.path "core::fmt::Arguments",
                                          "new_v1",
                                          []
                                        |),
                                        [
                                          (* Unsize *)
                                          M.pointer_coercion
                                            (M.alloc (|
                                              Value.Array
                                                [
                                                  M.read (| Value.String "" |);
                                                  M.read (| Value.String " " |)
                                                ]
                                            |));
                                          (* Unsize *)
                                          M.pointer_coercion
                                            (M.alloc (|
                                              Value.Array
                                                [
                                                  M.call_closure (|
                                                    M.get_associated_function (|
                                                      Ty.path "core::fmt::rt::Argument",
                                                      "new_display",
                                                      [ Ty.path "alloc::string::String" ]
                                                    |),
                                                    [
                                                      M.SubPointer.get_struct_record_field (|
                                                        timer,
                                                        "ark_std::perf_trace::inner::TimerInfo",
                                                        "msg"
                                                      |)
                                                    ]
                                                  |);
                                                  M.call_closure (|
                                                    M.get_associated_function (|
                                                      Ty.path "core::fmt::rt::Argument",
                                                      "new_display",
                                                      [ Ty.apply (Ty.path "&") [ Ty.path "str" ] ]
                                                    |),
                                                    [
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::function::Fn",
                                                            Ty.function
                                                              [ Ty.tuple [] ]
                                                              (Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "str" ]),
                                                            [ Ty.tuple [] ],
                                                            "call",
                                                            []
                                                          |),
                                                          [
                                                            M.alloc (|
                                                              M.closure
                                                                (fun γ =>
                                                                  ltac:(M.monadic
                                                                    match γ with
                                                                    | [ α0 ] =>
                                                                      M.match_operator (|
                                                                        M.alloc (| α0 |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (M.read (|
                                                                                Value.String ""
                                                                              |)))
                                                                        ]
                                                                      |)
                                                                    | _ => M.impossible (||)
                                                                    end))
                                                            |);
                                                            Value.Tuple []
                                                          ]
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                ]
                                            |))
                                        ]
                                      |)
                                    ]
                                  |)
                                |) in
                              res
                            |) in
                          let _ :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.path "core::sync::atomic::AtomicUsize",
                                  "fetch_sub",
                                  []
                                |),
                                [
                                  M.read (|
                                    M.get_constant (| "ark_std::perf_trace::inner::NUM_INDENT" |)
                                  |);
                                  Value.Integer 1;
                                  Value.StructTuple "core::sync::atomic::Ordering::Relaxed" []
                                ]
                              |)
                            |) in
                          let indent_amount :=
                            M.alloc (|
                              BinOp.Panic.mul (|
                                Integer.Usize,
                                Value.Integer 2,
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::sync::atomic::AtomicUsize",
                                    "fetch_add",
                                    []
                                  |),
                                  [
                                    M.read (|
                                      M.get_constant (| "ark_std::perf_trace::inner::NUM_INDENT" |)
                                    |);
                                    Value.Integer 0;
                                    Value.StructTuple "core::sync::atomic::Ordering::Relaxed" []
                                  ]
                                |)
                              |)
                            |) in
                          let indent :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_function (|
                                  "ark_std::perf_trace::inner::compute_indent",
                                  []
                                |),
                                [ M.read (| indent_amount |) ]
                              |)
                            |) in
                          let _ :=
                            let _ :=
                              M.alloc (|
                                M.call_closure (|
                                  M.get_function (| "std::io::stdio::_print", [] |),
                                  [
                                    M.call_closure (|
                                      M.get_associated_function (|
                                        Ty.path "core::fmt::Arguments",
                                        "new_v1_formatted",
                                        []
                                      |),
                                      [
                                        (* Unsize *)
                                        M.pointer_coercion
                                          (M.alloc (|
                                            Value.Array
                                              [
                                                M.read (| Value.String "" |);
                                                M.read (| Value.String "" |);
                                                M.read (| Value.String " " |);
                                                M.read (| Value.String "" |);
                                                M.read (| Value.String "
" |)
                                              ]
                                          |));
                                        (* Unsize *)
                                        M.pointer_coercion
                                          (M.alloc (|
                                            Value.Array
                                              [
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "new_display",
                                                    [ Ty.path "alloc::string::String" ]
                                                  |),
                                                  [ indent ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "new_display",
                                                    [ Ty.path "colored::ColoredString" ]
                                                  |),
                                                  [ end_info ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "new_display",
                                                    [ Ty.path "alloc::string::String" ]
                                                  |),
                                                  [ message ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "new_display",
                                                    [ Ty.path "colored::ColoredString" ]
                                                  |),
                                                  [ final_time ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "from_usize",
                                                    []
                                                  |),
                                                  [
                                                    M.alloc (|
                                                      BinOp.Panic.sub (|
                                                        Integer.Usize,
                                                        Value.Integer 75,
                                                        M.read (| indent_amount |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              ]
                                          |));
                                        (* Unsize *)
                                        M.pointer_coercion
                                          (M.alloc (|
                                            Value.Array
                                              [
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Placeholder",
                                                    "new",
                                                    []
                                                  |),
                                                  [
                                                    Value.Integer 0;
                                                    Value.UnicodeChar 32;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Alignment::Unknown"
                                                      [];
                                                    Value.Integer 0;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      [];
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      []
                                                  ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Placeholder",
                                                    "new",
                                                    []
                                                  |),
                                                  [
                                                    Value.Integer 1;
                                                    Value.UnicodeChar 32;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Alignment::Unknown"
                                                      [];
                                                    Value.Integer 0;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      [];
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Is"
                                                      [ Value.Integer 8 ]
                                                  ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Placeholder",
                                                    "new",
                                                    []
                                                  |),
                                                  [
                                                    Value.Integer 2;
                                                    Value.UnicodeChar 46;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Alignment::Left"
                                                      [];
                                                    Value.Integer 0;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      [];
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Param"
                                                      [ Value.Integer 4 ]
                                                  ]
                                                |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Placeholder",
                                                    "new",
                                                    []
                                                  |),
                                                  [
                                                    Value.Integer 3;
                                                    Value.UnicodeChar 32;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Alignment::Unknown"
                                                      [];
                                                    Value.Integer 0;
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      [];
                                                    Value.StructTuple
                                                      "core::fmt::rt::Count::Implied"
                                                      []
                                                  ]
                                                |)
                                              ]
                                          |));
                                        M.call_closure (|
                                          M.get_associated_function (|
                                            Ty.path "core::fmt::rt::UnsafeArg",
                                            "new",
                                            []
                                          |),
                                          []
                                        |)
                                      ]
                                    |)
                                  ]
                                |)
                              |) in
                            M.alloc (| Value.Tuple [] |) in
                          M.alloc (| Value.Tuple [] |) in
                        M.alloc (| Value.Tuple [] |) in
                      r
                    |) in
                  let assigned_cells :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_trait_method (|
                          "core::default::Default",
                          Ty.apply
                            (Ty.path "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells")
                            [ F ],
                          [],
                          "default",
                          []
                        |),
                        []
                      |)
                    |) in
                  let layouter_cloned :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_trait_method (|
                          "core::clone::Clone",
                          impl_Layouter_F_,
                          [],
                          "clone",
                          []
                        |),
                        [ layouter ]
                      |)
                    |) in
                  let assigned_cells_cloned :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_trait_method (|
                          "core::clone::Clone",
                          Ty.apply
                            (Ty.path "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells")
                            [ F ],
                          [],
                          "clone",
                          []
                        |),
                        [ assigned_cells ]
                      |)
                    |) in
                  let _ :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_function (|
                          "rayon_core::scope::scope",
                          [
                            Ty.function
                              [
                                Ty.tuple
                                  [ Ty.apply (Ty.path "&") [ Ty.path "rayon_core::scope::Scope" ] ]
                              ]
                              (Ty.tuple []);
                            Ty.tuple []
                          ]
                        |),
                        [
                          M.closure
                            (fun γ =>
                              ltac:(M.monadic
                                match γ with
                                | [ α0 ] =>
                                  M.match_operator (|
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let s := M.copy (| γ |) in
                                          M.read (|
                                            let memory_writing_table :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.apply
                                                      (Ty.path "alloc::sync::Arc")
                                                      [
                                                        Ty.path
                                                          "delphinus_zkwasm::circuits::utils::table_entry::MemoryWritingTable";
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    "new",
                                                    []
                                                  |),
                                                  [ M.read (| memory_writing_table |) ]
                                                |)
                                              |) in
                                            let etable :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.apply
                                                      (Ty.path "alloc::sync::Arc")
                                                      [
                                                        Ty.path
                                                          "delphinus_zkwasm::circuits::utils::table_entry::EventTableWithMemoryInfo";
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    "new",
                                                    []
                                                  |),
                                                  [ M.read (| etable |) ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let _ :=
                                                                        let timer :=
                                                                          M.copy (|
                                                                            let msg :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [ Ty.tuple []
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]),
                                                                                    [ Ty.tuple [] ],
                                                                                    "call",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.closure
                                                                                        (fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            match γ
                                                                                            with
                                                                                            | [ α0
                                                                                                ] =>
                                                                                              M.match_operator (|
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.read (|
                                                                                                        Value.String
                                                                                                          "Init range chip"
                                                                                                      |)))
                                                                                                ]
                                                                                              |)
                                                                                            | _ =>
                                                                                              M.impossible (||)
                                                                                            end))
                                                                                    |);
                                                                                    Value.Tuple []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let start_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "yellow",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "Start:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      start_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      msg
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_add",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.StructRecord
                                                                                "ark_std::perf_trace::inner::TimerInfo"
                                                                                [
                                                                                  ("msg",
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "alloc::string::ToString",
                                                                                        Ty.path
                                                                                          "str",
                                                                                        [],
                                                                                        "to_string",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          msg
                                                                                        |)
                                                                                      ]
                                                                                    |));
                                                                                  ("time",
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "std::time::Instant",
                                                                                        "now",
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |))
                                                                                ]
                                                                            |)
                                                                          |) in
                                                                        let r :=
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::result::Result")
                                                                                  [
                                                                                    Ty.tuple [];
                                                                                    Ty.path
                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                  ],
                                                                                "unwrap",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "delphinus_zkwasm::circuits::rtable::RangeTableChip")
                                                                                      [ F ],
                                                                                    "init",
                                                                                    [
                                                                                      impl_Layouter_F_
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    rchip;
                                                                                    M.read (|
                                                                                      _layouter
                                                                                    |);
                                                                                    M.read (|
                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                        config,
                                                                                        "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                                                                                        "k"
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |) in
                                                                        let _ :=
                                                                          let _ :=
                                                                            let time :=
                                                                              M.copy (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  timer,
                                                                                  "ark_std::perf_trace::inner::TimerInfo",
                                                                                  "time"
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "std::time::Instant",
                                                                                    "elapsed",
                                                                                    []
                                                                                  |),
                                                                                  [ time ]
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.copy (|
                                                                                let secs :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "as_secs",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let millis :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "subsec_millis",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let micros :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_micros",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                let nanos :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              BinOp.Pure.ne
                                                                                                (M.read (|
                                                                                                  secs
                                                                                                |))
                                                                                                (Value.Integer
                                                                                                  0)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          M.is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "colored::Colorize",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ],
                                                                                              [],
                                                                                              "bold",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.path
                                                                                                    "alloc::string::String",
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  let
                                                                                                        res :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_function (|
                                                                                                          "alloc::fmt::format",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "core::fmt::Arguments",
                                                                                                              "new_v1_formatted",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          ""
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "."
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "s"
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u64"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          secs
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u32"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          millis
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            []
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            1;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            8;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                3
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                  "new",
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  res
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      BinOp.Pure.gt
                                                                                                        (M.read (|
                                                                                                          millis
                                                                                                        |))
                                                                                                        (Value.Integer
                                                                                                          0)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  M.is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "colored::Colorize",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "bold",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          let
                                                                                                                res :=
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_function (|
                                                                                                                  "alloc::fmt::format",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.path
                                                                                                                        "core::fmt::Arguments",
                                                                                                                      "new_v1_formatted",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  ""
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "."
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "ms"
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  millis
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  micros
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    1;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    8;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Is"
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        3
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |) in
                                                                                                          res
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            (M.alloc (|
                                                                                                              BinOp.Pure.gt
                                                                                                                (M.read (|
                                                                                                                  micros
                                                                                                                |))
                                                                                                                (Value.Integer
                                                                                                                  0)
                                                                                                            |)) in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          M.is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1_formatted",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "."
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          (String.String
                                                                                                                                            "181"
                                                                                                                                            "s")
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          micros
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          nanos
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            []
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            1;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            8;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                3
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                []
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "ns"
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::time::Duration",
                                                                                                                                                "subsec_nanos",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                final_time
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let end_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "green",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "End:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let message :=
                                                                              M.copy (|
                                                                                let res :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "alloc::fmt::format",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          timer,
                                                                                                          "ark_std::perf_trace::inner::TimerInfo",
                                                                                                          "msg"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ]
                                                                                                                (Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]),
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            α0
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      | _ =>
                                                                                                                        M.impossible (||)
                                                                                                                      end))
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                res
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_sub",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      end_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      message
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      final_time
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "from_usize",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.alloc (|
                                                                                                        BinOp.Panic.sub (|
                                                                                                          Integer.Usize,
                                                                                                          Value.Integer
                                                                                                            75,
                                                                                                          M.read (|
                                                                                                            indent_amount
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        46;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Left"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Param"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            4
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        3;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |) in
                                                                        r in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let _ :=
                                                                        let timer :=
                                                                          M.copy (|
                                                                            let msg :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [ Ty.tuple []
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]),
                                                                                    [ Ty.tuple [] ],
                                                                                    "call",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.closure
                                                                                        (fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            match γ
                                                                                            with
                                                                                            | [ α0
                                                                                                ] =>
                                                                                              M.match_operator (|
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.read (|
                                                                                                        Value.String
                                                                                                          "Init foreign table index"
                                                                                                      |)))
                                                                                                ]
                                                                                              |)
                                                                                            | _ =>
                                                                                              M.impossible (||)
                                                                                            end))
                                                                                    |);
                                                                                    Value.Tuple []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let start_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "yellow",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "Start:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      start_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      msg
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_add",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.StructRecord
                                                                                "ark_std::perf_trace::inner::TimerInfo"
                                                                                [
                                                                                  ("msg",
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "alloc::string::ToString",
                                                                                        Ty.path
                                                                                          "str",
                                                                                        [],
                                                                                        "to_string",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          msg
                                                                                        |)
                                                                                      ]
                                                                                    |));
                                                                                  ("time",
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "std::time::Instant",
                                                                                        "now",
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |))
                                                                                ]
                                                                            |)
                                                                          |) in
                                                                        let r :=
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::result::Result")
                                                                                  [
                                                                                    Ty.tuple [];
                                                                                    Ty.path
                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                  ],
                                                                                "unwrap",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "halo2_proofs::circuit::Layouter",
                                                                                    impl_Layouter_F_,
                                                                                    [ F ],
                                                                                    "assign_region",
                                                                                    [
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "halo2_proofs::circuit::Region")
                                                                                                    [
                                                                                                      F
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "core::result::Result")
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [];
                                                                                            Ty.path
                                                                                              "halo2_proofs::plonk::error::Error"
                                                                                          ]);
                                                                                      Ty.tuple [];
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            []
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ]);
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    _layouter;
                                                                                    M.closure
                                                                                      (fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          match γ
                                                                                          with
                                                                                          | [ α0
                                                                                              ] =>
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α0
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (M.read (|
                                                                                                      Value.String
                                                                                                        "foreign helper"
                                                                                                    |)))
                                                                                              ]
                                                                                            |)
                                                                                          | _ =>
                                                                                            M.impossible (||)
                                                                                          end));
                                                                                    M.closure
                                                                                      (fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          match γ
                                                                                          with
                                                                                          | [ α0
                                                                                              ] =>
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α0
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          region :=
                                                                                                      M.copy (|
                                                                                                        γ
                                                                                                      |) in
                                                                                                    M.read (|
                                                                                                      let
                                                                                                            _ :=
                                                                                                        M.use
                                                                                                          (M.match_operator (|
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::iter::traits::collect::IntoIterator",
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::ops::range::Range")
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "usize"
                                                                                                                    ],
                                                                                                                  [],
                                                                                                                  "into_iter",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  Value.StructRecord
                                                                                                                    "core::ops::range::Range"
                                                                                                                    [
                                                                                                                      ("start",
                                                                                                                        Value.Integer
                                                                                                                          0);
                                                                                                                      ("end_",
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_function (|
                                                                                                                            "delphinus_zkwasm::foreign::foreign_table_enable_lines",
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.read (|
                                                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                                                config,
                                                                                                                                "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                                                                                                                                "k"
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |))
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |)
                                                                                                            |),
                                                                                                            [
                                                                                                              fun
                                                                                                                  γ =>
                                                                                                                ltac:(M.monadic
                                                                                                                  (let
                                                                                                                        iter :=
                                                                                                                    M.copy (|
                                                                                                                      γ
                                                                                                                    |) in
                                                                                                                  M.loop (|
                                                                                                                    ltac:(M.monadic
                                                                                                                      (let
                                                                                                                            _ :=
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_trait_method (|
                                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "core::ops::range::Range")
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "usize"
                                                                                                                                  ],
                                                                                                                                [],
                                                                                                                                "next",
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                iter
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.alloc (|
                                                                                                                                  M.never_to_any (|
                                                                                                                                    M.read (|
                                                                                                                                      M.break (||)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |)));
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (let
                                                                                                                                      γ0_0 :=
                                                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                                                    γ,
                                                                                                                                    "core::option::Option::Some",
                                                                                                                                    0
                                                                                                                                  |) in
                                                                                                                                let
                                                                                                                                      offset :=
                                                                                                                                  M.copy (|
                                                                                                                                    γ0_0
                                                                                                                                  |) in
                                                                                                                                let
                                                                                                                                      _ :=
                                                                                                                                  M.match_operator (|
                                                                                                                                    M.alloc (|
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_trait_method (|
                                                                                                                                          "core::ops::try_trait::Try",
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "core::result::Result")
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                                                                [
                                                                                                                                                  F;
                                                                                                                                                  F
                                                                                                                                                ];
                                                                                                                                              Ty.path
                                                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                                                            ],
                                                                                                                                          [],
                                                                                                                                          "branch",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.call_closure (|
                                                                                                                                            M.get_associated_function (|
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "halo2_proofs::circuit::Region")
                                                                                                                                                [
                                                                                                                                                  F
                                                                                                                                                ],
                                                                                                                                              "assign_fixed",
                                                                                                                                              [
                                                                                                                                                Ty.function
                                                                                                                                                  [
                                                                                                                                                    Ty.tuple
                                                                                                                                                      []
                                                                                                                                                  ]
                                                                                                                                                  (Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "core::result::Result")
                                                                                                                                                    [
                                                                                                                                                      F;
                                                                                                                                                      Ty.path
                                                                                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                                                                                    ]);
                                                                                                                                                F;
                                                                                                                                                Ty.function
                                                                                                                                                  [
                                                                                                                                                    Ty.tuple
                                                                                                                                                      []
                                                                                                                                                  ]
                                                                                                                                                  (Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "str"
                                                                                                                                                    ]);
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "&")
                                                                                                                                                  [
                                                                                                                                                    Ty.path
                                                                                                                                                      "str"
                                                                                                                                                  ]
                                                                                                                                              ]
                                                                                                                                            |),
                                                                                                                                            [
                                                                                                                                              M.read (|
                                                                                                                                                region
                                                                                                                                              |);
                                                                                                                                              M.closure
                                                                                                                                                (fun
                                                                                                                                                    γ =>
                                                                                                                                                  ltac:(M.monadic
                                                                                                                                                    match
                                                                                                                                                      γ
                                                                                                                                                    with
                                                                                                                                                    | [
                                                                                                                                                          α0
                                                                                                                                                        ] =>
                                                                                                                                                      M.match_operator (|
                                                                                                                                                        M.alloc (|
                                                                                                                                                          α0
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          fun
                                                                                                                                                              γ =>
                                                                                                                                                            ltac:(M.monadic
                                                                                                                                                              (M.read (|
                                                                                                                                                                Value.String
                                                                                                                                                                  "foreign table from zero index"
                                                                                                                                                              |)))
                                                                                                                                                        ]
                                                                                                                                                      |)
                                                                                                                                                    | _ =>
                                                                                                                                                      M.impossible (||)
                                                                                                                                                    end));
                                                                                                                                              M.read (|
                                                                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                                                                  config,
                                                                                                                                                  "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                                                                                                                                                  "foreign_table_from_zero_index"
                                                                                                                                                |)
                                                                                                                                              |);
                                                                                                                                              M.read (|
                                                                                                                                                offset
                                                                                                                                              |);
                                                                                                                                              M.closure
                                                                                                                                                (fun
                                                                                                                                                    γ =>
                                                                                                                                                  ltac:(M.monadic
                                                                                                                                                    match
                                                                                                                                                      γ
                                                                                                                                                    with
                                                                                                                                                    | [
                                                                                                                                                          α0
                                                                                                                                                        ] =>
                                                                                                                                                      M.match_operator (|
                                                                                                                                                        M.alloc (|
                                                                                                                                                          α0
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          fun
                                                                                                                                                              γ =>
                                                                                                                                                            ltac:(M.monadic
                                                                                                                                                              (Value.StructTuple
                                                                                                                                                                "core::result::Result::Ok"
                                                                                                                                                                [
                                                                                                                                                                  M.call_closure (|
                                                                                                                                                                    M.get_trait_method (|
                                                                                                                                                                      "core::convert::From",
                                                                                                                                                                      F,
                                                                                                                                                                      [
                                                                                                                                                                        Ty.path
                                                                                                                                                                          "u64"
                                                                                                                                                                      ],
                                                                                                                                                                      "from",
                                                                                                                                                                      []
                                                                                                                                                                    |),
                                                                                                                                                                    [
                                                                                                                                                                      M.rust_cast
                                                                                                                                                                        (M.read (|
                                                                                                                                                                          offset
                                                                                                                                                                        |))
                                                                                                                                                                    ]
                                                                                                                                                                  |)
                                                                                                                                                                ]))
                                                                                                                                                        ]
                                                                                                                                                      |)
                                                                                                                                                    | _ =>
                                                                                                                                                      M.impossible (||)
                                                                                                                                                    end))
                                                                                                                                            ]
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      fun
                                                                                                                                          γ =>
                                                                                                                                        ltac:(M.monadic
                                                                                                                                          (let
                                                                                                                                                γ0_0 :=
                                                                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                                                                              γ,
                                                                                                                                              "core::ops::control_flow::ControlFlow::Break",
                                                                                                                                              0
                                                                                                                                            |) in
                                                                                                                                          let
                                                                                                                                                residual :=
                                                                                                                                            M.copy (|
                                                                                                                                              γ0_0
                                                                                                                                            |) in
                                                                                                                                          M.alloc (|
                                                                                                                                            M.never_to_any (|
                                                                                                                                              M.read (|
                                                                                                                                                M.return_ (|
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    M.get_trait_method (|
                                                                                                                                                      "core::ops::try_trait::FromResidual",
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "core::result::Result")
                                                                                                                                                        [
                                                                                                                                                          Ty.tuple
                                                                                                                                                            [];
                                                                                                                                                          Ty.path
                                                                                                                                                            "halo2_proofs::plonk::error::Error"
                                                                                                                                                        ],
                                                                                                                                                      [
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "core::result::Result")
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "core::convert::Infallible";
                                                                                                                                                            Ty.path
                                                                                                                                                              "halo2_proofs::plonk::error::Error"
                                                                                                                                                          ]
                                                                                                                                                      ],
                                                                                                                                                      "from_residual",
                                                                                                                                                      []
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      M.read (|
                                                                                                                                                        residual
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)));
                                                                                                                                      fun
                                                                                                                                          γ =>
                                                                                                                                        ltac:(M.monadic
                                                                                                                                          (let
                                                                                                                                                γ0_0 :=
                                                                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                                                                              γ,
                                                                                                                                              "core::ops::control_flow::ControlFlow::Continue",
                                                                                                                                              0
                                                                                                                                            |) in
                                                                                                                                          let
                                                                                                                                                val :=
                                                                                                                                            M.copy (|
                                                                                                                                              γ0_0
                                                                                                                                            |) in
                                                                                                                                          val))
                                                                                                                                    ]
                                                                                                                                  |) in
                                                                                                                                M.alloc (|
                                                                                                                                  Value.Tuple
                                                                                                                                    []
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |) in
                                                                                                                      M.alloc (|
                                                                                                                        Value.Tuple
                                                                                                                          []
                                                                                                                      |)))
                                                                                                                  |)))
                                                                                                            ]
                                                                                                          |)) in
                                                                                                      M.alloc (|
                                                                                                        Value.StructTuple
                                                                                                          "core::result::Result::Ok"
                                                                                                          [
                                                                                                            Value.Tuple
                                                                                                              []
                                                                                                          ]
                                                                                                      |)
                                                                                                    |)))
                                                                                              ]
                                                                                            |)
                                                                                          | _ =>
                                                                                            M.impossible (||)
                                                                                          end))
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |) in
                                                                        let _ :=
                                                                          let _ :=
                                                                            let time :=
                                                                              M.copy (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  timer,
                                                                                  "ark_std::perf_trace::inner::TimerInfo",
                                                                                  "time"
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "std::time::Instant",
                                                                                    "elapsed",
                                                                                    []
                                                                                  |),
                                                                                  [ time ]
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.copy (|
                                                                                let secs :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "as_secs",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let millis :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "subsec_millis",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let micros :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_micros",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                let nanos :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              BinOp.Pure.ne
                                                                                                (M.read (|
                                                                                                  secs
                                                                                                |))
                                                                                                (Value.Integer
                                                                                                  0)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          M.is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "colored::Colorize",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ],
                                                                                              [],
                                                                                              "bold",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.path
                                                                                                    "alloc::string::String",
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  let
                                                                                                        res :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_function (|
                                                                                                          "alloc::fmt::format",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "core::fmt::Arguments",
                                                                                                              "new_v1_formatted",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          ""
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "."
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "s"
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u64"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          secs
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u32"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          millis
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            []
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            1;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            8;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                3
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                  "new",
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  res
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      BinOp.Pure.gt
                                                                                                        (M.read (|
                                                                                                          millis
                                                                                                        |))
                                                                                                        (Value.Integer
                                                                                                          0)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  M.is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "colored::Colorize",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "bold",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          let
                                                                                                                res :=
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_function (|
                                                                                                                  "alloc::fmt::format",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.path
                                                                                                                        "core::fmt::Arguments",
                                                                                                                      "new_v1_formatted",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  ""
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "."
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "ms"
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  millis
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  micros
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    1;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    8;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Is"
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        3
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |) in
                                                                                                          res
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            (M.alloc (|
                                                                                                              BinOp.Pure.gt
                                                                                                                (M.read (|
                                                                                                                  micros
                                                                                                                |))
                                                                                                                (Value.Integer
                                                                                                                  0)
                                                                                                            |)) in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          M.is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1_formatted",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "."
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          (String.String
                                                                                                                                            "181"
                                                                                                                                            "s")
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          micros
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          nanos
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            []
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            1;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            8;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                3
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                []
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "ns"
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::time::Duration",
                                                                                                                                                "subsec_nanos",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                final_time
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let end_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "green",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "End:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let message :=
                                                                              M.copy (|
                                                                                let res :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "alloc::fmt::format",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          timer,
                                                                                                          "ark_std::perf_trace::inner::TimerInfo",
                                                                                                          "msg"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ]
                                                                                                                (Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]),
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            α0
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      | _ =>
                                                                                                                        M.impossible (||)
                                                                                                                      end))
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                res
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_sub",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      end_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      message
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      final_time
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "from_usize",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.alloc (|
                                                                                                        BinOp.Panic.sub (|
                                                                                                          Integer.Usize,
                                                                                                          Value.Integer
                                                                                                            75,
                                                                                                          M.read (|
                                                                                                            indent_amount
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        46;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Left"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Param"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            4
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        3;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |) in
                                                                        r in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _etable :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path "alloc::sync::Arc")
                                                      [
                                                        Ty.path
                                                          "delphinus_zkwasm::circuits::utils::table_entry::EventTableWithMemoryInfo";
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ etable ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let _ :=
                                                                        let timer :=
                                                                          M.copy (|
                                                                            let msg :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [ Ty.tuple []
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]),
                                                                                    [ Ty.tuple [] ],
                                                                                    "call",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.closure
                                                                                        (fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            match γ
                                                                                            with
                                                                                            | [ α0
                                                                                                ] =>
                                                                                              M.match_operator (|
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.read (|
                                                                                                        Value.String
                                                                                                          "Assign bit table"
                                                                                                      |)))
                                                                                                ]
                                                                                              |)
                                                                                            | _ =>
                                                                                              M.impossible (||)
                                                                                            end))
                                                                                    |);
                                                                                    Value.Tuple []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let start_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "yellow",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "Start:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      start_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      msg
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_add",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.StructRecord
                                                                                "ark_std::perf_trace::inner::TimerInfo"
                                                                                [
                                                                                  ("msg",
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "alloc::string::ToString",
                                                                                        Ty.path
                                                                                          "str",
                                                                                        [],
                                                                                        "to_string",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          msg
                                                                                        |)
                                                                                      ]
                                                                                    |));
                                                                                  ("time",
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "std::time::Instant",
                                                                                        "now",
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |))
                                                                                ]
                                                                            |)
                                                                          |) in
                                                                        let r :=
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::result::Result")
                                                                                  [
                                                                                    Ty.tuple [];
                                                                                    Ty.path
                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                  ],
                                                                                "unwrap",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "delphinus_zkwasm::circuits::bit_table::BitTableChip")
                                                                                      [ F ],
                                                                                    "assign",
                                                                                    [
                                                                                      impl_Layouter_F_
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    bit_chip;
                                                                                    M.read (|
                                                                                      _layouter
                                                                                    |);
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "delphinus_zkwasm::circuits::bit_table::BitTableTrait",
                                                                                        Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::table_entry::EventTableWithMemoryInfo",
                                                                                        [],
                                                                                        "filter_bit_table_entries",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.path
                                                                                                  "delphinus_zkwasm::circuits::utils::table_entry::EventTableWithMemoryInfo";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [ _etable
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |) in
                                                                        let _ :=
                                                                          let _ :=
                                                                            let time :=
                                                                              M.copy (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  timer,
                                                                                  "ark_std::perf_trace::inner::TimerInfo",
                                                                                  "time"
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "std::time::Instant",
                                                                                    "elapsed",
                                                                                    []
                                                                                  |),
                                                                                  [ time ]
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.copy (|
                                                                                let secs :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "as_secs",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let millis :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "subsec_millis",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let micros :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_micros",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                let nanos :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              BinOp.Pure.ne
                                                                                                (M.read (|
                                                                                                  secs
                                                                                                |))
                                                                                                (Value.Integer
                                                                                                  0)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          M.is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "colored::Colorize",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ],
                                                                                              [],
                                                                                              "bold",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.path
                                                                                                    "alloc::string::String",
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  let
                                                                                                        res :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_function (|
                                                                                                          "alloc::fmt::format",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "core::fmt::Arguments",
                                                                                                              "new_v1_formatted",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          ""
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "."
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "s"
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u64"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          secs
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u32"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          millis
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            []
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            1;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            8;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                3
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                  "new",
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  res
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      BinOp.Pure.gt
                                                                                                        (M.read (|
                                                                                                          millis
                                                                                                        |))
                                                                                                        (Value.Integer
                                                                                                          0)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  M.is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "colored::Colorize",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "bold",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          let
                                                                                                                res :=
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_function (|
                                                                                                                  "alloc::fmt::format",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.path
                                                                                                                        "core::fmt::Arguments",
                                                                                                                      "new_v1_formatted",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  ""
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "."
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "ms"
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  millis
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  micros
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    1;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    8;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Is"
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        3
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |) in
                                                                                                          res
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            (M.alloc (|
                                                                                                              BinOp.Pure.gt
                                                                                                                (M.read (|
                                                                                                                  micros
                                                                                                                |))
                                                                                                                (Value.Integer
                                                                                                                  0)
                                                                                                            |)) in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          M.is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1_formatted",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "."
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          (String.String
                                                                                                                                            "181"
                                                                                                                                            "s")
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          micros
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          nanos
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            []
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            1;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            8;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                3
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                []
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "ns"
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::time::Duration",
                                                                                                                                                "subsec_nanos",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                final_time
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let end_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "green",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "End:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let message :=
                                                                              M.copy (|
                                                                                let res :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "alloc::fmt::format",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          timer,
                                                                                                          "ark_std::perf_trace::inner::TimerInfo",
                                                                                                          "msg"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ]
                                                                                                                (Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]),
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            α0
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      | _ =>
                                                                                                                        M.impossible (||)
                                                                                                                      end))
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                res
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_sub",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      end_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      message
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      final_time
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "from_usize",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.alloc (|
                                                                                                        BinOp.Panic.sub (|
                                                                                                          Integer.Usize,
                                                                                                          Value.Integer
                                                                                                            75,
                                                                                                          M.read (|
                                                                                                            indent_amount
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        46;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Left"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Param"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            4
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        3;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |) in
                                                                        r in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let _ :=
                                                                        let timer :=
                                                                          M.copy (|
                                                                            let msg :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [ Ty.tuple []
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]),
                                                                                    [ Ty.tuple [] ],
                                                                                    "call",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.closure
                                                                                        (fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            match γ
                                                                                            with
                                                                                            | [ α0
                                                                                                ] =>
                                                                                              M.match_operator (|
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.read (|
                                                                                                        Value.String
                                                                                                          "Assign external host call table"
                                                                                                      |)))
                                                                                                ]
                                                                                              |)
                                                                                            | _ =>
                                                                                              M.impossible (||)
                                                                                            end))
                                                                                    |);
                                                                                    Value.Tuple []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let start_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "yellow",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "Start:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      start_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      msg
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_add",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.StructRecord
                                                                                "ark_std::perf_trace::inner::TimerInfo"
                                                                                [
                                                                                  ("msg",
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "alloc::string::ToString",
                                                                                        Ty.path
                                                                                          "str",
                                                                                        [],
                                                                                        "to_string",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          msg
                                                                                        |)
                                                                                      ]
                                                                                    |));
                                                                                  ("time",
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "std::time::Instant",
                                                                                        "now",
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |))
                                                                                ]
                                                                            |)
                                                                          |) in
                                                                        let r :=
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::result::Result")
                                                                                  [
                                                                                    Ty.tuple [];
                                                                                    Ty.path
                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                  ],
                                                                                "unwrap",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallChip")
                                                                                      [ F ],
                                                                                    "assign",
                                                                                    [
                                                                                      impl_Layouter_F_
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      external_host_call_chip
                                                                                    |);
                                                                                    M.read (|
                                                                                      _layouter
                                                                                    |);
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "specs::etable::EventTable",
                                                                                          "filter_external_host_call_table",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::deref::Deref",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::sync::Arc")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "specs::etable::EventTable";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ],
                                                                                              [],
                                                                                              "deref",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                  M.read (|
                                                                                                    self
                                                                                                  |),
                                                                                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                  "slice"
                                                                                                |),
                                                                                                "specs::slice::Slice",
                                                                                                "etable"
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |) in
                                                                        let _ :=
                                                                          let _ :=
                                                                            let time :=
                                                                              M.copy (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  timer,
                                                                                  "ark_std::perf_trace::inner::TimerInfo",
                                                                                  "time"
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "std::time::Instant",
                                                                                    "elapsed",
                                                                                    []
                                                                                  |),
                                                                                  [ time ]
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.copy (|
                                                                                let secs :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "as_secs",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let millis :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "subsec_millis",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let micros :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_micros",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                let nanos :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              BinOp.Pure.ne
                                                                                                (M.read (|
                                                                                                  secs
                                                                                                |))
                                                                                                (Value.Integer
                                                                                                  0)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          M.is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "colored::Colorize",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ],
                                                                                              [],
                                                                                              "bold",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.path
                                                                                                    "alloc::string::String",
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  let
                                                                                                        res :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_function (|
                                                                                                          "alloc::fmt::format",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "core::fmt::Arguments",
                                                                                                              "new_v1_formatted",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          ""
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "."
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "s"
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u64"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          secs
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u32"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          millis
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            []
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            1;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            8;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                3
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                  "new",
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  res
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      BinOp.Pure.gt
                                                                                                        (M.read (|
                                                                                                          millis
                                                                                                        |))
                                                                                                        (Value.Integer
                                                                                                          0)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  M.is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "colored::Colorize",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "bold",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          let
                                                                                                                res :=
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_function (|
                                                                                                                  "alloc::fmt::format",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.path
                                                                                                                        "core::fmt::Arguments",
                                                                                                                      "new_v1_formatted",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  ""
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "."
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "ms"
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  millis
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  micros
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    1;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    8;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Is"
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        3
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |) in
                                                                                                          res
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            (M.alloc (|
                                                                                                              BinOp.Pure.gt
                                                                                                                (M.read (|
                                                                                                                  micros
                                                                                                                |))
                                                                                                                (Value.Integer
                                                                                                                  0)
                                                                                                            |)) in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          M.is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1_formatted",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "."
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          (String.String
                                                                                                                                            "181"
                                                                                                                                            "s")
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          micros
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          nanos
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            []
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            1;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            8;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                3
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                []
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "ns"
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::time::Duration",
                                                                                                                                                "subsec_nanos",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                final_time
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let end_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "green",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "End:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let message :=
                                                                              M.copy (|
                                                                                let res :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "alloc::fmt::format",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          timer,
                                                                                                          "ark_std::perf_trace::inner::TimerInfo",
                                                                                                          "msg"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ]
                                                                                                                (Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]),
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            α0
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      | _ =>
                                                                                                                        M.impossible (||)
                                                                                                                      end))
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                res
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_sub",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      end_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      message
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      final_time
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "from_usize",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.alloc (|
                                                                                                        BinOp.Panic.sub (|
                                                                                                          Integer.Usize,
                                                                                                          Value.Integer
                                                                                                            75,
                                                                                                          M.read (|
                                                                                                            indent_amount
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        46;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Left"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Param"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            4
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        3;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |) in
                                                                        r in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let _ :=
                                                                        let timer :=
                                                                          M.copy (|
                                                                            let msg :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [ Ty.tuple []
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]),
                                                                                    [ Ty.tuple [] ],
                                                                                    "call",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.closure
                                                                                        (fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            match γ
                                                                                            with
                                                                                            | [ α0
                                                                                                ] =>
                                                                                              M.match_operator (|
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.read (|
                                                                                                        Value.String
                                                                                                          "Assign context cont chip"
                                                                                                      |)))
                                                                                                ]
                                                                                              |)
                                                                                            | _ =>
                                                                                              M.impossible (||)
                                                                                            end))
                                                                                    |);
                                                                                    Value.Tuple []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let start_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "yellow",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "Start:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      start_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      msg
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_add",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.StructRecord
                                                                                "ark_std::perf_trace::inner::TimerInfo"
                                                                                [
                                                                                  ("msg",
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "alloc::string::ToString",
                                                                                        Ty.path
                                                                                          "str",
                                                                                        [],
                                                                                        "to_string",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          msg
                                                                                        |)
                                                                                      ]
                                                                                    |));
                                                                                  ("time",
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "std::time::Instant",
                                                                                        "now",
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |))
                                                                                ]
                                                                            |)
                                                                          |) in
                                                                        let r :=
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::result::Result")
                                                                                  [
                                                                                    Ty.tuple [];
                                                                                    Ty.path
                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                  ],
                                                                                "unwrap",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "delphinus_zkwasm::foreign::context::circuits::assign::ContextContHelperTableChip")
                                                                                      [ F ],
                                                                                    "assign",
                                                                                    [
                                                                                      impl_Layouter_F_
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    context_chip;
                                                                                    M.read (|
                                                                                      _layouter
                                                                                    |);
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_trait_method (|
                                                                                          "delphinus_zkwasm::foreign::context::circuits::assign::ExtractContextFromTrace",
                                                                                          Ty.path
                                                                                            "specs::etable::EventTable",
                                                                                          [],
                                                                                          "get_context_inputs",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::deref::Deref",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::sync::Arc")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "specs::etable::EventTable";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ],
                                                                                              [],
                                                                                              "deref",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                  M.read (|
                                                                                                    self
                                                                                                  |),
                                                                                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                  "slice"
                                                                                                |),
                                                                                                "specs::slice::Slice",
                                                                                                "etable"
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |);
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_trait_method (|
                                                                                          "delphinus_zkwasm::foreign::context::circuits::assign::ExtractContextFromTrace",
                                                                                          Ty.path
                                                                                            "specs::etable::EventTable",
                                                                                          [],
                                                                                          "get_context_outputs",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::deref::Deref",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::sync::Arc")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "specs::etable::EventTable";
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ],
                                                                                              [],
                                                                                              "deref",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                  M.read (|
                                                                                                    self
                                                                                                  |),
                                                                                                  "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                  "slice"
                                                                                                |),
                                                                                                "specs::slice::Slice",
                                                                                                "etable"
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |) in
                                                                        let _ :=
                                                                          let _ :=
                                                                            let time :=
                                                                              M.copy (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  timer,
                                                                                  "ark_std::perf_trace::inner::TimerInfo",
                                                                                  "time"
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "std::time::Instant",
                                                                                    "elapsed",
                                                                                    []
                                                                                  |),
                                                                                  [ time ]
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.copy (|
                                                                                let secs :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "as_secs",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let millis :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "subsec_millis",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let micros :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_micros",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                let nanos :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              BinOp.Pure.ne
                                                                                                (M.read (|
                                                                                                  secs
                                                                                                |))
                                                                                                (Value.Integer
                                                                                                  0)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          M.is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "colored::Colorize",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ],
                                                                                              [],
                                                                                              "bold",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.path
                                                                                                    "alloc::string::String",
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  let
                                                                                                        res :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_function (|
                                                                                                          "alloc::fmt::format",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "core::fmt::Arguments",
                                                                                                              "new_v1_formatted",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          ""
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "."
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "s"
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u64"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          secs
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u32"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          millis
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            []
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            1;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            8;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                3
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                  "new",
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  res
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      BinOp.Pure.gt
                                                                                                        (M.read (|
                                                                                                          millis
                                                                                                        |))
                                                                                                        (Value.Integer
                                                                                                          0)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  M.is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "colored::Colorize",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "bold",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          let
                                                                                                                res :=
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_function (|
                                                                                                                  "alloc::fmt::format",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.path
                                                                                                                        "core::fmt::Arguments",
                                                                                                                      "new_v1_formatted",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  ""
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "."
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "ms"
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  millis
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  micros
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    1;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    8;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Is"
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        3
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |) in
                                                                                                          res
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            (M.alloc (|
                                                                                                              BinOp.Pure.gt
                                                                                                                (M.read (|
                                                                                                                  micros
                                                                                                                |))
                                                                                                                (Value.Integer
                                                                                                                  0)
                                                                                                            |)) in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          M.is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1_formatted",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "."
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          (String.String
                                                                                                                                            "181"
                                                                                                                                            "s")
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          micros
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          nanos
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            []
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            1;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            8;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                3
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                []
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "ns"
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::time::Duration",
                                                                                                                                                "subsec_nanos",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                final_time
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let end_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "green",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "End:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let message :=
                                                                              M.copy (|
                                                                                let res :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "alloc::fmt::format",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          timer,
                                                                                                          "ark_std::perf_trace::inner::TimerInfo",
                                                                                                          "msg"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ]
                                                                                                                (Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]),
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            α0
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      | _ =>
                                                                                                                        M.impossible (||)
                                                                                                                      end))
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                res
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_sub",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      end_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      message
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      final_time
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "from_usize",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.alloc (|
                                                                                                        BinOp.Panic.sub (|
                                                                                                          Integer.Usize,
                                                                                                          Value.Integer
                                                                                                            75,
                                                                                                          M.read (|
                                                                                                            indent_amount
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        46;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Left"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Param"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            4
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        3;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |) in
                                                                        r in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _assigned_cells :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells")
                                                      [ F ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ assigned_cells ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let pre_image_table :=
                                                                        M.alloc (|
                                                                          M.call_closure (|
                                                                            M.get_trait_method (|
                                                                              "delphinus_zkwasm::circuits::utils::image_table::EncodeImageTable",
                                                                              Ty.path
                                                                                "specs::slice::Slice",
                                                                              [ F ],
                                                                              "encode_pre_compilation_table_values",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.SubPointer.get_struct_record_field (|
                                                                                M.read (| self |),
                                                                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                "slice"
                                                                              |);
                                                                              M.read (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  config,
                                                                                  "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                                                                                  "k"
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |) in
                                                                      let cells :=
                                                                        M.copy (|
                                                                          let timer :=
                                                                            M.copy (|
                                                                              let msg :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::function::Fn",
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            []
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ]),
                                                                                      [ Ty.tuple []
                                                                                      ],
                                                                                      "call",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.alloc (|
                                                                                        M.closure
                                                                                          (fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              match
                                                                                                γ
                                                                                              with
                                                                                              | [ α0
                                                                                                  ] =>
                                                                                                M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    α0
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.read (|
                                                                                                          Value.String
                                                                                                            "Assign pre image table chip"
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)
                                                                                              | _ =>
                                                                                                M.impossible (||)
                                                                                              end))
                                                                                      |);
                                                                                      Value.Tuple []
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let start_info :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "colored::Colorize",
                                                                                      Ty.path
                                                                                        "colored::ColoredString",
                                                                                      [],
                                                                                      "bold",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_trait_method (|
                                                                                          "colored::Colorize",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            [
                                                                                              Ty.path
                                                                                                "str"
                                                                                            ],
                                                                                          [],
                                                                                          "yellow",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            Value.String
                                                                                              "Start:"
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let indent_amount :=
                                                                                M.alloc (|
                                                                                  BinOp.Panic.mul (|
                                                                                    Integer.Usize,
                                                                                    Value.Integer 2,
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::sync::atomic::AtomicUsize",
                                                                                        "fetch_add",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          M.get_constant (|
                                                                                            "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                          |)
                                                                                        |);
                                                                                        Value.Integer
                                                                                          0;
                                                                                        Value.StructTuple
                                                                                          "core::sync::atomic::Ordering::Relaxed"
                                                                                          []
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |) in
                                                                              let indent :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "ark_std::perf_trace::inner::compute_indent",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        indent_amount
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let _ :=
                                                                                let _ :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "std::io::stdio::_print",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1_formatted",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        "
"
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        indent
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "colored::ColoredString"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        start_info
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        msg
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                        "new",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.UnicodeChar
                                                                                                          32;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                                                          [];
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          [];
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          []
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                        "new",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        Value.Integer
                                                                                                          1;
                                                                                                        Value.UnicodeChar
                                                                                                          32;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                                                          [];
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          [];
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Is"
                                                                                                          [
                                                                                                            Value.Integer
                                                                                                              8
                                                                                                          ]
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                        "new",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        Value.Integer
                                                                                                          2;
                                                                                                        Value.UnicodeChar
                                                                                                          32;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                                                          [];
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          [];
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          []
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.path
                                                                                                  "core::fmt::rt::UnsafeArg",
                                                                                                "new",
                                                                                                []
                                                                                              |),
                                                                                              []
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  Value.Tuple []
                                                                                |) in
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        1;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.StructRecord
                                                                                  "ark_std::perf_trace::inner::TimerInfo"
                                                                                  [
                                                                                    ("msg",
                                                                                      M.call_closure (|
                                                                                        M.get_trait_method (|
                                                                                          "alloc::string::ToString",
                                                                                          Ty.path
                                                                                            "str",
                                                                                          [],
                                                                                          "to_string",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            msg
                                                                                          |)
                                                                                        ]
                                                                                      |));
                                                                                    ("time",
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "std::time::Instant",
                                                                                          "now",
                                                                                          []
                                                                                        |),
                                                                                        []
                                                                                      |))
                                                                                  ]
                                                                              |)
                                                                            |) in
                                                                          let r :=
                                                                            M.alloc (|
                                                                              M.call_closure (|
                                                                                M.get_associated_function (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::result::Result")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                            [ F; F ]
                                                                                        ];
                                                                                      Ty.path
                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                    ],
                                                                                  "unwrap",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::image_table::ImageTableChip")
                                                                                        [ F ],
                                                                                      "assign",
                                                                                      [
                                                                                        impl_Layouter_F_
                                                                                      ]
                                                                                    |),
                                                                                    [
                                                                                      image_chip;
                                                                                      M.read (|
                                                                                        _layouter
                                                                                      |);
                                                                                      image_table_assigner;
                                                                                      M.read (|
                                                                                        pre_image_table
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |) in
                                                                          let _ :=
                                                                            let _ :=
                                                                              let time :=
                                                                                M.copy (|
                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                    timer,
                                                                                    "ark_std::perf_trace::inner::TimerInfo",
                                                                                    "time"
                                                                                  |)
                                                                                |) in
                                                                              let final_time :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "std::time::Instant",
                                                                                      "elapsed",
                                                                                      []
                                                                                    |),
                                                                                    [ time ]
                                                                                  |)
                                                                                |) in
                                                                              let final_time :=
                                                                                M.copy (|
                                                                                  let secs :=
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "as_secs",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |)
                                                                                    |) in
                                                                                  let millis :=
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_millis",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |)
                                                                                    |) in
                                                                                  let micros :=
                                                                                    M.alloc (|
                                                                                      BinOp.Panic.rem (|
                                                                                        Integer.U32,
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::time::Duration",
                                                                                            "subsec_micros",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            final_time
                                                                                          ]
                                                                                        |),
                                                                                        Value.Integer
                                                                                          1000
                                                                                      |)
                                                                                    |) in
                                                                                  let nanos :=
                                                                                    M.alloc (|
                                                                                      BinOp.Panic.rem (|
                                                                                        Integer.U32,
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::time::Duration",
                                                                                            "subsec_nanos",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            final_time
                                                                                          ]
                                                                                        |),
                                                                                        Value.Integer
                                                                                          1000
                                                                                      |)
                                                                                    |) in
                                                                                  M.match_operator (|
                                                                                    M.alloc (|
                                                                                      Value.Tuple []
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let γ :=
                                                                                            M.use
                                                                                              (M.alloc (|
                                                                                                BinOp.Pure.ne
                                                                                                  (M.read (|
                                                                                                    secs
                                                                                                  |))
                                                                                                  (Value.Integer
                                                                                                    0)
                                                                                              |)) in
                                                                                          let _ :=
                                                                                            M.is_constant_or_break_match (|
                                                                                              M.read (|
                                                                                                γ
                                                                                              |),
                                                                                              Value.Bool
                                                                                                true
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              M.get_trait_method (|
                                                                                                "colored::Colorize",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "str"
                                                                                                  ],
                                                                                                [],
                                                                                                "bold",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.call_closure (|
                                                                                                  M.get_trait_method (|
                                                                                                    "core::ops::deref::Deref",
                                                                                                    Ty.path
                                                                                                      "alloc::string::String",
                                                                                                    [],
                                                                                                    "deref",
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    let
                                                                                                          res :=
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_function (|
                                                                                                            "alloc::fmt::format",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.call_closure (|
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.path
                                                                                                                  "core::fmt::Arguments",
                                                                                                                "new_v1_formatted",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                (* Unsize *)
                                                                                                                M.pointer_coercion
                                                                                                                  (M.alloc (|
                                                                                                                    Value.Array
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          Value.String
                                                                                                                            ""
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          Value.String
                                                                                                                            "."
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          Value.String
                                                                                                                            "s"
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                  |));
                                                                                                                (* Unsize *)
                                                                                                                M.pointer_coercion
                                                                                                                  (M.alloc (|
                                                                                                                    Value.Array
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.path
                                                                                                                              "core::fmt::rt::Argument",
                                                                                                                            "new_display",
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "u64"
                                                                                                                            ]
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            secs
                                                                                                                          ]
                                                                                                                        |);
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.path
                                                                                                                              "core::fmt::rt::Argument",
                                                                                                                            "new_display",
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "u32"
                                                                                                                            ]
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            millis
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                  |));
                                                                                                                (* Unsize *)
                                                                                                                M.pointer_coercion
                                                                                                                  (M.alloc (|
                                                                                                                    Value.Array
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.path
                                                                                                                              "core::fmt::rt::Placeholder",
                                                                                                                            "new",
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            Value.Integer
                                                                                                                              0;
                                                                                                                            Value.UnicodeChar
                                                                                                                              32;
                                                                                                                            Value.StructTuple
                                                                                                                              "core::fmt::rt::Alignment::Unknown"
                                                                                                                              [];
                                                                                                                            Value.Integer
                                                                                                                              0;
                                                                                                                            Value.StructTuple
                                                                                                                              "core::fmt::rt::Count::Implied"
                                                                                                                              [];
                                                                                                                            Value.StructTuple
                                                                                                                              "core::fmt::rt::Count::Implied"
                                                                                                                              []
                                                                                                                          ]
                                                                                                                        |);
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.path
                                                                                                                              "core::fmt::rt::Placeholder",
                                                                                                                            "new",
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            Value.Integer
                                                                                                                              1;
                                                                                                                            Value.UnicodeChar
                                                                                                                              32;
                                                                                                                            Value.StructTuple
                                                                                                                              "core::fmt::rt::Alignment::Unknown"
                                                                                                                              [];
                                                                                                                            Value.Integer
                                                                                                                              8;
                                                                                                                            Value.StructTuple
                                                                                                                              "core::fmt::rt::Count::Implied"
                                                                                                                              [];
                                                                                                                            Value.StructTuple
                                                                                                                              "core::fmt::rt::Count::Is"
                                                                                                                              [
                                                                                                                                Value.Integer
                                                                                                                                  3
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                  |));
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.path
                                                                                                                      "core::fmt::rt::UnsafeArg",
                                                                                                                    "new",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  []
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |) in
                                                                                                    res
                                                                                                  ]
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |)));
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (M.match_operator (|
                                                                                            M.alloc (|
                                                                                              Value.Tuple
                                                                                                []
                                                                                            |),
                                                                                            [
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ :=
                                                                                                    M.use
                                                                                                      (M.alloc (|
                                                                                                        BinOp.Pure.gt
                                                                                                          (M.read (|
                                                                                                            millis
                                                                                                          |))
                                                                                                          (Value.Integer
                                                                                                            0)
                                                                                                      |)) in
                                                                                                  let
                                                                                                        _ :=
                                                                                                    M.is_constant_or_break_match (|
                                                                                                      M.read (|
                                                                                                        γ
                                                                                                      |),
                                                                                                      Value.Bool
                                                                                                        true
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    M.call_closure (|
                                                                                                      M.get_trait_method (|
                                                                                                        "colored::Colorize",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ],
                                                                                                        [],
                                                                                                        "bold",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::deref::Deref",
                                                                                                            Ty.path
                                                                                                              "alloc::string::String",
                                                                                                            [],
                                                                                                            "deref",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            let
                                                                                                                  res :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  M.get_function (|
                                                                                                                    "alloc::fmt::format",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.path
                                                                                                                          "core::fmt::Arguments",
                                                                                                                        "new_v1_formatted",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        (* Unsize *)
                                                                                                                        M.pointer_coercion
                                                                                                                          (M.alloc (|
                                                                                                                            Value.Array
                                                                                                                              [
                                                                                                                                M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |);
                                                                                                                                M.read (|
                                                                                                                                  Value.String
                                                                                                                                    "."
                                                                                                                                |);
                                                                                                                                M.read (|
                                                                                                                                  Value.String
                                                                                                                                    "ms"
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                          |));
                                                                                                                        (* Unsize *)
                                                                                                                        M.pointer_coercion
                                                                                                                          (M.alloc (|
                                                                                                                            Value.Array
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_associated_function (|
                                                                                                                                    Ty.path
                                                                                                                                      "core::fmt::rt::Argument",
                                                                                                                                    "new_display",
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "u32"
                                                                                                                                    ]
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    millis
                                                                                                                                  ]
                                                                                                                                |);
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_associated_function (|
                                                                                                                                    Ty.path
                                                                                                                                      "core::fmt::rt::Argument",
                                                                                                                                    "new_display",
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "u32"
                                                                                                                                    ]
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    micros
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                          |));
                                                                                                                        (* Unsize *)
                                                                                                                        M.pointer_coercion
                                                                                                                          (M.alloc (|
                                                                                                                            Value.Array
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_associated_function (|
                                                                                                                                    Ty.path
                                                                                                                                      "core::fmt::rt::Placeholder",
                                                                                                                                    "new",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    Value.Integer
                                                                                                                                      0;
                                                                                                                                    Value.UnicodeChar
                                                                                                                                      32;
                                                                                                                                    Value.StructTuple
                                                                                                                                      "core::fmt::rt::Alignment::Unknown"
                                                                                                                                      [];
                                                                                                                                    Value.Integer
                                                                                                                                      0;
                                                                                                                                    Value.StructTuple
                                                                                                                                      "core::fmt::rt::Count::Implied"
                                                                                                                                      [];
                                                                                                                                    Value.StructTuple
                                                                                                                                      "core::fmt::rt::Count::Implied"
                                                                                                                                      []
                                                                                                                                  ]
                                                                                                                                |);
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_associated_function (|
                                                                                                                                    Ty.path
                                                                                                                                      "core::fmt::rt::Placeholder",
                                                                                                                                    "new",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    Value.Integer
                                                                                                                                      1;
                                                                                                                                    Value.UnicodeChar
                                                                                                                                      32;
                                                                                                                                    Value.StructTuple
                                                                                                                                      "core::fmt::rt::Alignment::Unknown"
                                                                                                                                      [];
                                                                                                                                    Value.Integer
                                                                                                                                      8;
                                                                                                                                    Value.StructTuple
                                                                                                                                      "core::fmt::rt::Count::Implied"
                                                                                                                                      [];
                                                                                                                                    Value.StructTuple
                                                                                                                                      "core::fmt::rt::Count::Is"
                                                                                                                                      [
                                                                                                                                        Value.Integer
                                                                                                                                          3
                                                                                                                                      ]
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                          |));
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.path
                                                                                                                              "core::fmt::rt::UnsafeArg",
                                                                                                                            "new",
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          []
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            res
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)));
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (M.match_operator (|
                                                                                                    M.alloc (|
                                                                                                      Value.Tuple
                                                                                                        []
                                                                                                    |),
                                                                                                    [
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (let
                                                                                                                γ :=
                                                                                                            M.use
                                                                                                              (M.alloc (|
                                                                                                                BinOp.Pure.gt
                                                                                                                  (M.read (|
                                                                                                                    micros
                                                                                                                  |))
                                                                                                                  (Value.Integer
                                                                                                                    0)
                                                                                                              |)) in
                                                                                                          let
                                                                                                                _ :=
                                                                                                            M.is_constant_or_break_match (|
                                                                                                              M.read (|
                                                                                                                γ
                                                                                                              |),
                                                                                                              Value.Bool
                                                                                                                true
                                                                                                            |) in
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "colored::Colorize",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ],
                                                                                                                [],
                                                                                                                "bold",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::ops::deref::Deref",
                                                                                                                    Ty.path
                                                                                                                      "alloc::string::String",
                                                                                                                    [],
                                                                                                                    "deref",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    let
                                                                                                                          res :=
                                                                                                                      M.alloc (|
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_function (|
                                                                                                                            "alloc::fmt::format",
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.path
                                                                                                                                  "core::fmt::Arguments",
                                                                                                                                "new_v1_formatted",
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                (* Unsize *)
                                                                                                                                M.pointer_coercion
                                                                                                                                  (M.alloc (|
                                                                                                                                    Value.Array
                                                                                                                                      [
                                                                                                                                        M.read (|
                                                                                                                                          Value.String
                                                                                                                                            ""
                                                                                                                                        |);
                                                                                                                                        M.read (|
                                                                                                                                          Value.String
                                                                                                                                            "."
                                                                                                                                        |);
                                                                                                                                        M.read (|
                                                                                                                                          Value.String
                                                                                                                                            (String.String
                                                                                                                                              "181"
                                                                                                                                              "s")
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                  |));
                                                                                                                                (* Unsize *)
                                                                                                                                M.pointer_coercion
                                                                                                                                  (M.alloc (|
                                                                                                                                    Value.Array
                                                                                                                                      [
                                                                                                                                        M.call_closure (|
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.path
                                                                                                                                              "core::fmt::rt::Argument",
                                                                                                                                            "new_display",
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "u32"
                                                                                                                                            ]
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            micros
                                                                                                                                          ]
                                                                                                                                        |);
                                                                                                                                        M.call_closure (|
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.path
                                                                                                                                              "core::fmt::rt::Argument",
                                                                                                                                            "new_display",
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "u32"
                                                                                                                                            ]
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            nanos
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                  |));
                                                                                                                                (* Unsize *)
                                                                                                                                M.pointer_coercion
                                                                                                                                  (M.alloc (|
                                                                                                                                    Value.Array
                                                                                                                                      [
                                                                                                                                        M.call_closure (|
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.path
                                                                                                                                              "core::fmt::rt::Placeholder",
                                                                                                                                            "new",
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            Value.Integer
                                                                                                                                              0;
                                                                                                                                            Value.UnicodeChar
                                                                                                                                              32;
                                                                                                                                            Value.StructTuple
                                                                                                                                              "core::fmt::rt::Alignment::Unknown"
                                                                                                                                              [];
                                                                                                                                            Value.Integer
                                                                                                                                              0;
                                                                                                                                            Value.StructTuple
                                                                                                                                              "core::fmt::rt::Count::Implied"
                                                                                                                                              [];
                                                                                                                                            Value.StructTuple
                                                                                                                                              "core::fmt::rt::Count::Implied"
                                                                                                                                              []
                                                                                                                                          ]
                                                                                                                                        |);
                                                                                                                                        M.call_closure (|
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.path
                                                                                                                                              "core::fmt::rt::Placeholder",
                                                                                                                                            "new",
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            Value.Integer
                                                                                                                                              1;
                                                                                                                                            Value.UnicodeChar
                                                                                                                                              32;
                                                                                                                                            Value.StructTuple
                                                                                                                                              "core::fmt::rt::Alignment::Unknown"
                                                                                                                                              [];
                                                                                                                                            Value.Integer
                                                                                                                                              8;
                                                                                                                                            Value.StructTuple
                                                                                                                                              "core::fmt::rt::Count::Implied"
                                                                                                                                              [];
                                                                                                                                            Value.StructTuple
                                                                                                                                              "core::fmt::rt::Count::Is"
                                                                                                                                              [
                                                                                                                                                Value.Integer
                                                                                                                                                  3
                                                                                                                                              ]
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                  |));
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_associated_function (|
                                                                                                                                    Ty.path
                                                                                                                                      "core::fmt::rt::UnsafeArg",
                                                                                                                                    "new",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  []
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      |) in
                                                                                                                    res
                                                                                                                  ]
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)));
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "colored::Colorize",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ],
                                                                                                                [],
                                                                                                                "bold",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::ops::deref::Deref",
                                                                                                                    Ty.path
                                                                                                                      "alloc::string::String",
                                                                                                                    [],
                                                                                                                    "deref",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    let
                                                                                                                          res :=
                                                                                                                      M.alloc (|
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_function (|
                                                                                                                            "alloc::fmt::format",
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.path
                                                                                                                                  "core::fmt::Arguments",
                                                                                                                                "new_v1",
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                (* Unsize *)
                                                                                                                                M.pointer_coercion
                                                                                                                                  (M.alloc (|
                                                                                                                                    Value.Array
                                                                                                                                      [
                                                                                                                                        M.read (|
                                                                                                                                          Value.String
                                                                                                                                            ""
                                                                                                                                        |);
                                                                                                                                        M.read (|
                                                                                                                                          Value.String
                                                                                                                                            "ns"
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                  |));
                                                                                                                                (* Unsize *)
                                                                                                                                M.pointer_coercion
                                                                                                                                  (M.alloc (|
                                                                                                                                    Value.Array
                                                                                                                                      [
                                                                                                                                        M.call_closure (|
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.path
                                                                                                                                              "core::fmt::rt::Argument",
                                                                                                                                            "new_display",
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "u32"
                                                                                                                                            ]
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.alloc (|
                                                                                                                                              M.call_closure (|
                                                                                                                                                M.get_associated_function (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "core::time::Duration",
                                                                                                                                                  "subsec_nanos",
                                                                                                                                                  []
                                                                                                                                                |),
                                                                                                                                                [
                                                                                                                                                  final_time
                                                                                                                                                ]
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                  |))
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      |) in
                                                                                                                    res
                                                                                                                  ]
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)))
                                                                                                    ]
                                                                                                  |)))
                                                                                            ]
                                                                                          |)))
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let end_info :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "colored::Colorize",
                                                                                      Ty.path
                                                                                        "colored::ColoredString",
                                                                                      [],
                                                                                      "bold",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_trait_method (|
                                                                                          "colored::Colorize",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            [
                                                                                              Ty.path
                                                                                                "str"
                                                                                            ],
                                                                                          [],
                                                                                          "green",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            Value.String
                                                                                              "End:"
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let message :=
                                                                                M.copy (|
                                                                                  let res :=
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_function (|
                                                                                          "alloc::fmt::format",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::Arguments",
                                                                                              "new_v1",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              (* Unsize *)
                                                                                              M.pointer_coercion
                                                                                                (M.alloc (|
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        Value.String
                                                                                                          ""
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        Value.String
                                                                                                          " "
                                                                                                      |)
                                                                                                    ]
                                                                                                |));
                                                                                              (* Unsize *)
                                                                                              M.pointer_coercion
                                                                                                (M.alloc (|
                                                                                                  Value.Array
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "core::fmt::rt::Argument",
                                                                                                          "new_display",
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "alloc::string::String"
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            timer,
                                                                                                            "ark_std::perf_trace::inner::TimerInfo",
                                                                                                            "msg"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "core::fmt::rt::Argument",
                                                                                                          "new_display",
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "str"
                                                                                                              ]
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "core::ops::function::Fn",
                                                                                                                Ty.function
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      []
                                                                                                                  ]
                                                                                                                  (Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "str"
                                                                                                                    ]),
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ],
                                                                                                                "call",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.alloc (|
                                                                                                                  M.closure
                                                                                                                    (fun
                                                                                                                        γ =>
                                                                                                                      ltac:(M.monadic
                                                                                                                        match
                                                                                                                          γ
                                                                                                                        with
                                                                                                                        | [
                                                                                                                              α0
                                                                                                                            ] =>
                                                                                                                          M.match_operator (|
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (M.read (|
                                                                                                                                    Value.String
                                                                                                                                      ""
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        | _ =>
                                                                                                                          M.impossible (||)
                                                                                                                        end))
                                                                                                                |);
                                                                                                                Value.Tuple
                                                                                                                  []
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                |))
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |) in
                                                                                  res
                                                                                |) in
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_sub",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        1;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let indent_amount :=
                                                                                M.alloc (|
                                                                                  BinOp.Panic.mul (|
                                                                                    Integer.Usize,
                                                                                    Value.Integer 2,
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::sync::atomic::AtomicUsize",
                                                                                        "fetch_add",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          M.get_constant (|
                                                                                            "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                          |)
                                                                                        |);
                                                                                        Value.Integer
                                                                                          0;
                                                                                        Value.StructTuple
                                                                                          "core::sync::atomic::Ordering::Relaxed"
                                                                                          []
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |) in
                                                                              let indent :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "ark_std::perf_trace::inner::compute_indent",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        indent_amount
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let _ :=
                                                                                let _ :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "std::io::stdio::_print",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1_formatted",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        "
"
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        indent
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "colored::ColoredString"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        end_info
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        message
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "colored::ColoredString"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        final_time
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "from_usize",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          BinOp.Panic.sub (|
                                                                                                            Integer.Usize,
                                                                                                            Value.Integer
                                                                                                              75,
                                                                                                            M.read (|
                                                                                                              indent_amount
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                        "new",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.UnicodeChar
                                                                                                          32;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                                                          [];
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          [];
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          []
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                        "new",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        Value.Integer
                                                                                                          1;
                                                                                                        Value.UnicodeChar
                                                                                                          32;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                                                          [];
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          [];
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Is"
                                                                                                          [
                                                                                                            Value.Integer
                                                                                                              8
                                                                                                          ]
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                        "new",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        Value.Integer
                                                                                                          2;
                                                                                                        Value.UnicodeChar
                                                                                                          46;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Alignment::Left"
                                                                                                          [];
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          [];
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Param"
                                                                                                          [
                                                                                                            Value.Integer
                                                                                                              4
                                                                                                          ]
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Placeholder",
                                                                                                        "new",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        Value.Integer
                                                                                                          3;
                                                                                                        Value.UnicodeChar
                                                                                                          32;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Alignment::Unknown"
                                                                                                          [];
                                                                                                        Value.Integer
                                                                                                          0;
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          [];
                                                                                                        Value.StructTuple
                                                                                                          "core::fmt::rt::Count::Implied"
                                                                                                          []
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.path
                                                                                                  "core::fmt::rt::UnsafeArg",
                                                                                                "new",
                                                                                                []
                                                                                              |),
                                                                                              []
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  Value.Tuple []
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          r
                                                                        |) in
                                                                      let _ :=
                                                                        M.write (|
                                                                          M.call_closure (|
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::DerefMut",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "std::sync::mutex::MutexGuard")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                            [ F; F ]
                                                                                        ]
                                                                                    ]
                                                                                ],
                                                                              [],
                                                                              "deref_mut",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::result::Result")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "std::sync::mutex::MutexGuard")
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "std::sync::poison::PoisonError")
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "std::sync::mutex::MutexGuard")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::option::Option")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                          [
                                                                                                            F;
                                                                                                            F
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    "unwrap",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "std::sync::mutex::Mutex")
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                        "lock",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "std::sync::mutex::Mutex")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::option::Option")
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                                              [
                                                                                                                F;
                                                                                                                F
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              _assigned_cells,
                                                                                              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                                                                              "pre_image_table_cells"
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |),
                                                                          Value.StructTuple
                                                                            "core::option::Option::Some"
                                                                            [ M.read (| cells |) ]
                                                                        |) in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _assigned_cells :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells")
                                                      [ F ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ assigned_cells ]
                                                |)
                                              |) in
                                            let _memory_writing_table :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path "alloc::sync::Arc")
                                                      [
                                                        Ty.path
                                                          "delphinus_zkwasm::circuits::utils::table_entry::MemoryWritingTable";
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ memory_writing_table ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let post_image_table :=
                                                                        M.alloc (|
                                                                          M.call_closure (|
                                                                            M.get_trait_method (|
                                                                              "delphinus_zkwasm::circuits::utils::image_table::EncodeImageTable",
                                                                              Ty.path
                                                                                "specs::slice::Slice",
                                                                              [ F ],
                                                                              "encode_post_compilation_table_values",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.SubPointer.get_struct_record_field (|
                                                                                M.read (| self |),
                                                                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                "slice"
                                                                              |);
                                                                              M.read (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  config,
                                                                                  "delphinus_zkwasm::circuits::zkwasm_circuit::ZkWasmCircuitConfig",
                                                                                  "k"
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |) in
                                                                      M.match_operator (|
                                                                        M.alloc (|
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.path
                                                                                "delphinus_zkwasm::circuits::utils::table_entry::MemoryWritingTable",
                                                                              "count_rest_memory_finalize_ops",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                M.get_trait_method (|
                                                                                  "core::ops::deref::Deref",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::sync::Arc")
                                                                                    [
                                                                                      Ty.path
                                                                                        "delphinus_zkwasm::circuits::utils::table_entry::MemoryWritingTable";
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ],
                                                                                  [],
                                                                                  "deref",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  _memory_writing_table
                                                                                ]
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (let γ0_0 :=
                                                                                M.SubPointer.get_tuple_field (|
                                                                                  γ,
                                                                                  0
                                                                                |) in
                                                                              let γ0_1 :=
                                                                                M.SubPointer.get_tuple_field (|
                                                                                  γ,
                                                                                  1
                                                                                |) in
                                                                              let
                                                                                    rest_memory_writing_ops :=
                                                                                M.copy (| γ0_0 |) in
                                                                              let
                                                                                    memory_finalized_set :=
                                                                                M.copy (| γ0_1 |) in
                                                                              let cells :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                    [
                                                                                                      F;
                                                                                                      F
                                                                                                    ]
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "halo2_proofs::plonk::error::Error"
                                                                                        ],
                                                                                      "unwrap",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "delphinus_zkwasm::circuits::post_image_table::PostImageTableChip")
                                                                                            [ F ],
                                                                                          "assign",
                                                                                          [
                                                                                            impl_Layouter_F_
                                                                                          ]
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            post_image_chip
                                                                                          |);
                                                                                          M.read (|
                                                                                            _layouter
                                                                                          |);
                                                                                          image_table_assigner;
                                                                                          M.read (|
                                                                                            post_image_table
                                                                                          |);
                                                                                          M.read (|
                                                                                            rest_memory_writing_ops
                                                                                          |);
                                                                                          M.read (|
                                                                                            memory_finalized_set
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              let _ :=
                                                                                M.write (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::deref::DerefMut",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "std::sync::mutex::MutexGuard")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::option::Option")
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                                            [
                                                                                                              F;
                                                                                                              F
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                      [],
                                                                                      "deref_mut",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.alloc (|
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::result::Result")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "std::sync::mutex::MutexGuard")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::option::Option")
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::option::Option")
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                                      [
                                                                                                                        F;
                                                                                                                        F
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                                  [
                                                                                                                    F;
                                                                                                                    F
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "std::sync::poison::PoisonError")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "std::sync::mutex::MutexGuard")
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::option::Option")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::option::Option")
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                                          [
                                                                                                                            F;
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ];
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                                      [
                                                                                                                        F;
                                                                                                                        F
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                            "unwrap",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "std::sync::mutex::Mutex")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::option::Option")
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::option::Option")
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                                      [
                                                                                                                        F;
                                                                                                                        F
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                                  [
                                                                                                                    F;
                                                                                                                    F
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ],
                                                                                                "lock",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.call_closure (|
                                                                                                  M.get_trait_method (|
                                                                                                    "core::ops::deref::Deref",
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::sync::Arc")
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "std::sync::mutex::Mutex")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::option::Option")
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::option::Option")
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                                                              [
                                                                                                                                F;
                                                                                                                                F
                                                                                                                              ]
                                                                                                                          ];
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                                          [
                                                                                                                            F;
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ],
                                                                                                    [],
                                                                                                    "deref",
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                      _assigned_cells,
                                                                                                      "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                                                                                      "post_image_table_cells"
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |),
                                                                                  Value.StructTuple
                                                                                    "core::option::Option::Some"
                                                                                    [
                                                                                      M.read (|
                                                                                        cells
                                                                                      |)
                                                                                    ]
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |)))
                                                                        ]
                                                                      |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _assigned_cells :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells")
                                                      [ F ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ assigned_cells ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let _ :=
                                                                        let timer :=
                                                                          M.copy (|
                                                                            let msg :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [ Ty.tuple []
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]),
                                                                                    [ Ty.tuple [] ],
                                                                                    "call",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.closure
                                                                                        (fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            match γ
                                                                                            with
                                                                                            | [ α0
                                                                                                ] =>
                                                                                              M.match_operator (|
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.read (|
                                                                                                        Value.String
                                                                                                          "Assign frame table"
                                                                                                      |)))
                                                                                                ]
                                                                                              |)
                                                                                            | _ =>
                                                                                              M.impossible (||)
                                                                                            end))
                                                                                    |);
                                                                                    Value.Tuple []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let start_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "yellow",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "Start:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      start_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      msg
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_add",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.StructRecord
                                                                                "ark_std::perf_trace::inner::TimerInfo"
                                                                                [
                                                                                  ("msg",
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "alloc::string::ToString",
                                                                                        Ty.path
                                                                                          "str",
                                                                                        [],
                                                                                        "to_string",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          msg
                                                                                        |)
                                                                                      ]
                                                                                    |));
                                                                                  ("time",
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "std::time::Instant",
                                                                                        "now",
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |))
                                                                                ]
                                                                            |)
                                                                          |) in
                                                                        let r :=
                                                                          M.copy (|
                                                                            M.match_operator (|
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::result::Result")
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                              [ F; F
                                                                                              ];
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "array")
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ];
                                                                                        Ty.path
                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                      ],
                                                                                    "unwrap",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "delphinus_zkwasm::circuits::jtable::JumpTableChip")
                                                                                          [ F ],
                                                                                        "assign",
                                                                                        [
                                                                                          impl_Layouter_F_
                                                                                        ]
                                                                                      |),
                                                                                      [
                                                                                        frame_table_chip;
                                                                                        M.read (|
                                                                                          _layouter
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "array")
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "specs::jtable::StaticFrameEntry"
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.read (|
                                                                                                  self
                                                                                                |),
                                                                                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                "slice"
                                                                                              |),
                                                                                              "specs::slice::Slice",
                                                                                              "static_jtable"
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.path
                                                                                                  "specs::jtable::JumpTable";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.read (|
                                                                                                  self
                                                                                                |),
                                                                                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                "slice"
                                                                                              |),
                                                                                              "specs::slice::Slice",
                                                                                              "frame_table"
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ,
                                                                                        0
                                                                                      |) in
                                                                                    let γ0_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ,
                                                                                        1
                                                                                      |) in
                                                                                    let
                                                                                          rest_jops_cell :=
                                                                                      M.copy (|
                                                                                        γ0_0
                                                                                      |) in
                                                                                    let
                                                                                          static_frame_entry_cells :=
                                                                                      M.copy (|
                                                                                        γ0_1
                                                                                      |) in
                                                                                    let _ :=
                                                                                      M.write (|
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::DerefMut",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "std::sync::mutex::MutexGuard")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::option::Option")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                            [],
                                                                                            "deref_mut",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::MutexGuard")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                                [
                                                                                                                  F;
                                                                                                                  F
                                                                                                                ]
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::poison::PoisonError")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "std::sync::mutex::MutexGuard")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  "unwrap",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::Mutex")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                                [
                                                                                                                  F;
                                                                                                                  F
                                                                                                                ]
                                                                                                            ]
                                                                                                        ],
                                                                                                      "lock",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::sync::Arc")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "std::sync::mutex::Mutex")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::option::Option")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          F
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ],
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            _assigned_cells,
                                                                                                            "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                                                                                            "rest_jops_cell_in_frame_table"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |),
                                                                                        Value.StructTuple
                                                                                          "core::option::Option::Some"
                                                                                          [
                                                                                            M.read (|
                                                                                              rest_jops_cell
                                                                                            |)
                                                                                          ]
                                                                                      |) in
                                                                                    let _ :=
                                                                                      M.write (|
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::DerefMut",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "std::sync::mutex::MutexGuard")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::option::Option")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "array")
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                                              [
                                                                                                                F;
                                                                                                                F
                                                                                                              ];
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                                              [
                                                                                                                F;
                                                                                                                F
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                            [],
                                                                                            "deref_mut",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::MutexGuard")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "array")
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          F
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          F
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::poison::PoisonError")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "std::sync::mutex::MutexGuard")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "array")
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                                                            [
                                                                                                                              F;
                                                                                                                              F
                                                                                                                            ];
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                                                            [
                                                                                                                              F;
                                                                                                                              F
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  "unwrap",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::Mutex")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "array")
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          F
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          F
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ],
                                                                                                      "lock",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::sync::Arc")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "std::sync::mutex::Mutex")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::option::Option")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "array")
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                                                [
                                                                                                                                  F;
                                                                                                                                  F
                                                                                                                                ];
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                                                [
                                                                                                                                  F;
                                                                                                                                  F
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ],
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            _assigned_cells,
                                                                                                            "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                                                                                            "static_frame_entry_in_frame_table"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |),
                                                                                        Value.StructTuple
                                                                                          "core::option::Option::Some"
                                                                                          [
                                                                                            M.read (|
                                                                                              static_frame_entry_cells
                                                                                            |)
                                                                                          ]
                                                                                      |) in
                                                                                    M.alloc (|
                                                                                      Value.Tuple []
                                                                                    |)))
                                                                              ]
                                                                            |)
                                                                          |) in
                                                                        let _ :=
                                                                          let _ :=
                                                                            let time :=
                                                                              M.copy (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  timer,
                                                                                  "ark_std::perf_trace::inner::TimerInfo",
                                                                                  "time"
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "std::time::Instant",
                                                                                    "elapsed",
                                                                                    []
                                                                                  |),
                                                                                  [ time ]
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.copy (|
                                                                                let secs :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "as_secs",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let millis :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "subsec_millis",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let micros :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_micros",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                let nanos :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              BinOp.Pure.ne
                                                                                                (M.read (|
                                                                                                  secs
                                                                                                |))
                                                                                                (Value.Integer
                                                                                                  0)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          M.is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "colored::Colorize",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ],
                                                                                              [],
                                                                                              "bold",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.path
                                                                                                    "alloc::string::String",
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  let
                                                                                                        res :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_function (|
                                                                                                          "alloc::fmt::format",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "core::fmt::Arguments",
                                                                                                              "new_v1_formatted",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          ""
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "."
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "s"
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u64"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          secs
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u32"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          millis
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            []
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            1;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            8;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                3
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                  "new",
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  res
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      BinOp.Pure.gt
                                                                                                        (M.read (|
                                                                                                          millis
                                                                                                        |))
                                                                                                        (Value.Integer
                                                                                                          0)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  M.is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "colored::Colorize",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "bold",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          let
                                                                                                                res :=
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_function (|
                                                                                                                  "alloc::fmt::format",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.path
                                                                                                                        "core::fmt::Arguments",
                                                                                                                      "new_v1_formatted",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  ""
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "."
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "ms"
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  millis
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  micros
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    1;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    8;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Is"
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        3
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |) in
                                                                                                          res
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            (M.alloc (|
                                                                                                              BinOp.Pure.gt
                                                                                                                (M.read (|
                                                                                                                  micros
                                                                                                                |))
                                                                                                                (Value.Integer
                                                                                                                  0)
                                                                                                            |)) in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          M.is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1_formatted",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "."
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          (String.String
                                                                                                                                            "181"
                                                                                                                                            "s")
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          micros
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          nanos
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            []
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            1;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            8;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                3
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                []
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "ns"
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::time::Duration",
                                                                                                                                                "subsec_nanos",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                final_time
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let end_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "green",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "End:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let message :=
                                                                              M.copy (|
                                                                                let res :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "alloc::fmt::format",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          timer,
                                                                                                          "ark_std::perf_trace::inner::TimerInfo",
                                                                                                          "msg"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ]
                                                                                                                (Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]),
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            α0
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      | _ =>
                                                                                                                        M.impossible (||)
                                                                                                                      end))
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                res
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_sub",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      end_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      message
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      final_time
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "from_usize",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.alloc (|
                                                                                                        BinOp.Panic.sub (|
                                                                                                          Integer.Usize,
                                                                                                          Value.Integer
                                                                                                            75,
                                                                                                          M.read (|
                                                                                                            indent_amount
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        46;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Left"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Param"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            4
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        3;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |) in
                                                                        r in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _assigned_cells :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells")
                                                      [ F ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ assigned_cells ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let _ :=
                                                                        let timer :=
                                                                          M.copy (|
                                                                            let msg :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [ Ty.tuple []
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]),
                                                                                    [ Ty.tuple [] ],
                                                                                    "call",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.closure
                                                                                        (fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            match γ
                                                                                            with
                                                                                            | [ α0
                                                                                                ] =>
                                                                                              M.match_operator (|
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.read (|
                                                                                                        Value.String
                                                                                                          "Assign mtable"
                                                                                                      |)))
                                                                                                ]
                                                                                              |)
                                                                                            | _ =>
                                                                                              M.impossible (||)
                                                                                            end))
                                                                                    |);
                                                                                    Value.Tuple []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let start_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "yellow",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "Start:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      start_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      msg
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_add",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.StructRecord
                                                                                "ark_std::perf_trace::inner::TimerInfo"
                                                                                [
                                                                                  ("msg",
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "alloc::string::ToString",
                                                                                        Ty.path
                                                                                          "str",
                                                                                        [],
                                                                                        "to_string",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          msg
                                                                                        |)
                                                                                      ]
                                                                                    |));
                                                                                  ("time",
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "std::time::Instant",
                                                                                        "now",
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |))
                                                                                ]
                                                                            |)
                                                                          |) in
                                                                        let r :=
                                                                          M.copy (|
                                                                            M.match_operator (|
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::result::Result")
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                              [ F; F
                                                                                              ];
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                  [
                                                                                                    F;
                                                                                                    F
                                                                                                  ]
                                                                                              ]
                                                                                          ];
                                                                                        Ty.path
                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                      ],
                                                                                    "unwrap",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "delphinus_zkwasm::circuits::mtable::MemoryTableChip")
                                                                                          [ F ],
                                                                                        "assign",
                                                                                        [
                                                                                          impl_Layouter_F_
                                                                                        ]
                                                                                      |),
                                                                                      [
                                                                                        mchip;
                                                                                        M.read (|
                                                                                          _layouter
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.path
                                                                                                  "delphinus_zkwasm::circuits::utils::table_entry::MemoryWritingTable";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            memory_writing_table
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ,
                                                                                        0
                                                                                      |) in
                                                                                    let γ0_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ,
                                                                                        1
                                                                                      |) in
                                                                                    let rest_mops :=
                                                                                      M.copy (|
                                                                                        γ0_0
                                                                                      |) in
                                                                                    let
                                                                                          rest_memory_finalize_ops_cell :=
                                                                                      M.copy (|
                                                                                        γ0_1
                                                                                      |) in
                                                                                    let _ :=
                                                                                      M.write (|
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::DerefMut",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "std::sync::mutex::MutexGuard")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::option::Option")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                            [],
                                                                                            "deref_mut",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::MutexGuard")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                                [
                                                                                                                  F;
                                                                                                                  F
                                                                                                                ]
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::poison::PoisonError")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "std::sync::mutex::MutexGuard")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  "unwrap",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::Mutex")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                                [
                                                                                                                  F;
                                                                                                                  F
                                                                                                                ]
                                                                                                            ]
                                                                                                        ],
                                                                                                      "lock",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::sync::Arc")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "std::sync::mutex::Mutex")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::option::Option")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          F
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ],
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            _assigned_cells,
                                                                                                            "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                                                                                            "mtable_rest_mops"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |),
                                                                                        Value.StructTuple
                                                                                          "core::option::Option::Some"
                                                                                          [
                                                                                            M.read (|
                                                                                              rest_mops
                                                                                            |)
                                                                                          ]
                                                                                      |) in
                                                                                    let _ :=
                                                                                      M.write (|
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::DerefMut",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "std::sync::mutex::MutexGuard")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::option::Option")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::option::Option")
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                          [
                                                                                                            F;
                                                                                                            F
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                            [],
                                                                                            "deref_mut",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::MutexGuard")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::poison::PoisonError")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "std::sync::mutex::MutexGuard")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::option::Option")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          F
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  "unwrap",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::Mutex")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ],
                                                                                                      "lock",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::sync::Arc")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "std::sync::mutex::Mutex")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::option::Option")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::option::Option")
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                                                            [
                                                                                                                              F;
                                                                                                                              F
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ],
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            _assigned_cells,
                                                                                                            "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                                                                                            "rest_memory_finalize_ops_cell"
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |),
                                                                                        Value.StructTuple
                                                                                          "core::option::Option::Some"
                                                                                          [
                                                                                            M.read (|
                                                                                              rest_memory_finalize_ops_cell
                                                                                            |)
                                                                                          ]
                                                                                      |) in
                                                                                    M.alloc (|
                                                                                      Value.Tuple []
                                                                                    |)))
                                                                              ]
                                                                            |)
                                                                          |) in
                                                                        let _ :=
                                                                          let _ :=
                                                                            let time :=
                                                                              M.copy (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  timer,
                                                                                  "ark_std::perf_trace::inner::TimerInfo",
                                                                                  "time"
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "std::time::Instant",
                                                                                    "elapsed",
                                                                                    []
                                                                                  |),
                                                                                  [ time ]
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.copy (|
                                                                                let secs :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "as_secs",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let millis :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "subsec_millis",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let micros :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_micros",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                let nanos :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              BinOp.Pure.ne
                                                                                                (M.read (|
                                                                                                  secs
                                                                                                |))
                                                                                                (Value.Integer
                                                                                                  0)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          M.is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "colored::Colorize",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ],
                                                                                              [],
                                                                                              "bold",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.path
                                                                                                    "alloc::string::String",
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  let
                                                                                                        res :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_function (|
                                                                                                          "alloc::fmt::format",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "core::fmt::Arguments",
                                                                                                              "new_v1_formatted",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          ""
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "."
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "s"
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u64"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          secs
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u32"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          millis
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            []
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            1;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            8;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                3
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                  "new",
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  res
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      BinOp.Pure.gt
                                                                                                        (M.read (|
                                                                                                          millis
                                                                                                        |))
                                                                                                        (Value.Integer
                                                                                                          0)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  M.is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "colored::Colorize",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "bold",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          let
                                                                                                                res :=
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_function (|
                                                                                                                  "alloc::fmt::format",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.path
                                                                                                                        "core::fmt::Arguments",
                                                                                                                      "new_v1_formatted",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  ""
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "."
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "ms"
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  millis
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  micros
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    1;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    8;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Is"
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        3
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |) in
                                                                                                          res
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            (M.alloc (|
                                                                                                              BinOp.Pure.gt
                                                                                                                (M.read (|
                                                                                                                  micros
                                                                                                                |))
                                                                                                                (Value.Integer
                                                                                                                  0)
                                                                                                            |)) in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          M.is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1_formatted",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "."
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          (String.String
                                                                                                                                            "181"
                                                                                                                                            "s")
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          micros
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          nanos
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            []
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            1;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            8;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                3
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                []
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "ns"
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::time::Duration",
                                                                                                                                                "subsec_nanos",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                final_time
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let end_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "green",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "End:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let message :=
                                                                              M.copy (|
                                                                                let res :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "alloc::fmt::format",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          timer,
                                                                                                          "ark_std::perf_trace::inner::TimerInfo",
                                                                                                          "msg"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ]
                                                                                                                (Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]),
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            α0
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      | _ =>
                                                                                                                        M.impossible (||)
                                                                                                                      end))
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                res
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_sub",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      end_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      message
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      final_time
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "from_usize",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.alloc (|
                                                                                                        BinOp.Panic.sub (|
                                                                                                          Integer.Usize,
                                                                                                          Value.Integer
                                                                                                            75,
                                                                                                          M.read (|
                                                                                                            indent_amount
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        46;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Left"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Param"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            4
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        3;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |) in
                                                                        r in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            let _layouter :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    impl_Layouter_F_,
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ layouter ]
                                                |)
                                              |) in
                                            let _assigned_cells :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells")
                                                      [ F ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ assigned_cells ]
                                                |)
                                              |) in
                                            let _ :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "rayon_core::scope::Scope",
                                                    "spawn",
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                [ Ty.path "rayon_core::scope::Scope"
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple [])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| s |);
                                                    M.closure
                                                      (fun γ =>
                                                        ltac:(M.monadic
                                                          match γ with
                                                          | [ α0 ] =>
                                                            M.match_operator (|
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.read (|
                                                                      let _ :=
                                                                        let timer :=
                                                                          M.copy (|
                                                                            let msg :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::function::Fn",
                                                                                    Ty.function
                                                                                      [ Ty.tuple []
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.path
                                                                                            "str"
                                                                                        ]),
                                                                                    [ Ty.tuple [] ],
                                                                                    "call",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.closure
                                                                                        (fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            match γ
                                                                                            with
                                                                                            | [ α0
                                                                                                ] =>
                                                                                              M.match_operator (|
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.read (|
                                                                                                        Value.String
                                                                                                          "Assign etable"
                                                                                                      |)))
                                                                                                ]
                                                                                              |)
                                                                                            | _ =>
                                                                                              M.impossible (||)
                                                                                            end))
                                                                                    |);
                                                                                    Value.Tuple []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let start_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "yellow",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "Start:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      start_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      msg
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_add",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.StructRecord
                                                                                "ark_std::perf_trace::inner::TimerInfo"
                                                                                [
                                                                                  ("msg",
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "alloc::string::ToString",
                                                                                        Ty.path
                                                                                          "str",
                                                                                        [],
                                                                                        "to_string",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          msg
                                                                                        |)
                                                                                      ]
                                                                                    |));
                                                                                  ("time",
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "std::time::Instant",
                                                                                        "now",
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |))
                                                                                ]
                                                                            |)
                                                                          |) in
                                                                        let r :=
                                                                          M.copy (|
                                                                            let cells :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::result::Result")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                                                          [ F ];
                                                                                        Ty.path
                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                      ],
                                                                                    "unwrap",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "delphinus_zkwasm::circuits::etable::EventTableChip")
                                                                                          [ F ],
                                                                                        "assign",
                                                                                        [
                                                                                          impl_Layouter_F_
                                                                                        ]
                                                                                      |),
                                                                                      [
                                                                                        echip;
                                                                                        M.read (|
                                                                                          _layouter
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.path
                                                                                                  "specs::itable::InstructionTable";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.read (|
                                                                                                  self
                                                                                                |),
                                                                                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                "slice"
                                                                                              |),
                                                                                              "specs::slice::Slice",
                                                                                              "itable"
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.path
                                                                                                  "delphinus_zkwasm::circuits::utils::table_entry::EventTableWithMemoryInfo";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [ etable ]
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.path
                                                                                                  "specs::configure_table::ConfigureTable";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.read (|
                                                                                                  self
                                                                                                |),
                                                                                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                "slice"
                                                                                              |),
                                                                                              "specs::slice::Slice",
                                                                                              "configure_table"
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "specs::state::InitializationState")
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "u32";
                                                                                                    Ty.path
                                                                                                      "num_bigint::biguint::BigUint"
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.read (|
                                                                                                  self
                                                                                                |),
                                                                                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                "slice"
                                                                                              |),
                                                                                              "specs::slice::Slice",
                                                                                              "initialization_state"
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::Deref",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::sync::Arc")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "specs::state::InitializationState")
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "u32";
                                                                                                    Ty.path
                                                                                                      "num_bigint::biguint::BigUint"
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            [],
                                                                                            "deref",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.read (|
                                                                                                  self
                                                                                                |),
                                                                                                "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                                "slice"
                                                                                              |),
                                                                                              "specs::slice::Slice",
                                                                                              "post_initialization_state"
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.read (|
                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                              M.read (|
                                                                                                self
                                                                                              |),
                                                                                              "delphinus_zkwasm::circuits::ZkWasmCircuit",
                                                                                              "slice"
                                                                                            |),
                                                                                            "specs::slice::Slice",
                                                                                            "is_last_slice"
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              M.write (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::deref::DerefMut",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "std::sync::mutex::MutexGuard")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                                                              [ F ]
                                                                                          ]
                                                                                      ],
                                                                                    [],
                                                                                    "deref_mut",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::result::Result")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "std::sync::mutex::MutexGuard")
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::option::Option")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                                                                        [
                                                                                                          F
                                                                                                        ]
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "std::sync::poison::PoisonError")
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "std::sync::mutex::MutexGuard")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::option::Option")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                                                                            [
                                                                                                              F
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ],
                                                                                          "unwrap",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "std::sync::mutex::Mutex")
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::option::Option")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                                                                        [
                                                                                                          F
                                                                                                        ]
                                                                                                    ]
                                                                                                ],
                                                                                              "lock",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::sync::Arc")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "std::sync::mutex::Mutex")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                                                                                [
                                                                                                                  F
                                                                                                                ]
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ],
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                    _assigned_cells,
                                                                                                    "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                                                                                    "etable_cells"
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |),
                                                                                Value.StructTuple
                                                                                  "core::option::Option::Some"
                                                                                  [
                                                                                    M.read (|
                                                                                      cells
                                                                                    |)
                                                                                  ]
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |)
                                                                          |) in
                                                                        let _ :=
                                                                          let _ :=
                                                                            let time :=
                                                                              M.copy (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  timer,
                                                                                  "ark_std::perf_trace::inner::TimerInfo",
                                                                                  "time"
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "std::time::Instant",
                                                                                    "elapsed",
                                                                                    []
                                                                                  |),
                                                                                  [ time ]
                                                                                |)
                                                                              |) in
                                                                            let final_time :=
                                                                              M.copy (|
                                                                                let secs :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "as_secs",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let millis :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "core::time::Duration",
                                                                                        "subsec_millis",
                                                                                        []
                                                                                      |),
                                                                                      [ final_time ]
                                                                                    |)
                                                                                  |) in
                                                                                let micros :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_micros",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                let nanos :=
                                                                                  M.alloc (|
                                                                                    BinOp.Panic.rem (|
                                                                                      Integer.U32,
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |),
                                                                                      Value.Integer
                                                                                        1000
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              BinOp.Pure.ne
                                                                                                (M.read (|
                                                                                                  secs
                                                                                                |))
                                                                                                (Value.Integer
                                                                                                  0)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          M.is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "colored::Colorize",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ],
                                                                                              [],
                                                                                              "bold",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::Deref",
                                                                                                  Ty.path
                                                                                                    "alloc::string::String",
                                                                                                  [],
                                                                                                  "deref",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  let
                                                                                                        res :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_function (|
                                                                                                          "alloc::fmt::format",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "core::fmt::Arguments",
                                                                                                              "new_v1_formatted",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          ""
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "."
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        Value.String
                                                                                                                          "s"
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u64"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          secs
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                          "new_display",
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "u32"
                                                                                                                          ]
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          millis
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              (* Unsize *)
                                                                                                              M.pointer_coercion
                                                                                                                (M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            0;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            []
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          Value.Integer
                                                                                                                            1;
                                                                                                                          Value.UnicodeChar
                                                                                                                            32;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                            [];
                                                                                                                          Value.Integer
                                                                                                                            8;
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                            [];
                                                                                                                          Value.StructTuple
                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                            [
                                                                                                                              Value.Integer
                                                                                                                                3
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                |));
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                  "new",
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  res
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      BinOp.Pure.gt
                                                                                                        (M.read (|
                                                                                                          millis
                                                                                                        |))
                                                                                                        (Value.Integer
                                                                                                          0)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  M.is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "colored::Colorize",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "str"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "bold",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.path
                                                                                                            "alloc::string::String",
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          let
                                                                                                                res :=
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_function (|
                                                                                                                  "alloc::fmt::format",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.path
                                                                                                                        "core::fmt::Arguments",
                                                                                                                      "new_v1_formatted",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  ""
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "."
                                                                                                                              |);
                                                                                                                              M.read (|
                                                                                                                                Value.String
                                                                                                                                  "ms"
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  millis
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Argument",
                                                                                                                                  "new_display",
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "u32"
                                                                                                                                  ]
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  micros
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      (* Unsize *)
                                                                                                                      M.pointer_coercion
                                                                                                                        (M.alloc (|
                                                                                                                          Value.Array
                                                                                                                            [
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    0;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                              |);
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::Placeholder",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  Value.Integer
                                                                                                                                    1;
                                                                                                                                  Value.UnicodeChar
                                                                                                                                    32;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Alignment::Unknown"
                                                                                                                                    [];
                                                                                                                                  Value.Integer
                                                                                                                                    8;
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Implied"
                                                                                                                                    [];
                                                                                                                                  Value.StructTuple
                                                                                                                                    "core::fmt::rt::Count::Is"
                                                                                                                                    [
                                                                                                                                      Value.Integer
                                                                                                                                        3
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        |));
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "core::fmt::rt::UnsafeArg",
                                                                                                                          "new",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |) in
                                                                                                          res
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ :=
                                                                                                          M.use
                                                                                                            (M.alloc (|
                                                                                                              BinOp.Pure.gt
                                                                                                                (M.read (|
                                                                                                                  micros
                                                                                                                |))
                                                                                                                (Value.Integer
                                                                                                                  0)
                                                                                                            |)) in
                                                                                                        let
                                                                                                              _ :=
                                                                                                          M.is_constant_or_break_match (|
                                                                                                            M.read (|
                                                                                                              γ
                                                                                                            |),
                                                                                                            Value.Bool
                                                                                                              true
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1_formatted",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "."
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          (String.String
                                                                                                                                            "181"
                                                                                                                                            "s")
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          micros
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          nanos
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            0;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            []
                                                                                                                                        ]
                                                                                                                                      |);
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Placeholder",
                                                                                                                                          "new",
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          Value.Integer
                                                                                                                                            1;
                                                                                                                                          Value.UnicodeChar
                                                                                                                                            32;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Alignment::Unknown"
                                                                                                                                            [];
                                                                                                                                          Value.Integer
                                                                                                                                            8;
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Implied"
                                                                                                                                            [];
                                                                                                                                          Value.StructTuple
                                                                                                                                            "core::fmt::rt::Count::Is"
                                                                                                                                            [
                                                                                                                                              Value.Integer
                                                                                                                                                3
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              M.call_closure (|
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.path
                                                                                                                                    "core::fmt::rt::UnsafeArg",
                                                                                                                                  "new",
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                []
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "colored::Colorize",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "str"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "bold",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.path
                                                                                                                    "alloc::string::String",
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  let
                                                                                                                        res :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_function (|
                                                                                                                          "alloc::fmt::format",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.call_closure (|
                                                                                                                            M.get_associated_function (|
                                                                                                                              Ty.path
                                                                                                                                "core::fmt::Arguments",
                                                                                                                              "new_v1",
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          ""
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        Value.String
                                                                                                                                          "ns"
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |));
                                                                                                                              (* Unsize *)
                                                                                                                              M.pointer_coercion
                                                                                                                                (M.alloc (|
                                                                                                                                  Value.Array
                                                                                                                                    [
                                                                                                                                      M.call_closure (|
                                                                                                                                        M.get_associated_function (|
                                                                                                                                          Ty.path
                                                                                                                                            "core::fmt::rt::Argument",
                                                                                                                                          "new_display",
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "u32"
                                                                                                                                          ]
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "core::time::Duration",
                                                                                                                                                "subsec_nanos",
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                final_time
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                |))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  res
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let end_info :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "colored::Colorize",
                                                                                    Ty.path
                                                                                      "colored::ColoredString",
                                                                                    [],
                                                                                    "bold",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "colored::Colorize",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          [
                                                                                            Ty.path
                                                                                              "str"
                                                                                          ],
                                                                                        [],
                                                                                        "green",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "End:"
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let message :=
                                                                              M.copy (|
                                                                                let res :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_function (|
                                                                                        "alloc::fmt::format",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_v1",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        ""
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      Value.String
                                                                                                        " "
                                                                                                    |)
                                                                                                  ]
                                                                                              |));
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.alloc (|
                                                                                                Value.Array
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "alloc::string::String"
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          timer,
                                                                                                          "ark_std::perf_trace::inner::TimerInfo",
                                                                                                          "msg"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.path
                                                                                                          "core::fmt::rt::Argument",
                                                                                                        "new_display",
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::function::Fn",
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ]
                                                                                                                (Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]),
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ],
                                                                                                              "call",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        M.match_operator (|
                                                                                                                          M.alloc (|
                                                                                                                            α0
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            fun
                                                                                                                                γ =>
                                                                                                                              ltac:(M.monadic
                                                                                                                                (M.read (|
                                                                                                                                  Value.String
                                                                                                                                    ""
                                                                                                                                |)))
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      | _ =>
                                                                                                                        M.impossible (||)
                                                                                                                      end))
                                                                                                              |);
                                                                                                              Value.Tuple
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                              |))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                res
                                                                              |) in
                                                                            let _ :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::sync::atomic::AtomicUsize",
                                                                                    "fetch_sub",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.get_constant (|
                                                                                        "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                      |)
                                                                                    |);
                                                                                    Value.Integer 1;
                                                                                    Value.StructTuple
                                                                                      "core::sync::atomic::Ordering::Relaxed"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let indent_amount :=
                                                                              M.alloc (|
                                                                                BinOp.Panic.mul (|
                                                                                  Integer.Usize,
                                                                                  Value.Integer 2,
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.path
                                                                                        "core::sync::atomic::AtomicUsize",
                                                                                      "fetch_add",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        M.get_constant (|
                                                                                          "ark_std::perf_trace::inner::NUM_INDENT"
                                                                                        |)
                                                                                      |);
                                                                                      Value.Integer
                                                                                        0;
                                                                                      Value.StructTuple
                                                                                        "core::sync::atomic::Ordering::Relaxed"
                                                                                        []
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |) in
                                                                            let indent :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_function (|
                                                                                    "ark_std::perf_trace::inner::compute_indent",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      indent_amount
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            let _ :=
                                                                              let _ :=
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_function (|
                                                                                      "std::io::stdio::_print",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          "new_v1_formatted",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      " "
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      ""
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    Value.String
                                                                                                      "
"
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      indent
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      end_info
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "alloc::string::String"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      message
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "new_display",
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "colored::ColoredString"
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      final_time
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Argument",
                                                                                                      "from_usize",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.alloc (|
                                                                                                        BinOp.Panic.sub (|
                                                                                                          Integer.Usize,
                                                                                                          Value.Integer
                                                                                                            75,
                                                                                                          M.read (|
                                                                                                            indent_amount
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          (* Unsize *)
                                                                                          M.pointer_coercion
                                                                                            (M.alloc (|
                                                                                              Value.Array
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        1;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Is"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            8
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        2;
                                                                                                      Value.UnicodeChar
                                                                                                        46;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Left"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Param"
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            4
                                                                                                        ]
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.path
                                                                                                        "core::fmt::rt::Placeholder",
                                                                                                      "new",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      Value.Integer
                                                                                                        3;
                                                                                                      Value.UnicodeChar
                                                                                                        32;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Alignment::Unknown"
                                                                                                        [];
                                                                                                      Value.Integer
                                                                                                        0;
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        [];
                                                                                                      Value.StructTuple
                                                                                                        "core::fmt::rt::Count::Implied"
                                                                                                        []
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                            |));
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "core::fmt::rt::UnsafeArg",
                                                                                              "new",
                                                                                              []
                                                                                            |),
                                                                                            []
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |) in
                                                                        r in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)
                                                          | _ => M.impossible (||)
                                                          end))
                                                  ]
                                                |)
                                              |) in
                                            M.alloc (| Value.Tuple [] |)
                                          |)))
                                    ]
                                  |)
                                | _ => M.impossible (||)
                                end))
                        ]
                      |)
                    |) in
                  let static_frame_entry_in_frame_table :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [
                              Ty.apply
                                (Ty.path "array")
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ];
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ]
                                ]
                            ],
                          "unwrap",
                          []
                        |),
                        [
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path "array")
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ];
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ]
                                            ]
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "std::sync::poison::PoisonError")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "array")
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ];
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ],
                              "unwrap",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "std::sync::mutex::Mutex")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "array")
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ];
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ]
                                                ]
                                            ]
                                        ]
                                    ],
                                  "into_inner",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        [
                                          Ty.apply
                                            (Ty.path "std::sync::mutex::Mutex")
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                [
                                                  Ty.apply
                                                    (Ty.path "array")
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::circuit::AssignedCell")
                                                            [ F; F ];
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::circuit::AssignedCell")
                                                            [ F; F ]
                                                        ]
                                                    ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                [ F; F ];
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                [ F; F ]
                                                            ]
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      "unwrap",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                [ F; F ];
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                [ F; F ]
                                                            ]
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          "try_unwrap",
                                          []
                                        |),
                                        [
                                          M.read (|
                                            M.SubPointer.get_struct_record_field (|
                                              assigned_cells_cloned,
                                              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                              "static_frame_entry_in_frame_table"
                                            |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |) in
                  let etable_cells :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [
                              Ty.apply
                                (Ty.path
                                  "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                [ F ]
                            ],
                          "unwrap",
                          []
                        |),
                        [
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                        [ F ]
                                    ];
                                  Ty.apply
                                    (Ty.path "std::sync::poison::PoisonError")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                            [ F ]
                                        ]
                                    ]
                                ],
                              "unwrap",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "std::sync::mutex::Mutex")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                            [ F ]
                                        ]
                                    ],
                                  "into_inner",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        [
                                          Ty.apply
                                            (Ty.path "std::sync::mutex::Mutex")
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                    [ F ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                        [ F ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      "unwrap",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells")
                                                        [ F ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          "try_unwrap",
                                          []
                                        |),
                                        [
                                          M.read (|
                                            M.SubPointer.get_struct_record_field (|
                                              assigned_cells_cloned,
                                              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                              "etable_cells"
                                            |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |) in
                  let mtable_rest_mops :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ] ],
                          "unwrap",
                          []
                        |),
                        [
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ];
                                  Ty.apply
                                    (Ty.path "std::sync::poison::PoisonError")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ]
                                ],
                              "unwrap",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "std::sync::mutex::Mutex")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ],
                                  "into_inner",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        [
                                          Ty.apply
                                            (Ty.path "std::sync::mutex::Mutex")
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                [
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      "unwrap",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          "try_unwrap",
                                          []
                                        |),
                                        [
                                          M.read (|
                                            M.SubPointer.get_struct_record_field (|
                                              assigned_cells_cloned,
                                              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                              "mtable_rest_mops"
                                            |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |) in
                  let rest_memory_finalize_ops_cell :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ]
                                ]
                            ],
                          "unwrap",
                          []
                        |),
                        [
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "std::sync::poison::PoisonError")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ]
                                            ]
                                        ]
                                    ]
                                ],
                              "unwrap",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "std::sync::mutex::Mutex")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ]
                                            ]
                                        ]
                                    ],
                                  "into_inner",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        [
                                          Ty.apply
                                            (Ty.path "std::sync::mutex::Mutex")
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ]
                                                    ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::circuit::AssignedCell")
                                                            [ F; F ]
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      "unwrap",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::circuit::AssignedCell")
                                                            [ F; F ]
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          "try_unwrap",
                                          []
                                        |),
                                        [
                                          M.read (|
                                            M.SubPointer.get_struct_record_field (|
                                              assigned_cells_cloned,
                                              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                              "rest_memory_finalize_ops_cell"
                                            |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |) in
                  let pre_image_table_cells :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [
                              Ty.apply
                                (Ty.path
                                  "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ]
                                ]
                            ],
                          "unwrap",
                          []
                        |),
                        [
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "std::sync::poison::PoisonError")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ]
                                            ]
                                        ]
                                    ]
                                ],
                              "unwrap",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "std::sync::mutex::Mutex")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ]
                                            ]
                                        ]
                                    ],
                                  "into_inner",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        [
                                          Ty.apply
                                            (Ty.path "std::sync::mutex::Mutex")
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ]
                                                    ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::circuit::AssignedCell")
                                                            [ F; F ]
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      "unwrap",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::circuit::AssignedCell")
                                                            [ F; F ]
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          "try_unwrap",
                                          []
                                        |),
                                        [
                                          M.read (|
                                            M.SubPointer.get_struct_record_field (|
                                              assigned_cells_cloned,
                                              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                              "pre_image_table_cells"
                                            |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |) in
                  let post_image_table_cells :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ];
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ]
                                ]
                            ],
                          "unwrap",
                          []
                        |),
                        [
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path
                                                  "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                [
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ]
                                                ];
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                [ F; F ]
                                            ]
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "std::sync::poison::PoisonError")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ],
                              "unwrap",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "std::sync::mutex::Mutex")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ]
                                                ]
                                            ]
                                        ]
                                    ],
                                  "into_inner",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        [
                                          Ty.apply
                                            (Ty.path "std::sync::mutex::Mutex")
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                [ F; F ]
                                                            ];
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::circuit::AssignedCell")
                                                            [ F; F ]
                                                        ]
                                                    ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                    [ F; F ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                [ F; F ]
                                                            ]
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      "unwrap",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::option::Option")
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                    [ F; F ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                [ F; F ]
                                                            ]
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          "try_unwrap",
                                          []
                                        |),
                                        [
                                          M.read (|
                                            M.SubPointer.get_struct_record_field (|
                                              assigned_cells_cloned,
                                              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                              "post_image_table_cells"
                                            |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |) in
                  let rest_jops_cell_in_frame_table :=
                    M.alloc (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ] ],
                          "unwrap",
                          []
                        |),
                        [
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                [
                                  Ty.apply
                                    (Ty.path "core::option::Option")
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::circuit::AssignedCell")
                                        [ F; F ]
                                    ];
                                  Ty.apply
                                    (Ty.path "std::sync::poison::PoisonError")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ]
                                ],
                              "unwrap",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "std::sync::mutex::Mutex")
                                    [
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        [
                                          Ty.apply
                                            (Ty.path "halo2_proofs::circuit::AssignedCell")
                                            [ F; F ]
                                        ]
                                    ],
                                  "into_inner",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        [
                                          Ty.apply
                                            (Ty.path "std::sync::mutex::Mutex")
                                            [
                                              Ty.apply
                                                (Ty.path "core::option::Option")
                                                [
                                                  Ty.apply
                                                    (Ty.path "halo2_proofs::circuit::AssignedCell")
                                                    [ F; F ]
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      "unwrap",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "alloc::sync::Arc")
                                            [
                                              Ty.apply
                                                (Ty.path "std::sync::mutex::Mutex")
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          "try_unwrap",
                                          []
                                        |),
                                        [
                                          M.read (|
                                            M.SubPointer.get_struct_record_field (|
                                              assigned_cells_cloned,
                                              "delphinus_zkwasm::circuits::zkwasm_circuit::AssignedCells",
                                              "rest_jops_cell_in_frame_table"
                                            |)
                                          |)
                                        ]
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |) in
                  let _ :=
                    M.match_operator (|
                      M.alloc (|
                        M.call_closure (|
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              [ Ty.tuple []; Ty.path "halo2_proofs::plonk::error::Error" ],
                            [],
                            "branch",
                            []
                          |),
                          [
                            M.call_closure (|
                              M.get_trait_method (|
                                "halo2_proofs::circuit::Layouter",
                                impl_Layouter_F_,
                                [ F ],
                                "assign_region",
                                [
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::circuit::Region")
                                                [ F ]
                                            ]
                                        ]
                                    ]
                                    (Ty.apply
                                      (Ty.path "core::result::Result")
                                      [ Ty.tuple []; Ty.path "halo2_proofs::plonk::error::Error" ]);
                                  Ty.tuple [];
                                  Ty.function
                                    [ Ty.tuple [] ]
                                    (Ty.apply (Ty.path "&") [ Ty.path "str" ]);
                                  Ty.apply (Ty.path "&") [ Ty.path "str" ]
                                ]
                              |),
                              [
                                layouter_cloned;
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        M.match_operator (|
                                          M.alloc (| α0 |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (M.read (|
                                                  Value.String "permutation between tables"
                                                |)))
                                          ]
                                        |)
                                      | _ => M.impossible (||)
                                      end));
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        M.match_operator (|
                                          M.alloc (| α0 |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let region := M.copy (| γ |) in
                                                M.read (|
                                                  let _ :=
                                                    M.use
                                                      (M.match_operator (|
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            M.get_trait_method (|
                                                              "core::iter::traits::collect::IntoIterator",
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::zip::Zip")
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ]
                                                                        ]
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ]
                                                                        ]
                                                                    ]
                                                                ],
                                                              [],
                                                              "into_iter",
                                                              []
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  "zip",
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                                |),
                                                                [
                                                                  M.call_closure (|
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ]
                                                                            ]
                                                                        ],
                                                                      "iter",
                                                                      []
                                                                    |),
                                                                    [
                                                                      (* Unsize *)
                                                                      M.pointer_coercion
                                                                        static_frame_entry_in_frame_table
                                                                    ]
                                                                  |);
                                                                  M.call_closure (|
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ]
                                                                            ]
                                                                        ],
                                                                      "iter",
                                                                      []
                                                                    |),
                                                                    [
                                                                      (* Unsize *)
                                                                      M.pointer_coercion
                                                                        (M.SubPointer.get_struct_record_field (|
                                                                          pre_image_table_cells,
                                                                          "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                          "static_frame_entries"
                                                                        |))
                                                                    ]
                                                                  |)
                                                                ]
                                                              |)
                                                            ]
                                                          |)
                                                        |),
                                                        [
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let iter := M.copy (| γ |) in
                                                              M.loop (|
                                                                ltac:(M.monadic
                                                                  (let _ :=
                                                                    M.match_operator (|
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::iter::adapters::zip::Zip")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::slice::iter::Iter")
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ]
                                                                                      ]
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::slice::iter::Iter")
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ]
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            [],
                                                                            "next",
                                                                            []
                                                                          |),
                                                                          [ iter ]
                                                                        |)
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (M.alloc (|
                                                                              M.never_to_any (|
                                                                                M.read (|
                                                                                  M.break (||)
                                                                                |)
                                                                              |)
                                                                            |)));
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ0_0 :=
                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                γ,
                                                                                "core::option::Option::Some",
                                                                                0
                                                                              |) in
                                                                            let γ1_0 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ0_0,
                                                                                0
                                                                              |) in
                                                                            let γ1_1 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ0_0,
                                                                                1
                                                                              |) in
                                                                            let left :=
                                                                              M.copy (| γ1_0 |) in
                                                                            let right :=
                                                                              M.copy (| γ1_1 |) in
                                                                            let _ :=
                                                                              M.match_operator (|
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::try_trait::Try",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [];
                                                                                          Ty.path
                                                                                            "halo2_proofs::plonk::error::Error"
                                                                                        ],
                                                                                      [],
                                                                                      "branch",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::circuit::Region")
                                                                                            [ F ],
                                                                                          "constrain_equal",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            region
                                                                                          |);
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                [
                                                                                                  F;
                                                                                                  F
                                                                                                ],
                                                                                              "cell",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                M.read (|
                                                                                                  left
                                                                                                |),
                                                                                                0
                                                                                              |)
                                                                                            ]
                                                                                          |);
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                [
                                                                                                  F;
                                                                                                  F
                                                                                                ],
                                                                                              "cell",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                M.read (|
                                                                                                  right
                                                                                                |),
                                                                                                0
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Break",
                                                                                          0
                                                                                        |) in
                                                                                      let
                                                                                            residual :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.return_ (|
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::FromResidual",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [];
                                                                                                      Ty.path
                                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                                    ],
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "core::convert::Infallible";
                                                                                                        Ty.path
                                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                                      ]
                                                                                                  ],
                                                                                                  "from_residual",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    residual
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                                                          0
                                                                                        |) in
                                                                                      let val :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      val))
                                                                                ]
                                                                              |) in
                                                                            let _ :=
                                                                              M.match_operator (|
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::try_trait::Try",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [];
                                                                                          Ty.path
                                                                                            "halo2_proofs::plonk::error::Error"
                                                                                        ],
                                                                                      [],
                                                                                      "branch",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::circuit::Region")
                                                                                            [ F ],
                                                                                          "constrain_equal",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.read (|
                                                                                            region
                                                                                          |);
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                [
                                                                                                  F;
                                                                                                  F
                                                                                                ],
                                                                                              "cell",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                M.read (|
                                                                                                  left
                                                                                                |),
                                                                                                1
                                                                                              |)
                                                                                            ]
                                                                                          |);
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                [
                                                                                                  F;
                                                                                                  F
                                                                                                ],
                                                                                              "cell",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                M.read (|
                                                                                                  right
                                                                                                |),
                                                                                                1
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Break",
                                                                                          0
                                                                                        |) in
                                                                                      let
                                                                                            residual :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.return_ (|
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::FromResidual",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [];
                                                                                                      Ty.path
                                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                                    ],
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "core::convert::Infallible";
                                                                                                        Ty.path
                                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                                      ]
                                                                                                  ],
                                                                                                  "from_residual",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    residual
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                                                          0
                                                                                        |) in
                                                                                      let val :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      val))
                                                                                ]
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |)))
                                                                      ]
                                                                    |) in
                                                                  M.alloc (| Value.Tuple [] |)))
                                                              |)))
                                                        ]
                                                      |)) in
                                                  let _ :=
                                                    M.match_operator (|
                                                      M.alloc (| Value.Tuple [] |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ :=
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ]
                                                                          ]
                                                                      ],
                                                                    "as_ref",
                                                                    []
                                                                  |),
                                                                  [ post_image_table_cells ]
                                                                |)
                                                              |) in
                                                            let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::option::Option::Some",
                                                                0
                                                              |) in
                                                            let γ0_0 := M.read (| γ0_0 |) in
                                                            let γ2_0 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ0_0,
                                                                0
                                                              |) in
                                                            let γ2_1 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ0_0,
                                                                1
                                                              |) in
                                                            let post_image_table_cells :=
                                                              M.alloc (| γ2_0 |) in
                                                            M.use
                                                              (M.match_operator (|
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    M.get_trait_method (|
                                                                      "core::iter::traits::collect::IntoIterator",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::zip::Zip")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ]
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ]
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      [],
                                                                      "into_iter",
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        M.get_trait_method (|
                                                                          "core::iter::traits::iterator::Iterator",
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ]
                                                                                ]
                                                                            ],
                                                                          [],
                                                                          "zip",
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                      [ F; F ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                      [ F; F ]
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                        [ F; F ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                        [ F; F ]
                                                                                    ]
                                                                                ],
                                                                              "iter",
                                                                              []
                                                                            |),
                                                                            [
                                                                              (* Unsize *)
                                                                              M.pointer_coercion
                                                                                static_frame_entry_in_frame_table
                                                                            ]
                                                                          |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                        [ F; F ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                        [ F; F ]
                                                                                    ]
                                                                                ],
                                                                              "iter",
                                                                              []
                                                                            |),
                                                                            [
                                                                              (* Unsize *)
                                                                              M.pointer_coercion
                                                                                (M.SubPointer.get_struct_record_field (|
                                                                                  M.read (|
                                                                                    post_image_table_cells
                                                                                  |),
                                                                                  "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                                  "static_frame_entries"
                                                                                |))
                                                                            ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let iter := M.copy (| γ |) in
                                                                      M.loop (|
                                                                        ltac:(M.monadic
                                                                          (let _ :=
                                                                            M.match_operator (|
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::iter::adapters::zip::Zip")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                  [
                                                                                                    F;
                                                                                                    F
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                  [
                                                                                                    F;
                                                                                                    F
                                                                                                  ]
                                                                                              ]
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                  [
                                                                                                    F;
                                                                                                    F
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                  [
                                                                                                    F;
                                                                                                    F
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    [],
                                                                                    "next",
                                                                                    []
                                                                                  |),
                                                                                  [ iter ]
                                                                                |)
                                                                              |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (M.alloc (|
                                                                                      M.never_to_any (|
                                                                                        M.read (|
                                                                                          M.break (||)
                                                                                        |)
                                                                                      |)
                                                                                    |)));
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                        γ,
                                                                                        "core::option::Option::Some",
                                                                                        0
                                                                                      |) in
                                                                                    let γ1_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        0
                                                                                      |) in
                                                                                    let γ1_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        1
                                                                                      |) in
                                                                                    let left :=
                                                                                      M.copy (|
                                                                                        γ1_0
                                                                                      |) in
                                                                                    let right :=
                                                                                      M.copy (|
                                                                                        γ1_1
                                                                                      |) in
                                                                                    let _ :=
                                                                                      M.match_operator (|
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::try_trait::Try",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::result::Result")
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [];
                                                                                                  Ty.path
                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                ],
                                                                                              [],
                                                                                              "branch",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "halo2_proofs::circuit::Region")
                                                                                                    [
                                                                                                      F
                                                                                                    ],
                                                                                                  "constrain_equal",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    region
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ],
                                                                                                      "cell",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                        M.read (|
                                                                                                          left
                                                                                                        |),
                                                                                                        0
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ],
                                                                                                      "cell",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                        M.read (|
                                                                                                          right
                                                                                                        |),
                                                                                                        0
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::ops::control_flow::ControlFlow::Break",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    residual :=
                                                                                                M.copy (|
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              M.alloc (|
                                                                                                M.never_to_any (|
                                                                                                  M.read (|
                                                                                                    M.return_ (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::try_trait::FromResidual",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [];
                                                                                                              Ty.path
                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                            ],
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "core::convert::Infallible";
                                                                                                                Ty.path
                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                              ]
                                                                                                          ],
                                                                                                          "from_residual",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            residual
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)));
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::ops::control_flow::ControlFlow::Continue",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    val :=
                                                                                                M.copy (|
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              val))
                                                                                        ]
                                                                                      |) in
                                                                                    let _ :=
                                                                                      M.match_operator (|
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::try_trait::Try",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::result::Result")
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [];
                                                                                                  Ty.path
                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                ],
                                                                                              [],
                                                                                              "branch",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "halo2_proofs::circuit::Region")
                                                                                                    [
                                                                                                      F
                                                                                                    ],
                                                                                                  "constrain_equal",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    region
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ],
                                                                                                      "cell",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                        M.read (|
                                                                                                          left
                                                                                                        |),
                                                                                                        1
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ],
                                                                                                      "cell",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                        M.read (|
                                                                                                          right
                                                                                                        |),
                                                                                                        1
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::ops::control_flow::ControlFlow::Break",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    residual :=
                                                                                                M.copy (|
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              M.alloc (|
                                                                                                M.never_to_any (|
                                                                                                  M.read (|
                                                                                                    M.return_ (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::try_trait::FromResidual",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [];
                                                                                                              Ty.path
                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                            ],
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "core::convert::Infallible";
                                                                                                                Ty.path
                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                              ]
                                                                                                          ],
                                                                                                          "from_residual",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            residual
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)));
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::ops::control_flow::ControlFlow::Continue",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    val :=
                                                                                                M.copy (|
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              val))
                                                                                        ]
                                                                                      |) in
                                                                                    M.alloc (|
                                                                                      Value.Tuple []
                                                                                    |)))
                                                                              ]
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |)))
                                                                      |)))
                                                                ]
                                                              |))));
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (M.alloc (| Value.Tuple [] |)))
                                                      ]
                                                    |) in
                                                  let _ :=
                                                    M.match_operator (|
                                                      M.alloc (| Value.Tuple [] |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ :=
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                          [ F; F ]
                                                                      ],
                                                                    "as_ref",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.SubPointer.get_struct_record_field (|
                                                                      etable_cells,
                                                                      "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells",
                                                                      "rest_jops"
                                                                    |)
                                                                  ]
                                                                |)
                                                              |) in
                                                            let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::option::Option::Some",
                                                                0
                                                              |) in
                                                            let rest_jops_in_event_chip :=
                                                              M.copy (| γ0_0 |) in
                                                            let _ :=
                                                              M.match_operator (|
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    M.get_trait_method (|
                                                                      "core::ops::try_trait::Try",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.tuple [];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ],
                                                                      [],
                                                                      "branch",
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::Region")
                                                                            [ F ],
                                                                          "constrain_equal",
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.read (| region |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ],
                                                                              "cell",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (|
                                                                                rest_jops_in_event_chip
                                                                              |)
                                                                            ]
                                                                          |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ],
                                                                              "cell",
                                                                              []
                                                                            |),
                                                                            [
                                                                              rest_jops_cell_in_frame_table
                                                                            ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ0_0 :=
                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                          γ,
                                                                          "core::ops::control_flow::ControlFlow::Break",
                                                                          0
                                                                        |) in
                                                                      let residual :=
                                                                        M.copy (| γ0_0 |) in
                                                                      M.alloc (|
                                                                        M.never_to_any (|
                                                                          M.read (|
                                                                            M.return_ (|
                                                                              M.call_closure (|
                                                                                M.get_trait_method (|
                                                                                  "core::ops::try_trait::FromResidual",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::result::Result")
                                                                                    [
                                                                                      Ty.tuple [];
                                                                                      Ty.path
                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                    ],
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::result::Result")
                                                                                      [
                                                                                        Ty.path
                                                                                          "core::convert::Infallible";
                                                                                        Ty.path
                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                      ]
                                                                                  ],
                                                                                  "from_residual",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.read (|
                                                                                    residual
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)));
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ0_0 :=
                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                          γ,
                                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                                          0
                                                                        |) in
                                                                      let val :=
                                                                        M.copy (| γ0_0 |) in
                                                                      val))
                                                                ]
                                                              |) in
                                                            M.alloc (| Value.Tuple [] |)));
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (M.alloc (| Value.Tuple [] |)))
                                                      ]
                                                    |) in
                                                  let _ :=
                                                    M.match_operator (|
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::try_trait::Try",
                                                            Ty.apply
                                                              (Ty.path "core::result::Result")
                                                              [
                                                                Ty.tuple [];
                                                                Ty.path
                                                                  "halo2_proofs::plonk::error::Error"
                                                              ],
                                                            [],
                                                            "branch",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::circuit::Region")
                                                                  [ F ],
                                                                "constrain_equal",
                                                                []
                                                              |),
                                                              [
                                                                M.read (| region |);
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                      [ F; F ],
                                                                    "cell",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.SubPointer.get_struct_record_field (|
                                                                      etable_cells,
                                                                      "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells",
                                                                      "rest_mops"
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                      [ F; F ],
                                                                    "cell",
                                                                    []
                                                                  |),
                                                                  [ mtable_rest_mops ]
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::ops::control_flow::ControlFlow::Break",
                                                                0
                                                              |) in
                                                            let residual := M.copy (| γ0_0 |) in
                                                            M.alloc (|
                                                              M.never_to_any (|
                                                                M.read (|
                                                                  M.return_ (|
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::try_trait::FromResidual",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::result::Result")
                                                                          [
                                                                            Ty.tuple [];
                                                                            Ty.path
                                                                              "halo2_proofs::plonk::error::Error"
                                                                          ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::result::Result")
                                                                            [
                                                                              Ty.path
                                                                                "core::convert::Infallible";
                                                                              Ty.path
                                                                                "halo2_proofs::plonk::error::Error"
                                                                            ]
                                                                        ],
                                                                        "from_residual",
                                                                        []
                                                                      |),
                                                                      [ M.read (| residual |) ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              |)
                                                            |)));
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::ops::control_flow::ControlFlow::Continue",
                                                                0
                                                              |) in
                                                            let val := M.copy (| γ0_0 |) in
                                                            val))
                                                      ]
                                                    |) in
                                                  let _ :=
                                                    M.match_operator (|
                                                      M.alloc (| Value.Tuple [] |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ :=
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ]
                                                                          ]
                                                                      ],
                                                                    "as_ref",
                                                                    []
                                                                  |),
                                                                  [ post_image_table_cells ]
                                                                |)
                                                              |) in
                                                            let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::option::Option::Some",
                                                                0
                                                              |) in
                                                            let γ0_0 := M.read (| γ0_0 |) in
                                                            let γ2_0 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ0_0,
                                                                0
                                                              |) in
                                                            let γ2_1 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ0_0,
                                                                1
                                                              |) in
                                                            let
                                                                  rest_memory_finalized_ops_in_post_image_table :=
                                                              M.alloc (| γ2_1 |) in
                                                            let _ :=
                                                              M.match_operator (|
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    M.get_trait_method (|
                                                                      "core::ops::try_trait::Try",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.tuple [];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ],
                                                                      [],
                                                                      "branch",
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::Region")
                                                                            [ F ],
                                                                          "constrain_equal",
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.read (| region |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ],
                                                                              "cell",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (|
                                                                                rest_memory_finalized_ops_in_post_image_table
                                                                              |)
                                                                            ]
                                                                          |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ],
                                                                              "cell",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                M.get_associated_function (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                            [ F; F ]
                                                                                        ]
                                                                                    ],
                                                                                  "unwrap",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    M.get_associated_function (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                            [ F; F ]
                                                                                        ],
                                                                                      "as_ref",
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      rest_memory_finalize_ops_cell
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ0_0 :=
                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                          γ,
                                                                          "core::ops::control_flow::ControlFlow::Break",
                                                                          0
                                                                        |) in
                                                                      let residual :=
                                                                        M.copy (| γ0_0 |) in
                                                                      M.alloc (|
                                                                        M.never_to_any (|
                                                                          M.read (|
                                                                            M.return_ (|
                                                                              M.call_closure (|
                                                                                M.get_trait_method (|
                                                                                  "core::ops::try_trait::FromResidual",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::result::Result")
                                                                                    [
                                                                                      Ty.tuple [];
                                                                                      Ty.path
                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                    ],
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::result::Result")
                                                                                      [
                                                                                        Ty.path
                                                                                          "core::convert::Infallible";
                                                                                        Ty.path
                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                      ]
                                                                                  ],
                                                                                  "from_residual",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.read (|
                                                                                    residual
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)));
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ0_0 :=
                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                          γ,
                                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                                          0
                                                                        |) in
                                                                      let val :=
                                                                        M.copy (| γ0_0 |) in
                                                                      val))
                                                                ]
                                                              |) in
                                                            M.alloc (| Value.Tuple [] |)));
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (M.alloc (| Value.Tuple [] |)))
                                                      ]
                                                    |) in
                                                  let _ :=
                                                    M.match_operator (|
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::try_trait::Try",
                                                            Ty.apply
                                                              (Ty.path "core::result::Result")
                                                              [
                                                                Ty.tuple [];
                                                                Ty.path
                                                                  "halo2_proofs::plonk::error::Error"
                                                              ],
                                                            [],
                                                            "branch",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "specs::state::InitializationState")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                      [ F; F ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                      [ F; F ]
                                                                  ],
                                                                "zip_for_each",
                                                                [
                                                                  Ty.tuple [];
                                                                  Ty.path
                                                                    "halo2_proofs::plonk::error::Error";
                                                                  Ty.function
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.apply
                                                                      (Ty.path
                                                                        "core::result::Result")
                                                                      [
                                                                        Ty.tuple [];
                                                                        Ty.path
                                                                          "halo2_proofs::plonk::error::Error"
                                                                      ])
                                                                ]
                                                              |),
                                                              [
                                                                M.SubPointer.get_struct_record_field (|
                                                                  etable_cells,
                                                                  "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells",
                                                                  "pre_initialization_state"
                                                                |);
                                                                M.SubPointer.get_struct_record_field (|
                                                                  pre_image_table_cells,
                                                                  "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                  "initialization_state"
                                                                |);
                                                                M.closure
                                                                  (fun γ =>
                                                                    ltac:(M.monadic
                                                                      match γ with
                                                                      | [ α0; α1 ] =>
                                                                        M.match_operator (|
                                                                          M.alloc (| α0 |),
                                                                          [
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (let l :=
                                                                                  M.copy (| γ |) in
                                                                                M.match_operator (|
                                                                                  M.alloc (| α1 |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let r :=
                                                                                          M.copy (|
                                                                                            γ
                                                                                          |) in
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "halo2_proofs::circuit::Region")
                                                                                              [ F ],
                                                                                            "constrain_equal",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.read (|
                                                                                              region
                                                                                            |);
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                  [
                                                                                                    F;
                                                                                                    F
                                                                                                  ],
                                                                                                "cell",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.read (|
                                                                                                  l
                                                                                                |)
                                                                                              ]
                                                                                            |);
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                  [
                                                                                                    F;
                                                                                                    F
                                                                                                  ],
                                                                                                "cell",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.read (|
                                                                                                  r
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |)))
                                                                          ]
                                                                        |)
                                                                      | _ => M.impossible (||)
                                                                      end))
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::ops::control_flow::ControlFlow::Break",
                                                                0
                                                              |) in
                                                            let residual := M.copy (| γ0_0 |) in
                                                            M.alloc (|
                                                              M.never_to_any (|
                                                                M.read (|
                                                                  M.return_ (|
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::try_trait::FromResidual",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::result::Result")
                                                                          [
                                                                            Ty.tuple [];
                                                                            Ty.path
                                                                              "halo2_proofs::plonk::error::Error"
                                                                          ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::result::Result")
                                                                            [
                                                                              Ty.path
                                                                                "core::convert::Infallible";
                                                                              Ty.path
                                                                                "halo2_proofs::plonk::error::Error"
                                                                            ]
                                                                        ],
                                                                        "from_residual",
                                                                        []
                                                                      |),
                                                                      [ M.read (| residual |) ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              |)
                                                            |)));
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::ops::control_flow::ControlFlow::Continue",
                                                                0
                                                              |) in
                                                            let val := M.copy (| γ0_0 |) in
                                                            val))
                                                      ]
                                                    |) in
                                                  let _ :=
                                                    M.match_operator (|
                                                      M.alloc (| Value.Tuple [] |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ :=
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ]
                                                                          ]
                                                                      ],
                                                                    "as_ref",
                                                                    []
                                                                  |),
                                                                  [ post_image_table_cells ]
                                                                |)
                                                              |) in
                                                            let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::option::Option::Some",
                                                                0
                                                              |) in
                                                            let γ0_0 := M.read (| γ0_0 |) in
                                                            let γ2_0 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ0_0,
                                                                0
                                                              |) in
                                                            let γ2_1 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ0_0,
                                                                1
                                                              |) in
                                                            let post_image_table_cells :=
                                                              M.alloc (| γ2_0 |) in
                                                            let _ :=
                                                              M.match_operator (|
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    M.get_trait_method (|
                                                                      "core::ops::try_trait::Try",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.tuple [];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ],
                                                                      [],
                                                                      "branch",
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "specs::state::InitializationState")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ]
                                                                            ],
                                                                          "zip_for_each",
                                                                          [
                                                                            Ty.tuple [];
                                                                            Ty.path
                                                                              "halo2_proofs::plonk::error::Error";
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ]
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                              (Ty.apply
                                                                                (Ty.path
                                                                                  "core::result::Result")
                                                                                [
                                                                                  Ty.tuple [];
                                                                                  Ty.path
                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                ])
                                                                          ]
                                                                        |),
                                                                        [
                                                                          M.SubPointer.get_struct_record_field (|
                                                                            etable_cells,
                                                                            "delphinus_zkwasm::circuits::etable::assign::EventTablePermutationCells",
                                                                            "post_initialization_state"
                                                                          |);
                                                                          M.SubPointer.get_struct_record_field (|
                                                                            M.read (|
                                                                              post_image_table_cells
                                                                            |),
                                                                            "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                            "initialization_state"
                                                                          |);
                                                                          M.closure
                                                                            (fun γ =>
                                                                              ltac:(M.monadic
                                                                                match γ with
                                                                                | [ α0; α1 ] =>
                                                                                  M.match_operator (|
                                                                                    M.alloc (|
                                                                                      α0
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let l :=
                                                                                            M.copy (|
                                                                                              γ
                                                                                            |) in
                                                                                          M.match_operator (|
                                                                                            M.alloc (|
                                                                                              α1
                                                                                            |),
                                                                                            [
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        r :=
                                                                                                    M.copy (|
                                                                                                      γ
                                                                                                    |) in
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::Region")
                                                                                                        [
                                                                                                          F
                                                                                                        ],
                                                                                                      "constrain_equal",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        region
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                                            [
                                                                                                              F;
                                                                                                              F
                                                                                                            ],
                                                                                                          "cell",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            l
                                                                                                          |)
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                                            [
                                                                                                              F;
                                                                                                              F
                                                                                                            ],
                                                                                                          "cell",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            r
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)))
                                                                                            ]
                                                                                          |)))
                                                                                    ]
                                                                                  |)
                                                                                | _ =>
                                                                                  M.impossible (||)
                                                                                end))
                                                                        ]
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ0_0 :=
                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                          γ,
                                                                          "core::ops::control_flow::ControlFlow::Break",
                                                                          0
                                                                        |) in
                                                                      let residual :=
                                                                        M.copy (| γ0_0 |) in
                                                                      M.alloc (|
                                                                        M.never_to_any (|
                                                                          M.read (|
                                                                            M.return_ (|
                                                                              M.call_closure (|
                                                                                M.get_trait_method (|
                                                                                  "core::ops::try_trait::FromResidual",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::result::Result")
                                                                                    [
                                                                                      Ty.tuple [];
                                                                                      Ty.path
                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                    ],
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::result::Result")
                                                                                      [
                                                                                        Ty.path
                                                                                          "core::convert::Infallible";
                                                                                        Ty.path
                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                      ]
                                                                                  ],
                                                                                  "from_residual",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.read (|
                                                                                    residual
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)));
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ0_0 :=
                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                          γ,
                                                                          "core::ops::control_flow::ControlFlow::Continue",
                                                                          0
                                                                        |) in
                                                                      let val :=
                                                                        M.copy (| γ0_0 |) in
                                                                      val))
                                                                ]
                                                              |) in
                                                            M.alloc (| Value.Tuple [] |)));
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (M.alloc (| Value.Tuple [] |)))
                                                      ]
                                                    |) in
                                                  let _ :=
                                                    M.match_operator (|
                                                      M.alloc (| Value.Tuple [] |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ :=
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ]
                                                                          ]
                                                                      ],
                                                                    "as_ref",
                                                                    []
                                                                  |),
                                                                  [ post_image_table_cells ]
                                                                |)
                                                              |) in
                                                            let γ0_0 :=
                                                              M.SubPointer.get_struct_tuple_field (|
                                                                γ,
                                                                "core::option::Option::Some",
                                                                0
                                                              |) in
                                                            let γ0_0 := M.read (| γ0_0 |) in
                                                            let γ2_0 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ0_0,
                                                                0
                                                              |) in
                                                            let γ2_1 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ0_0,
                                                                1
                                                              |) in
                                                            let post_image_table_cells :=
                                                              M.alloc (| γ2_0 |) in
                                                            let _ :=
                                                              M.use
                                                                (M.match_operator (|
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::iter::traits::collect::IntoIterator",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::iter::adapters::zip::Zip")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ]
                                                                          ],
                                                                        [],
                                                                        "into_iter",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ],
                                                                            [],
                                                                            "zip",
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::slice::iter::Iter")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ]
                                                                                ]
                                                                            ]
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                      [ F; F ]
                                                                                  ],
                                                                                "iter",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::deref::Deref",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ],
                                                                                    [],
                                                                                    "deref",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      pre_image_table_cells,
                                                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                                      "instructions"
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                      [ F; F ]
                                                                                  ],
                                                                                "iter",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::deref::Deref",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ],
                                                                                    [],
                                                                                    "deref",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      M.read (|
                                                                                        post_image_table_cells
                                                                                      |),
                                                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                                      "instructions"
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let iter :=
                                                                          M.copy (| γ |) in
                                                                        M.loop (|
                                                                          ltac:(M.monadic
                                                                            (let _ :=
                                                                              M.match_operator (|
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::iter::traits::iterator::Iterator",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::iter::adapters::zip::Zip")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                [
                                                                                                  F;
                                                                                                  F
                                                                                                ]
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                [
                                                                                                  F;
                                                                                                  F
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                      [],
                                                                                      "next",
                                                                                      []
                                                                                    |),
                                                                                    [ iter ]
                                                                                  |)
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (M.alloc (|
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.break (||)
                                                                                          |)
                                                                                        |)
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::option::Option::Some",
                                                                                          0
                                                                                        |) in
                                                                                      let γ1_0 :=
                                                                                        M.SubPointer.get_tuple_field (|
                                                                                          γ0_0,
                                                                                          0
                                                                                        |) in
                                                                                      let γ1_1 :=
                                                                                        M.SubPointer.get_tuple_field (|
                                                                                          γ0_0,
                                                                                          1
                                                                                        |) in
                                                                                      let l :=
                                                                                        M.copy (|
                                                                                          γ1_0
                                                                                        |) in
                                                                                      let r :=
                                                                                        M.copy (|
                                                                                          γ1_1
                                                                                        |) in
                                                                                      let _ :=
                                                                                        M.match_operator (|
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::try_trait::Try",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::result::Result")
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [];
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                                  ],
                                                                                                [],
                                                                                                "branch",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.call_closure (|
                                                                                                  M.get_associated_function (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::Region")
                                                                                                      [
                                                                                                        F
                                                                                                      ],
                                                                                                    "constrain_equal",
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      region
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                          [
                                                                                                            F;
                                                                                                            F
                                                                                                          ],
                                                                                                        "cell",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          l
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                          [
                                                                                                            F;
                                                                                                            F
                                                                                                          ],
                                                                                                        "cell",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          r
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::ops::control_flow::ControlFlow::Break",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      residual :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.never_to_any (|
                                                                                                    M.read (|
                                                                                                      M.return_ (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::try_trait::FromResidual",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [];
                                                                                                                Ty.path
                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                              ],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "core::convert::Infallible";
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ]
                                                                                                            ],
                                                                                                            "from_residual",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              residual
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::ops::control_flow::ControlFlow::Continue",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      val :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                val))
                                                                                          ]
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        Value.Tuple
                                                                                          []
                                                                                      |)))
                                                                                ]
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |)))
                                                                        |)))
                                                                  ]
                                                                |)) in
                                                            let _ :=
                                                              M.use
                                                                (M.match_operator (|
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::iter::traits::collect::IntoIterator",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::iter::adapters::zip::Zip")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ]
                                                                          ],
                                                                        [],
                                                                        "into_iter",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ],
                                                                            [],
                                                                            "zip",
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::slice::iter::Iter")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ]
                                                                                ]
                                                                            ]
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                      [ F; F ]
                                                                                  ],
                                                                                "iter",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::deref::Deref",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ],
                                                                                    [],
                                                                                    "deref",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      pre_image_table_cells,
                                                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                                      "br_table_entires"
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                      [ F; F ]
                                                                                  ],
                                                                                "iter",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::deref::Deref",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                          [ F; F ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ],
                                                                                    [],
                                                                                    "deref",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      M.read (|
                                                                                        post_image_table_cells
                                                                                      |),
                                                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                                      "br_table_entires"
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let iter :=
                                                                          M.copy (| γ |) in
                                                                        M.loop (|
                                                                          ltac:(M.monadic
                                                                            (let _ :=
                                                                              M.match_operator (|
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::iter::traits::iterator::Iterator",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::iter::adapters::zip::Zip")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                [
                                                                                                  F;
                                                                                                  F
                                                                                                ]
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                [
                                                                                                  F;
                                                                                                  F
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                      [],
                                                                                      "next",
                                                                                      []
                                                                                    |),
                                                                                    [ iter ]
                                                                                  |)
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (M.alloc (|
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.break (||)
                                                                                          |)
                                                                                        |)
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::option::Option::Some",
                                                                                          0
                                                                                        |) in
                                                                                      let γ1_0 :=
                                                                                        M.SubPointer.get_tuple_field (|
                                                                                          γ0_0,
                                                                                          0
                                                                                        |) in
                                                                                      let γ1_1 :=
                                                                                        M.SubPointer.get_tuple_field (|
                                                                                          γ0_0,
                                                                                          1
                                                                                        |) in
                                                                                      let l :=
                                                                                        M.copy (|
                                                                                          γ1_0
                                                                                        |) in
                                                                                      let r :=
                                                                                        M.copy (|
                                                                                          γ1_1
                                                                                        |) in
                                                                                      let _ :=
                                                                                        M.match_operator (|
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::try_trait::Try",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::result::Result")
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [];
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                                  ],
                                                                                                [],
                                                                                                "branch",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.call_closure (|
                                                                                                  M.get_associated_function (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::Region")
                                                                                                      [
                                                                                                        F
                                                                                                      ],
                                                                                                    "constrain_equal",
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      region
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                          [
                                                                                                            F;
                                                                                                            F
                                                                                                          ],
                                                                                                        "cell",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          l
                                                                                                        |)
                                                                                                      ]
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                          [
                                                                                                            F;
                                                                                                            F
                                                                                                          ],
                                                                                                        "cell",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          r
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::ops::control_flow::ControlFlow::Break",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      residual :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.never_to_any (|
                                                                                                    M.read (|
                                                                                                      M.return_ (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::try_trait::FromResidual",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [];
                                                                                                                Ty.path
                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                              ],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "core::convert::Infallible";
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ]
                                                                                                            ],
                                                                                                            "from_residual",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              residual
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::ops::control_flow::ControlFlow::Continue",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      val :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                val))
                                                                                          ]
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        Value.Tuple
                                                                                          []
                                                                                      |)))
                                                                                ]
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |)))
                                                                        |)))
                                                                  ]
                                                                |)) in
                                                            M.use
                                                              (M.match_operator (|
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    M.get_trait_method (|
                                                                      "core::iter::traits::collect::IntoIterator",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::zip::Zip")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ]
                                                                            ]
                                                                        ],
                                                                      [],
                                                                      "into_iter",
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        M.get_trait_method (|
                                                                          "core::iter::traits::iterator::Iterator",
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                [ F; F ]
                                                                            ],
                                                                          [],
                                                                          "zip",
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ]
                                                                          ]
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ]
                                                                                ],
                                                                              "iter",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                M.get_trait_method (|
                                                                                  "core::ops::deref::Deref",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                        [ F; F ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ],
                                                                                  [],
                                                                                  "deref",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                    pre_image_table_cells,
                                                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                                    "padding_entires"
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            ]
                                                                          |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ]
                                                                                ],
                                                                              "iter",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                M.get_trait_method (|
                                                                                  "core::ops::deref::Deref",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                        [ F; F ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ],
                                                                                  [],
                                                                                  "deref",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                    M.read (|
                                                                                      post_image_table_cells
                                                                                    |),
                                                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                                    "padding_entires"
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let iter := M.copy (| γ |) in
                                                                      M.loop (|
                                                                        ltac:(M.monadic
                                                                          (let _ :=
                                                                            M.match_operator (|
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::iter::adapters::zip::Zip")
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                              [ F; F
                                                                                              ]
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                              [ F; F
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    [],
                                                                                    "next",
                                                                                    []
                                                                                  |),
                                                                                  [ iter ]
                                                                                |)
                                                                              |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (M.alloc (|
                                                                                      M.never_to_any (|
                                                                                        M.read (|
                                                                                          M.break (||)
                                                                                        |)
                                                                                      |)
                                                                                    |)));
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                        γ,
                                                                                        "core::option::Option::Some",
                                                                                        0
                                                                                      |) in
                                                                                    let γ1_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        0
                                                                                      |) in
                                                                                    let γ1_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        1
                                                                                      |) in
                                                                                    let l :=
                                                                                      M.copy (|
                                                                                        γ1_0
                                                                                      |) in
                                                                                    let r :=
                                                                                      M.copy (|
                                                                                        γ1_1
                                                                                      |) in
                                                                                    let _ :=
                                                                                      M.match_operator (|
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::try_trait::Try",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::result::Result")
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [];
                                                                                                  Ty.path
                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                ],
                                                                                              [],
                                                                                              "branch",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "halo2_proofs::circuit::Region")
                                                                                                    [
                                                                                                      F
                                                                                                    ],
                                                                                                  "constrain_equal",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    region
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ],
                                                                                                      "cell",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        l
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ],
                                                                                                      "cell",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        r
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::ops::control_flow::ControlFlow::Break",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    residual :=
                                                                                                M.copy (|
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              M.alloc (|
                                                                                                M.never_to_any (|
                                                                                                  M.read (|
                                                                                                    M.return_ (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::try_trait::FromResidual",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [];
                                                                                                              Ty.path
                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                            ],
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "core::convert::Infallible";
                                                                                                                Ty.path
                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                              ]
                                                                                                          ],
                                                                                                          "from_residual",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            residual
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)));
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::ops::control_flow::ControlFlow::Continue",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    val :=
                                                                                                M.copy (|
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              val))
                                                                                        ]
                                                                                      |) in
                                                                                    M.alloc (|
                                                                                      Value.Tuple []
                                                                                    |)))
                                                                              ]
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |)))
                                                                      |)))
                                                                ]
                                                              |))));
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (M.alloc (| Value.Tuple [] |)))
                                                      ]
                                                    |) in
                                                  M.alloc (|
                                                    Value.StructTuple
                                                      "core::result::Result::Ok"
                                                      [ Value.Tuple [] ]
                                                  |)
                                                |)))
                                          ]
                                        |)
                                      | _ => M.impossible (||)
                                      end))
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          [ Ty.tuple []; Ty.path "halo2_proofs::plonk::error::Error"
                                          ],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.path "halo2_proofs::plonk::error::Error"
                                            ]
                                        ],
                                        "from_residual",
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let _ :=
                    let _ :=
                      let time :=
                        M.copy (|
                          M.SubPointer.get_struct_record_field (|
                            assign_timer,
                            "ark_std::perf_trace::inner::TimerInfo",
                            "time"
                          |)
                        |) in
                      let final_time :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.path "std::time::Instant",
                              "elapsed",
                              []
                            |),
                            [ time ]
                          |)
                        |) in
                      let final_time :=
                        M.copy (|
                          let secs :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.path "core::time::Duration",
                                  "as_secs",
                                  []
                                |),
                                [ final_time ]
                              |)
                            |) in
                          let millis :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.path "core::time::Duration",
                                  "subsec_millis",
                                  []
                                |),
                                [ final_time ]
                              |)
                            |) in
                          let micros :=
                            M.alloc (|
                              BinOp.Panic.rem (|
                                Integer.U32,
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::time::Duration",
                                    "subsec_micros",
                                    []
                                  |),
                                  [ final_time ]
                                |),
                                Value.Integer 1000
                              |)
                            |) in
                          let nanos :=
                            M.alloc (|
                              BinOp.Panic.rem (|
                                Integer.U32,
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::time::Duration",
                                    "subsec_nanos",
                                    []
                                  |),
                                  [ final_time ]
                                |),
                                Value.Integer 1000
                              |)
                            |) in
                          M.match_operator (|
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        BinOp.Pure.ne (M.read (| secs |)) (Value.Integer 0)
                                      |)) in
                                  let _ :=
                                    M.is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      M.get_trait_method (|
                                        "colored::Colorize",
                                        Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                        [],
                                        "bold",
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          M.get_trait_method (|
                                            "core::ops::deref::Deref",
                                            Ty.path "alloc::string::String",
                                            [],
                                            "deref",
                                            []
                                          |),
                                          [
                                            let res :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  M.get_function (| "alloc::fmt::format", [] |),
                                                  [
                                                    M.call_closure (|
                                                      M.get_associated_function (|
                                                        Ty.path "core::fmt::Arguments",
                                                        "new_v1_formatted",
                                                        []
                                                      |),
                                                      [
                                                        (* Unsize *)
                                                        M.pointer_coercion
                                                          (M.alloc (|
                                                            Value.Array
                                                              [
                                                                M.read (| Value.String "" |);
                                                                M.read (| Value.String "." |);
                                                                M.read (| Value.String "s" |)
                                                              ]
                                                          |));
                                                        (* Unsize *)
                                                        M.pointer_coercion
                                                          (M.alloc (|
                                                            Value.Array
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "core::fmt::rt::Argument",
                                                                    "new_display",
                                                                    [ Ty.path "u64" ]
                                                                  |),
                                                                  [ secs ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "core::fmt::rt::Argument",
                                                                    "new_display",
                                                                    [ Ty.path "u32" ]
                                                                  |),
                                                                  [ millis ]
                                                                |)
                                                              ]
                                                          |));
                                                        (* Unsize *)
                                                        M.pointer_coercion
                                                          (M.alloc (|
                                                            Value.Array
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "core::fmt::rt::Placeholder",
                                                                    "new",
                                                                    []
                                                                  |),
                                                                  [
                                                                    Value.Integer 0;
                                                                    Value.UnicodeChar 32;
                                                                    Value.StructTuple
                                                                      "core::fmt::rt::Alignment::Unknown"
                                                                      [];
                                                                    Value.Integer 0;
                                                                    Value.StructTuple
                                                                      "core::fmt::rt::Count::Implied"
                                                                      [];
                                                                    Value.StructTuple
                                                                      "core::fmt::rt::Count::Implied"
                                                                      []
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "core::fmt::rt::Placeholder",
                                                                    "new",
                                                                    []
                                                                  |),
                                                                  [
                                                                    Value.Integer 1;
                                                                    Value.UnicodeChar 32;
                                                                    Value.StructTuple
                                                                      "core::fmt::rt::Alignment::Unknown"
                                                                      [];
                                                                    Value.Integer 8;
                                                                    Value.StructTuple
                                                                      "core::fmt::rt::Count::Implied"
                                                                      [];
                                                                    Value.StructTuple
                                                                      "core::fmt::rt::Count::Is"
                                                                      [ Value.Integer 3 ]
                                                                  ]
                                                                |)
                                                              ]
                                                          |));
                                                        M.call_closure (|
                                                          M.get_associated_function (|
                                                            Ty.path "core::fmt::rt::UnsafeArg",
                                                            "new",
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      ]
                                                    |)
                                                  ]
                                                |)
                                              |) in
                                            res
                                          ]
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                BinOp.Pure.gt
                                                  (M.read (| millis |))
                                                  (Value.Integer 0)
                                              |)) in
                                          let _ :=
                                            M.is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              M.get_trait_method (|
                                                "colored::Colorize",
                                                Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                                [],
                                                "bold",
                                                []
                                              |),
                                              [
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::ops::deref::Deref",
                                                    Ty.path "alloc::string::String",
                                                    [],
                                                    "deref",
                                                    []
                                                  |),
                                                  [
                                                    let res :=
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          M.get_function (|
                                                            "alloc::fmt::format",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_associated_function (|
                                                                Ty.path "core::fmt::Arguments",
                                                                "new_v1_formatted",
                                                                []
                                                              |),
                                                              [
                                                                (* Unsize *)
                                                                M.pointer_coercion
                                                                  (M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        M.read (|
                                                                          Value.String ""
                                                                        |);
                                                                        M.read (|
                                                                          Value.String "."
                                                                        |);
                                                                        M.read (|
                                                                          Value.String "ms"
                                                                        |)
                                                                      ]
                                                                  |));
                                                                (* Unsize *)
                                                                M.pointer_coercion
                                                                  (M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "core::fmt::rt::Argument",
                                                                            "new_display",
                                                                            [ Ty.path "u32" ]
                                                                          |),
                                                                          [ millis ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "core::fmt::rt::Argument",
                                                                            "new_display",
                                                                            [ Ty.path "u32" ]
                                                                          |),
                                                                          [ micros ]
                                                                        |)
                                                                      ]
                                                                  |));
                                                                (* Unsize *)
                                                                M.pointer_coercion
                                                                  (M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "core::fmt::rt::Placeholder",
                                                                            "new",
                                                                            []
                                                                          |),
                                                                          [
                                                                            Value.Integer 0;
                                                                            Value.UnicodeChar 32;
                                                                            Value.StructTuple
                                                                              "core::fmt::rt::Alignment::Unknown"
                                                                              [];
                                                                            Value.Integer 0;
                                                                            Value.StructTuple
                                                                              "core::fmt::rt::Count::Implied"
                                                                              [];
                                                                            Value.StructTuple
                                                                              "core::fmt::rt::Count::Implied"
                                                                              []
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "core::fmt::rt::Placeholder",
                                                                            "new",
                                                                            []
                                                                          |),
                                                                          [
                                                                            Value.Integer 1;
                                                                            Value.UnicodeChar 32;
                                                                            Value.StructTuple
                                                                              "core::fmt::rt::Alignment::Unknown"
                                                                              [];
                                                                            Value.Integer 8;
                                                                            Value.StructTuple
                                                                              "core::fmt::rt::Count::Implied"
                                                                              [];
                                                                            Value.StructTuple
                                                                              "core::fmt::rt::Count::Is"
                                                                              [ Value.Integer 3 ]
                                                                          ]
                                                                        |)
                                                                      ]
                                                                  |));
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "core::fmt::rt::UnsafeArg",
                                                                    "new",
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |) in
                                                    res
                                                  ]
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            M.alloc (| Value.Tuple [] |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let γ :=
                                                    M.use
                                                      (M.alloc (|
                                                        BinOp.Pure.gt
                                                          (M.read (| micros |))
                                                          (Value.Integer 0)
                                                      |)) in
                                                  let _ :=
                                                    M.is_constant_or_break_match (|
                                                      M.read (| γ |),
                                                      Value.Bool true
                                                    |) in
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      M.get_trait_method (|
                                                        "colored::Colorize",
                                                        Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                                        [],
                                                        "bold",
                                                        []
                                                      |),
                                                      [
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::deref::Deref",
                                                            Ty.path "alloc::string::String",
                                                            [],
                                                            "deref",
                                                            []
                                                          |),
                                                          [
                                                            let res :=
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_function (|
                                                                    "alloc::fmt::format",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "core::fmt::Arguments",
                                                                        "new_v1_formatted",
                                                                        []
                                                                      |),
                                                                      [
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.alloc (|
                                                                            Value.Array
                                                                              [
                                                                                M.read (|
                                                                                  Value.String ""
                                                                                |);
                                                                                M.read (|
                                                                                  Value.String "."
                                                                                |);
                                                                                M.read (|
                                                                                  Value.String
                                                                                    (String.String
                                                                                      "181"
                                                                                      "s")
                                                                                |)
                                                                              ]
                                                                          |));
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.alloc (|
                                                                            Value.Array
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::fmt::rt::Argument",
                                                                                    "new_display",
                                                                                    [ Ty.path "u32"
                                                                                    ]
                                                                                  |),
                                                                                  [ micros ]
                                                                                |);
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::fmt::rt::Argument",
                                                                                    "new_display",
                                                                                    [ Ty.path "u32"
                                                                                    ]
                                                                                  |),
                                                                                  [ nanos ]
                                                                                |)
                                                                              ]
                                                                          |));
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.alloc (|
                                                                            Value.Array
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::fmt::rt::Placeholder",
                                                                                    "new",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    Value.Integer 0;
                                                                                    Value.UnicodeChar
                                                                                      32;
                                                                                    Value.StructTuple
                                                                                      "core::fmt::rt::Alignment::Unknown"
                                                                                      [];
                                                                                    Value.Integer 0;
                                                                                    Value.StructTuple
                                                                                      "core::fmt::rt::Count::Implied"
                                                                                      [];
                                                                                    Value.StructTuple
                                                                                      "core::fmt::rt::Count::Implied"
                                                                                      []
                                                                                  ]
                                                                                |);
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::fmt::rt::Placeholder",
                                                                                    "new",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    Value.Integer 1;
                                                                                    Value.UnicodeChar
                                                                                      32;
                                                                                    Value.StructTuple
                                                                                      "core::fmt::rt::Alignment::Unknown"
                                                                                      [];
                                                                                    Value.Integer 8;
                                                                                    Value.StructTuple
                                                                                      "core::fmt::rt::Count::Implied"
                                                                                      [];
                                                                                    Value.StructTuple
                                                                                      "core::fmt::rt::Count::Is"
                                                                                      [
                                                                                        Value.Integer
                                                                                          3
                                                                                      ]
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                          |));
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "core::fmt::rt::UnsafeArg",
                                                                            "new",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              |) in
                                                            res
                                                          ]
                                                        |)
                                                      ]
                                                    |)
                                                  |)));
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (M.alloc (|
                                                    M.call_closure (|
                                                      M.get_trait_method (|
                                                        "colored::Colorize",
                                                        Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                                        [],
                                                        "bold",
                                                        []
                                                      |),
                                                      [
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::deref::Deref",
                                                            Ty.path "alloc::string::String",
                                                            [],
                                                            "deref",
                                                            []
                                                          |),
                                                          [
                                                            let res :=
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_function (|
                                                                    "alloc::fmt::format",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "core::fmt::Arguments",
                                                                        "new_v1",
                                                                        []
                                                                      |),
                                                                      [
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.alloc (|
                                                                            Value.Array
                                                                              [
                                                                                M.read (|
                                                                                  Value.String ""
                                                                                |);
                                                                                M.read (|
                                                                                  Value.String "ns"
                                                                                |)
                                                                              ]
                                                                          |));
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.alloc (|
                                                                            Value.Array
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::fmt::rt::Argument",
                                                                                    "new_display",
                                                                                    [ Ty.path "u32"
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        M.get_associated_function (|
                                                                                          Ty.path
                                                                                            "core::time::Duration",
                                                                                          "subsec_nanos",
                                                                                          []
                                                                                        |),
                                                                                        [ final_time
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                          |))
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              |) in
                                                            res
                                                          ]
                                                        |)
                                                      ]
                                                    |)
                                                  |)))
                                            ]
                                          |)))
                                    ]
                                  |)))
                            ]
                          |)
                        |) in
                      let end_info :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_trait_method (|
                              "colored::Colorize",
                              Ty.path "colored::ColoredString",
                              [],
                              "bold",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_trait_method (|
                                  "colored::Colorize",
                                  Ty.apply (Ty.path "&") [ Ty.path "str" ],
                                  [],
                                  "green",
                                  []
                                |),
                                [ M.read (| Value.String "End:" |) ]
                              |)
                            ]
                          |)
                        |) in
                      let message :=
                        M.copy (|
                          let res :=
                            M.alloc (|
                              M.call_closure (|
                                M.get_function (| "alloc::fmt::format", [] |),
                                [
                                  M.call_closure (|
                                    M.get_associated_function (|
                                      Ty.path "core::fmt::Arguments",
                                      "new_v1",
                                      []
                                    |),
                                    [
                                      (* Unsize *)
                                      M.pointer_coercion
                                        (M.alloc (|
                                          Value.Array
                                            [
                                              M.read (| Value.String "" |);
                                              M.read (| Value.String " " |)
                                            ]
                                        |));
                                      (* Unsize *)
                                      M.pointer_coercion
                                        (M.alloc (|
                                          Value.Array
                                            [
                                              M.call_closure (|
                                                M.get_associated_function (|
                                                  Ty.path "core::fmt::rt::Argument",
                                                  "new_display",
                                                  [ Ty.path "alloc::string::String" ]
                                                |),
                                                [
                                                  M.SubPointer.get_struct_record_field (|
                                                    assign_timer,
                                                    "ark_std::perf_trace::inner::TimerInfo",
                                                    "msg"
                                                  |)
                                                ]
                                              |);
                                              M.call_closure (|
                                                M.get_associated_function (|
                                                  Ty.path "core::fmt::rt::Argument",
                                                  "new_display",
                                                  [ Ty.apply (Ty.path "&") [ Ty.path "str" ] ]
                                                |),
                                                [
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      M.get_trait_method (|
                                                        "core::ops::function::Fn",
                                                        Ty.function
                                                          [ Ty.tuple [] ]
                                                          (Ty.apply
                                                            (Ty.path "&")
                                                            [ Ty.path "str" ]),
                                                        [ Ty.tuple [] ],
                                                        "call",
                                                        []
                                                      |),
                                                      [
                                                        M.alloc (|
                                                          M.closure
                                                            (fun γ =>
                                                              ltac:(M.monadic
                                                                match γ with
                                                                | [ α0 ] =>
                                                                  M.match_operator (|
                                                                    M.alloc (| α0 |),
                                                                    [
                                                                      fun γ =>
                                                                        ltac:(M.monadic
                                                                          (M.read (|
                                                                            Value.String ""
                                                                          |)))
                                                                    ]
                                                                  |)
                                                                | _ => M.impossible (||)
                                                                end))
                                                        |);
                                                        Value.Tuple []
                                                      ]
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            ]
                                        |))
                                    ]
                                  |)
                                ]
                              |)
                            |) in
                          res
                        |) in
                      let _ :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.path "core::sync::atomic::AtomicUsize",
                              "fetch_sub",
                              []
                            |),
                            [
                              M.read (|
                                M.get_constant (| "ark_std::perf_trace::inner::NUM_INDENT" |)
                              |);
                              Value.Integer 1;
                              Value.StructTuple "core::sync::atomic::Ordering::Relaxed" []
                            ]
                          |)
                        |) in
                      let indent_amount :=
                        M.alloc (|
                          BinOp.Panic.mul (|
                            Integer.Usize,
                            Value.Integer 2,
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "core::sync::atomic::AtomicUsize",
                                "fetch_add",
                                []
                              |),
                              [
                                M.read (|
                                  M.get_constant (| "ark_std::perf_trace::inner::NUM_INDENT" |)
                                |);
                                Value.Integer 0;
                                Value.StructTuple "core::sync::atomic::Ordering::Relaxed" []
                              ]
                            |)
                          |)
                        |) in
                      let indent :=
                        M.alloc (|
                          M.call_closure (|
                            M.get_function (| "ark_std::perf_trace::inner::compute_indent", [] |),
                            [ M.read (| indent_amount |) ]
                          |)
                        |) in
                      let _ :=
                        let _ :=
                          M.alloc (|
                            M.call_closure (|
                              M.get_function (| "std::io::stdio::_print", [] |),
                              [
                                M.call_closure (|
                                  M.get_associated_function (|
                                    Ty.path "core::fmt::Arguments",
                                    "new_v1_formatted",
                                    []
                                  |),
                                  [
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.read (| Value.String "" |);
                                            M.read (| Value.String "" |);
                                            M.read (| Value.String " " |);
                                            M.read (| Value.String "" |);
                                            M.read (| Value.String "
" |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "alloc::string::String" ]
                                              |),
                                              [ indent ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "colored::ColoredString" ]
                                              |),
                                              [ end_info ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "alloc::string::String" ]
                                              |),
                                              [ message ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "new_display",
                                                [ Ty.path "colored::ColoredString" ]
                                              |),
                                              [ final_time ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Argument",
                                                "from_usize",
                                                []
                                              |),
                                              [
                                                M.alloc (|
                                                  BinOp.Panic.sub (|
                                                    Integer.Usize,
                                                    Value.Integer 75,
                                                    M.read (| indent_amount |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          ]
                                      |));
                                    (* Unsize *)
                                    M.pointer_coercion
                                      (M.alloc (|
                                        Value.Array
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Placeholder",
                                                "new",
                                                []
                                              |),
                                              [
                                                Value.Integer 0;
                                                Value.UnicodeChar 32;
                                                Value.StructTuple
                                                  "core::fmt::rt::Alignment::Unknown"
                                                  [];
                                                Value.Integer 0;
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Implied"
                                                  [];
                                                Value.StructTuple "core::fmt::rt::Count::Implied" []
                                              ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Placeholder",
                                                "new",
                                                []
                                              |),
                                              [
                                                Value.Integer 1;
                                                Value.UnicodeChar 32;
                                                Value.StructTuple
                                                  "core::fmt::rt::Alignment::Unknown"
                                                  [];
                                                Value.Integer 0;
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Implied"
                                                  [];
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Is"
                                                  [ Value.Integer 8 ]
                                              ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Placeholder",
                                                "new",
                                                []
                                              |),
                                              [
                                                Value.Integer 2;
                                                Value.UnicodeChar 46;
                                                Value.StructTuple
                                                  "core::fmt::rt::Alignment::Left"
                                                  [];
                                                Value.Integer 0;
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Implied"
                                                  [];
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Param"
                                                  [ Value.Integer 4 ]
                                              ]
                                            |);
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.path "core::fmt::rt::Placeholder",
                                                "new",
                                                []
                                              |),
                                              [
                                                Value.Integer 3;
                                                Value.UnicodeChar 32;
                                                Value.StructTuple
                                                  "core::fmt::rt::Alignment::Unknown"
                                                  [];
                                                Value.Integer 0;
                                                Value.StructTuple
                                                  "core::fmt::rt::Count::Implied"
                                                  [];
                                                Value.StructTuple "core::fmt::rt::Count::Implied" []
                                              ]
                                            |)
                                          ]
                                      |));
                                    M.call_closure (|
                                      M.get_associated_function (|
                                        Ty.path "core::fmt::rt::UnsafeArg",
                                        "new",
                                        []
                                      |),
                                      []
                                    |)
                                  ]
                                |)
                              ]
                            |)
                          |) in
                        M.alloc (| Value.Tuple [] |) in
                      M.alloc (| Value.Tuple [] |) in
                    M.alloc (| Value.Tuple [] |) in
                  M.alloc (| Value.StructTuple "core::result::Result::Ok" [ Value.Tuple [] ] |)
                |)))
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        forall (F : Ty.t),
        M.IsTraitInstance
          "halo2_proofs::plonk::circuit::Circuit"
          (Self F)
          (* Trait polymorphic types *) [ (* F *) F ]
          (* Instance *)
          [
            ("Config", InstanceField.Ty (_Config F));
            ("FloorPlanner", InstanceField.Ty (_FloorPlanner F));
            ("without_witnesses", InstanceField.Method (without_witnesses F));
            ("configure", InstanceField.Method (configure F));
            ("synthesize", InstanceField.Method (synthesize F))
          ].
    End Impl_halo2_proofs_plonk_circuit_Circuit_where_pairing_bn256_arithmetic_fields_FieldExt_F_F_for_delphinus_zkwasm_circuits_ZkWasmCircuit_F.
  End zkwasm_circuit.
End circuits.
