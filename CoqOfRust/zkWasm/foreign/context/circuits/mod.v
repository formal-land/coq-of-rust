(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module foreign.
  Module context.
    Module circuits.
      Definition value_CONTEXT_FOREIGN_TABLE_KEY : Value.t :=
        M.run ltac:(M.monadic (Value.String "wasm-context-helper-table")).
      
      (* StructRecord
        {
          name := "ContextContHelperTableConfig";
          ty_params := [ "F" ];
          fields :=
            [
              ("from_zero_index",
                Ty.apply
                  (Ty.path "halo2_proofs::plonk::circuit::Column")
                  [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ]);
              ("input",
                Ty.apply
                  (Ty.path "halo2_proofs::plonk::circuit::Column")
                  [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
              ("output",
                Ty.apply
                  (Ty.path "halo2_proofs::plonk::circuit::Column")
                  [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
              ("_mark", Ty.apply (Ty.path "core::marker::PhantomData") [ F ])
            ];
        } *)
      
      Module Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_foreign_context_circuits_ContextContHelperTableConfig_F.
        Definition Self (F : Ty.t) : Ty.t :=
          Ty.apply
            (Ty.path "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig")
            [ F ].
        
        (* Clone *)
        Definition clone (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
          let Self : Ty.t := Self F in
          match τ, α with
          | [], [ self ] =>
            ltac:(M.monadic
              (let self := M.alloc (| self |) in
              Value.StructRecord
                "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig"
                [
                  ("from_zero_index",
                    M.call_closure (|
                      M.get_trait_method (|
                        "core::clone::Clone",
                        Ty.apply
                          (Ty.path "halo2_proofs::plonk::circuit::Column")
                          [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ],
                        [],
                        "clone",
                        []
                      |),
                      [
                        M.SubPointer.get_struct_record_field (|
                          M.read (| self |),
                          "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig",
                          "from_zero_index"
                        |)
                      ]
                    |));
                  ("input",
                    M.call_closure (|
                      M.get_trait_method (|
                        "core::clone::Clone",
                        Ty.apply
                          (Ty.path "halo2_proofs::plonk::circuit::Column")
                          [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                        [],
                        "clone",
                        []
                      |),
                      [
                        M.SubPointer.get_struct_record_field (|
                          M.read (| self |),
                          "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig",
                          "input"
                        |)
                      ]
                    |));
                  ("output",
                    M.call_closure (|
                      M.get_trait_method (|
                        "core::clone::Clone",
                        Ty.apply
                          (Ty.path "halo2_proofs::plonk::circuit::Column")
                          [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                        [],
                        "clone",
                        []
                      |),
                      [
                        M.SubPointer.get_struct_record_field (|
                          M.read (| self |),
                          "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig",
                          "output"
                        |)
                      ]
                    |));
                  ("_mark",
                    M.call_closure (|
                      M.get_trait_method (|
                        "core::clone::Clone",
                        Ty.apply (Ty.path "core::marker::PhantomData") [ F ],
                        [],
                        "clone",
                        []
                      |),
                      [
                        M.SubPointer.get_struct_record_field (|
                          M.read (| self |),
                          "delphinus_zkwasm::foreign::context::circuits::ContextContHelperTableConfig",
                          "_mark"
                        |)
                      ]
                    |))
                ]))
          | _, _ => M.impossible
          end.
        
        Axiom Implements :
          forall (F : Ty.t),
          M.IsTraitInstance
            "core::clone::Clone"
            (Self F)
            (* Trait polymorphic types *) []
            (* Instance *) [ ("clone", InstanceField.Method (clone F)) ].
      End Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_foreign_context_circuits_ContextContHelperTableConfig_F.
    End circuits.
  End context.
End foreign.
