(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module loader.
  Module err.
    (*
    Enum PreCheckErr
    {
      ty_params := [];
      variants :=
        [
          {
            name := "ZkmainNotExists";
            item := StructTuple [];
            discriminant := None;
          };
          {
            name := "ZkmainIsNotFunction";
            item := StructTuple [];
            discriminant := None;
          }
        ];
    }
    *)
    
    Module Impl_core_fmt_Debug_for_delphinus_zkwasm_loader_err_PreCheckErr.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::loader::err::PreCheckErr".
      
      (* Debug *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              M.get_associated_function (| Ty.path "core::fmt::Formatter", "write_str", [] |),
              [
                M.read (| f |);
                M.read (|
                  M.match_operator (|
                    self,
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.read (| γ |) in
                          M.alloc (| M.read (| Value.String "ZkmainNotExists" |) |)));
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.read (| γ |) in
                          M.alloc (| M.read (| Value.String "ZkmainIsNotFunction" |) |)))
                    ]
                  |)
                |)
              ]
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_delphinus_zkwasm_loader_err_PreCheckErr.
    
    (*
    Enum RuntimeErr
    {
      ty_params := [];
      variants := [];
    }
    *)
    
    Module Impl_core_fmt_Debug_for_delphinus_zkwasm_loader_err_RuntimeErr.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::loader::err::RuntimeErr".
      
      (* Debug *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.never_to_any (| M.read (| M.match_operator (| M.read (| self |), [] |) |) |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_delphinus_zkwasm_loader_err_RuntimeErr.
    
    (*
    Enum Error
    {
      ty_params := [];
      variants :=
        [
          {
            name := "PreCheck";
            item := StructTuple [ Ty.path "delphinus_zkwasm::loader::err::PreCheckErr" ];
            discriminant := None;
          }
        ];
    }
    *)
    
    Module Impl_core_fmt_Debug_for_delphinus_zkwasm_loader_err_Error.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::loader::err::Error".
      
      (* Debug *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.read (|
              M.match_operator (|
                self,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      let γ1_0 :=
                        M.SubPointer.get_struct_tuple_field (|
                          γ,
                          "delphinus_zkwasm::loader::err::Error::PreCheck",
                          0
                        |) in
                      let __self_0 := M.alloc (| γ1_0 |) in
                      M.alloc (|
                        M.call_closure (|
                          M.get_associated_function (|
                            Ty.path "core::fmt::Formatter",
                            "debug_tuple_field1_finish",
                            []
                          |),
                          [
                            M.read (| f |);
                            M.read (| Value.String "PreCheck" |);
                            (* Unsize *) M.pointer_coercion __self_0
                          ]
                        |)
                      |)))
                ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_delphinus_zkwasm_loader_err_Error.
    
    Module Impl_core_fmt_Display_for_delphinus_zkwasm_loader_err_Error.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::loader::err::Error".
      
      (*
          fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
              write!(f, "{:?}", self)
          }
      *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              M.get_associated_function (| Ty.path "core::fmt::Formatter", "write_fmt", [] |),
              [
                M.read (| f |);
                M.call_closure (|
                  M.get_associated_function (| Ty.path "core::fmt::Arguments", "new_v1", [] |),
                  [
                    (* Unsize *)
                    M.pointer_coercion (M.alloc (| Value.Array [ M.read (| Value.String "" |) ] |));
                    (* Unsize *)
                    M.pointer_coercion
                      (M.alloc (|
                        Value.Array
                          [
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "core::fmt::rt::Argument",
                                "new_debug",
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    [ Ty.path "delphinus_zkwasm::loader::err::Error" ]
                                ]
                              |),
                              [ self ]
                            |)
                          ]
                      |))
                  ]
                |)
              ]
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Display"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Display_for_delphinus_zkwasm_loader_err_Error.
  End err.
End loader.
