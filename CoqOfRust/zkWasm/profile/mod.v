(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module profile.
  (* Trait *)
  (* Empty module 'Profiler' *)
  
  Module Impl_delphinus_zkwasm_profile_Profiler_for_specs_Tables.
    Definition Self : Ty.t := Ty.path "specs::Tables".
    
    (*
        fn profile_tables(&self) {
            //self.profile_instruction();
        }
    *)
    Definition profile_tables (τ : list Ty.t) (α : list Value.t) : M :=
      match τ, α with
      | [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.Tuple []))
      | _, _ => M.impossible
      end.
    
    Axiom Implements :
      M.IsTraitInstance
        "delphinus_zkwasm::profile::Profiler"
        Self
        (* Trait polymorphic types *) []
        (* Instance *) [ ("profile_tables", InstanceField.Method profile_tables) ].
  End Impl_delphinus_zkwasm_profile_Profiler_for_specs_Tables.
End profile.
