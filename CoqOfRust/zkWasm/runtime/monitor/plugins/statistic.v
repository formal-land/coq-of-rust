(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module runtime.
  Module monitor.
    Module plugins.
      Module statistic.
        (* StructRecord
          {
            name := "StatisticPlugin";
            ty_params := [];
            fields :=
              [
                ("phantom_helper",
                  Ty.path "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper");
                ("observer",
                  Ty.apply
                    (Ty.path "alloc::rc::Rc")
                    [
                      Ty.apply
                        (Ty.path "core::cell::RefCell")
                        [ Ty.path "delphinus_zkwasm::runtime::monitor::observer::Observer" ];
                      Ty.path "alloc::alloc::Global"
                    ])
              ];
          } *)
        
        Module Impl_delphinus_zkwasm_runtime_monitor_plugins_statistic_StatisticPlugin.
          Definition Self : Ty.t :=
            Ty.path "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin".
          
          (*
              pub fn new(phantom_regex: &Vec<String>, wasm_input: FuncRef) -> Self {
                  Self {
                      phantom_helper: PhantomHelper::new(phantom_regex, wasm_input),
                      observer: Rc::new(RefCell::new(Observer::default())),
                  }
              }
          *)
          Definition new (τ : list Ty.t) (α : list Value.t) : M :=
            match τ, α with
            | [], [ phantom_regex; wasm_input ] =>
              ltac:(M.monadic
                (let phantom_regex := M.alloc (| phantom_regex |) in
                let wasm_input := M.alloc (| wasm_input |) in
                Value.StructRecord
                  "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin"
                  [
                    ("phantom_helper",
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.path
                            "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper",
                          "new",
                          []
                        |),
                        [ M.read (| phantom_regex |); M.read (| wasm_input |) ]
                      |));
                    ("observer",
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "alloc::rc::Rc")
                            [
                              Ty.apply
                                (Ty.path "core::cell::RefCell")
                                [ Ty.path "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ],
                          "new",
                          []
                        |),
                        [
                          M.call_closure (|
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "core::cell::RefCell")
                                [ Ty.path "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                ],
                              "new",
                              []
                            |),
                            [
                              M.call_closure (|
                                M.get_trait_method (|
                                  "core::default::Default",
                                  Ty.path "delphinus_zkwasm::runtime::monitor::observer::Observer",
                                  [],
                                  "default",
                                  []
                                |),
                                []
                              |)
                            ]
                          |)
                        ]
                      |))
                  ]))
            | _, _ => M.impossible
            end.
          
          Axiom AssociatedFunction_new : M.IsAssociatedFunction Self "new" new.
          
          (*
              pub fn expose_observer(&self) -> Rc<RefCell<Observer>> {
                  self.observer.clone()
              }
          *)
          Definition expose_observer (τ : list Ty.t) (α : list Value.t) : M :=
            match τ, α with
            | [], [ self ] =>
              ltac:(M.monadic
                (let self := M.alloc (| self |) in
                M.call_closure (|
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "alloc::rc::Rc")
                      [
                        Ty.apply
                          (Ty.path "core::cell::RefCell")
                          [ Ty.path "delphinus_zkwasm::runtime::monitor::observer::Observer" ];
                        Ty.path "alloc::alloc::Global"
                      ],
                    [],
                    "clone",
                    []
                  |),
                  [
                    M.SubPointer.get_struct_record_field (|
                      M.read (| self |),
                      "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                      "observer"
                    |)
                  ]
                |)))
            | _, _ => M.impossible
            end.
          
          Axiom AssociatedFunction_expose_observer :
            M.IsAssociatedFunction Self "expose_observer" expose_observer.
        End Impl_delphinus_zkwasm_runtime_monitor_plugins_statistic_StatisticPlugin.
        
        Module Impl_wasmi_monitor_Monitor_for_delphinus_zkwasm_runtime_monitor_plugins_statistic_StatisticPlugin.
          Definition Self : Ty.t :=
            Ty.path "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin".
          
          (*
              fn register_module(
                  &mut self,
                  module: &parity_wasm::elements::Module,
                  module_ref: &wasmi::ModuleRef,
                  entry: &str,
              ) -> Result<(), wasmi::Error> {
                  self.phantom_helper
                      .register_module(module, module_ref, entry)?;
          
                  Ok(())
              }
          *)
          Definition register_module (τ : list Ty.t) (α : list Value.t) : M :=
            match τ, α with
            | [], [ self; module; module_ref; entry ] =>
              ltac:(M.monadic
                (let self := M.alloc (| self |) in
                let module := M.alloc (| module |) in
                let module_ref := M.alloc (| module_ref |) in
                let entry := M.alloc (| entry |) in
                M.catch_return (|
                  ltac:(M.monadic
                    (M.read (|
                      let _ :=
                        M.match_operator (|
                          M.alloc (|
                            M.call_closure (|
                              M.get_trait_method (|
                                "core::ops::try_trait::Try",
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  [ Ty.tuple []; Ty.path "wasmi::Error" ],
                                [],
                                "branch",
                                []
                              |),
                              [
                                M.call_closure (|
                                  M.get_trait_method (|
                                    "wasmi::monitor::Monitor",
                                    Ty.path
                                      "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper",
                                    [],
                                    "register_module",
                                    []
                                  |),
                                  [
                                    M.SubPointer.get_struct_record_field (|
                                      M.read (| self |),
                                      "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                      "phantom_helper"
                                    |);
                                    M.read (| module |);
                                    M.read (| module_ref |);
                                    M.read (| entry |)
                                  ]
                                |)
                              ]
                            |)
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 :=
                                  M.SubPointer.get_struct_tuple_field (|
                                    γ,
                                    "core::ops::control_flow::ControlFlow::Break",
                                    0
                                  |) in
                                let residual := M.copy (| γ0_0 |) in
                                M.alloc (|
                                  M.never_to_any (|
                                    M.read (|
                                      M.return_ (|
                                        M.call_closure (|
                                          M.get_trait_method (|
                                            "core::ops::try_trait::FromResidual",
                                            Ty.apply
                                              (Ty.path "core::result::Result")
                                              [ Ty.tuple []; Ty.path "wasmi::Error" ],
                                            [
                                              Ty.apply
                                                (Ty.path "core::result::Result")
                                                [
                                                  Ty.path "core::convert::Infallible";
                                                  Ty.path "wasmi::Error"
                                                ]
                                            ],
                                            "from_residual",
                                            []
                                          |),
                                          [ M.read (| residual |) ]
                                        |)
                                      |)
                                    |)
                                  |)
                                |)));
                            fun γ =>
                              ltac:(M.monadic
                                (let γ0_0 :=
                                  M.SubPointer.get_struct_tuple_field (|
                                    γ,
                                    "core::ops::control_flow::ControlFlow::Continue",
                                    0
                                  |) in
                                let val := M.copy (| γ0_0 |) in
                                val))
                          ]
                        |) in
                      M.alloc (| Value.StructTuple "core::result::Result::Ok" [ Value.Tuple [] ] |)
                    |)))
                |)))
            | _, _ => M.impossible
            end.
          
          (*
              fn invoke_instruction_post_hook(
                  &mut self,
                  fid: u32,
                  _iid: u32,
                  _sp: u32,
                  _allocated_memory_pages: u32,
                  value_stack: &wasmi::runner::ValueStack,
                  _function_context: &wasmi::runner::FunctionContext,
                  _instruction: &wasmi::isa::Instruction,
                  outcome: &wasmi::runner::InstructionOutcome,
              ) {
                  self.observer.borrow_mut().counter +=
                      !self.phantom_helper.is_in_phantom_function() as usize;
          
                  match outcome {
                      InstructionOutcome::ExecuteCall(func_ref) => {
                          if let FuncInstanceInternal::Internal { index, .. } = func_ref.as_internal() {
                              if self.phantom_helper.is_phantom_function( *index as u32) {
                                  self.observer.borrow_mut().is_in_phantom = true;
          
                                  self.phantom_helper.push_frame(value_stack.len() as u32);
                              }
                          }
                      }
                      InstructionOutcome::Return(drop_keep) => {
                          if self.phantom_helper.is_phantom_function(fid) {
                              self.phantom_helper.pop_frame();
          
                              if !self.phantom_helper.is_in_phantom_function() {
                                  self.observer.borrow_mut().is_in_phantom = false;
          
                                  if let Keep::Single(t) = drop_keep.keep {
                                      // I32Const
                                      self.observer.borrow_mut().counter += 1;
                                      // Call wasm_input host function
                                      self.observer.borrow_mut().counter += 1;
                                      // Convert if needed
                                      self.observer.borrow_mut().counter +=
                                          (!matches!(t, ValueType::I64)) as usize;
                                  }
                                  // Return
                                  self.observer.borrow_mut().counter += 1;
                              }
                          }
                      }
                      _ => {}
                  }
              }
          *)
          Definition invoke_instruction_post_hook (τ : list Ty.t) (α : list Value.t) : M :=
            match τ, α with
            | [],
                [
                  self;
                  fid;
                  _iid;
                  _sp;
                  _allocated_memory_pages;
                  value_stack;
                  _function_context;
                  _instruction;
                  outcome
                ] =>
              ltac:(M.monadic
                (let self := M.alloc (| self |) in
                let fid := M.alloc (| fid |) in
                let _iid := M.alloc (| _iid |) in
                let _sp := M.alloc (| _sp |) in
                let _allocated_memory_pages := M.alloc (| _allocated_memory_pages |) in
                let value_stack := M.alloc (| value_stack |) in
                let _function_context := M.alloc (| _function_context |) in
                let _instruction := M.alloc (| _instruction |) in
                let outcome := M.alloc (| outcome |) in
                M.read (|
                  let _ :=
                    let β :=
                      M.SubPointer.get_struct_record_field (|
                        M.call_closure (|
                          M.get_trait_method (|
                            "core::ops::deref::DerefMut",
                            Ty.apply
                              (Ty.path "core::cell::RefMut")
                              [ Ty.path "delphinus_zkwasm::runtime::monitor::observer::Observer" ],
                            [],
                            "deref_mut",
                            []
                          |),
                          [
                            M.alloc (|
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "core::cell::RefCell")
                                    [
                                      Ty.path
                                        "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                    ],
                                  "borrow_mut",
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    M.get_trait_method (|
                                      "core::ops::deref::Deref",
                                      Ty.apply
                                        (Ty.path "alloc::rc::Rc")
                                        [
                                          Ty.apply
                                            (Ty.path "core::cell::RefCell")
                                            [
                                              Ty.path
                                                "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ],
                                      [],
                                      "deref",
                                      []
                                    |),
                                    [
                                      M.SubPointer.get_struct_record_field (|
                                        M.read (| self |),
                                        "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                        "observer"
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            |)
                          ]
                        |),
                        "delphinus_zkwasm::runtime::monitor::observer::Observer",
                        "counter"
                      |) in
                    M.write (|
                      β,
                      BinOp.Panic.add (|
                        Integer.Usize,
                        M.read (| β |),
                        M.rust_cast
                          (UnOp.Pure.not
                            (M.call_closure (|
                              M.get_associated_function (|
                                Ty.path
                                  "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper",
                                "is_in_phantom_function",
                                []
                              |),
                              [
                                M.SubPointer.get_struct_record_field (|
                                  M.read (| self |),
                                  "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                  "phantom_helper"
                                |)
                              ]
                            |)))
                      |)
                    |) in
                  M.match_operator (|
                    outcome,
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.read (| γ |) in
                          let γ1_0 :=
                            M.SubPointer.get_struct_tuple_field (|
                              γ,
                              "wasmi::runner::InstructionOutcome::ExecuteCall",
                              0
                            |) in
                          let func_ref := M.alloc (| γ1_0 |) in
                          M.match_operator (|
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.alloc (|
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.path "wasmi::func::FuncInstance",
                                          "as_internal",
                                          []
                                        |),
                                        [
                                          M.call_closure (|
                                            M.get_trait_method (|
                                              "core::ops::deref::Deref",
                                              Ty.path "wasmi::func::FuncRef",
                                              [],
                                              "deref",
                                              []
                                            |),
                                            [ M.read (| func_ref |) ]
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let γ := M.read (| γ |) in
                                  let γ1_0 :=
                                    M.SubPointer.get_struct_record_field (|
                                      γ,
                                      "wasmi::func::FuncInstanceInternal::Internal",
                                      "index"
                                    |) in
                                  let index := M.alloc (| γ1_0 |) in
                                  M.match_operator (|
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path
                                                      "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper",
                                                    "is_phantom_function",
                                                    []
                                                  |),
                                                  [
                                                    M.SubPointer.get_struct_record_field (|
                                                      M.read (| self |),
                                                      "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                      "phantom_helper"
                                                    |);
                                                    M.rust_cast (M.read (| M.read (| index |) |))
                                                  ]
                                                |)
                                              |)) in
                                          let _ :=
                                            M.is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let _ :=
                                            M.write (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::ops::deref::DerefMut",
                                                    Ty.apply
                                                      (Ty.path "core::cell::RefMut")
                                                      [
                                                        Ty.path
                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                      ],
                                                    [],
                                                    "deref_mut",
                                                    []
                                                  |),
                                                  [
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "core::cell::RefCell")
                                                            [
                                                              Ty.path
                                                                "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                            ],
                                                          "borrow_mut",
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::rc::Rc")
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "core::cell::RefCell")
                                                                    [
                                                                      Ty.path
                                                                        "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              "deref",
                                                              []
                                                            |),
                                                            [
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.read (| self |),
                                                                "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                                "observer"
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  ]
                                                |),
                                                "delphinus_zkwasm::runtime::monitor::observer::Observer",
                                                "is_in_phantom"
                                              |),
                                              Value.Bool true
                                            |) in
                                          let _ :=
                                            M.alloc (|
                                              M.call_closure (|
                                                M.get_associated_function (|
                                                  Ty.path
                                                    "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper",
                                                  "push_frame",
                                                  []
                                                |),
                                                [
                                                  M.SubPointer.get_struct_record_field (|
                                                    M.read (| self |),
                                                    "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                    "phantom_helper"
                                                  |);
                                                  M.rust_cast
                                                    (M.call_closure (|
                                                      M.get_associated_function (|
                                                        Ty.path "wasmi::runner::ValueStack",
                                                        "len",
                                                        []
                                                      |),
                                                      [ M.read (| value_stack |) ]
                                                    |))
                                                ]
                                              |)
                                            |) in
                                          M.alloc (| Value.Tuple [] |)));
                                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                    ]
                                  |)));
                              fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                            ]
                          |)));
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.read (| γ |) in
                          let γ1_0 :=
                            M.SubPointer.get_struct_tuple_field (|
                              γ,
                              "wasmi::runner::InstructionOutcome::Return",
                              0
                            |) in
                          let drop_keep := M.alloc (| γ1_0 |) in
                          M.match_operator (|
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        M.call_closure (|
                                          M.get_associated_function (|
                                            Ty.path
                                              "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper",
                                            "is_phantom_function",
                                            []
                                          |),
                                          [
                                            M.SubPointer.get_struct_record_field (|
                                              M.read (| self |),
                                              "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                              "phantom_helper"
                                            |);
                                            M.read (| fid |)
                                          ]
                                        |)
                                      |)) in
                                  let _ :=
                                    M.is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let _ :=
                                    M.alloc (|
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.path
                                            "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper",
                                          "pop_frame",
                                          []
                                        |),
                                        [
                                          M.SubPointer.get_struct_record_field (|
                                            M.read (| self |),
                                            "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                            "phantom_helper"
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.match_operator (|
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                UnOp.Pure.not
                                                  (M.call_closure (|
                                                    M.get_associated_function (|
                                                      Ty.path
                                                        "delphinus_zkwasm::runtime::monitor::plugins::phantom::PhantomHelper",
                                                      "is_in_phantom_function",
                                                      []
                                                    |),
                                                    [
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.read (| self |),
                                                        "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                        "phantom_helper"
                                                      |)
                                                    ]
                                                  |))
                                              |)) in
                                          let _ :=
                                            M.is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let _ :=
                                            M.write (|
                                              M.SubPointer.get_struct_record_field (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::ops::deref::DerefMut",
                                                    Ty.apply
                                                      (Ty.path "core::cell::RefMut")
                                                      [
                                                        Ty.path
                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                      ],
                                                    [],
                                                    "deref_mut",
                                                    []
                                                  |),
                                                  [
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "core::cell::RefCell")
                                                            [
                                                              Ty.path
                                                                "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                            ],
                                                          "borrow_mut",
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::rc::Rc")
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "core::cell::RefCell")
                                                                    [
                                                                      Ty.path
                                                                        "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              "deref",
                                                              []
                                                            |),
                                                            [
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.read (| self |),
                                                                "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                                "observer"
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  ]
                                                |),
                                                "delphinus_zkwasm::runtime::monitor::observer::Observer",
                                                "is_in_phantom"
                                              |),
                                              Value.Bool false
                                            |) in
                                          let _ :=
                                            M.match_operator (|
                                              M.alloc (| Value.Tuple [] |),
                                              [
                                                fun γ =>
                                                  ltac:(M.monadic
                                                    (let γ :=
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.read (| drop_keep |),
                                                        "wasmi::isa::DropKeep",
                                                        "keep"
                                                      |) in
                                                    let γ0_0 :=
                                                      M.SubPointer.get_struct_tuple_field (|
                                                        γ,
                                                        "wasmi::isa::Keep::Single",
                                                        0
                                                      |) in
                                                    let t := M.copy (| γ0_0 |) in
                                                    let _ :=
                                                      let β :=
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.call_closure (|
                                                            M.get_trait_method (|
                                                              "core::ops::deref::DerefMut",
                                                              Ty.apply
                                                                (Ty.path "core::cell::RefMut")
                                                                [
                                                                  Ty.path
                                                                    "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                ],
                                                              [],
                                                              "deref_mut",
                                                              []
                                                            |),
                                                            [
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::cell::RefCell")
                                                                      [
                                                                        Ty.path
                                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                      ],
                                                                    "borrow_mut",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::deref::Deref",
                                                                        Ty.apply
                                                                          (Ty.path "alloc::rc::Rc")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::cell::RefCell")
                                                                              [
                                                                                Ty.path
                                                                                  "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        [],
                                                                        "deref",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.SubPointer.get_struct_record_field (|
                                                                          M.read (| self |),
                                                                          "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                                          "observer"
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            ]
                                                          |),
                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer",
                                                          "counter"
                                                        |) in
                                                      M.write (|
                                                        β,
                                                        BinOp.Panic.add (|
                                                          Integer.Usize,
                                                          M.read (| β |),
                                                          Value.Integer 1
                                                        |)
                                                      |) in
                                                    let _ :=
                                                      let β :=
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.call_closure (|
                                                            M.get_trait_method (|
                                                              "core::ops::deref::DerefMut",
                                                              Ty.apply
                                                                (Ty.path "core::cell::RefMut")
                                                                [
                                                                  Ty.path
                                                                    "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                ],
                                                              [],
                                                              "deref_mut",
                                                              []
                                                            |),
                                                            [
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::cell::RefCell")
                                                                      [
                                                                        Ty.path
                                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                      ],
                                                                    "borrow_mut",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::deref::Deref",
                                                                        Ty.apply
                                                                          (Ty.path "alloc::rc::Rc")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::cell::RefCell")
                                                                              [
                                                                                Ty.path
                                                                                  "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        [],
                                                                        "deref",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.SubPointer.get_struct_record_field (|
                                                                          M.read (| self |),
                                                                          "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                                          "observer"
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            ]
                                                          |),
                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer",
                                                          "counter"
                                                        |) in
                                                      M.write (|
                                                        β,
                                                        BinOp.Panic.add (|
                                                          Integer.Usize,
                                                          M.read (| β |),
                                                          Value.Integer 1
                                                        |)
                                                      |) in
                                                    let _ :=
                                                      let β :=
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.call_closure (|
                                                            M.get_trait_method (|
                                                              "core::ops::deref::DerefMut",
                                                              Ty.apply
                                                                (Ty.path "core::cell::RefMut")
                                                                [
                                                                  Ty.path
                                                                    "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                ],
                                                              [],
                                                              "deref_mut",
                                                              []
                                                            |),
                                                            [
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::cell::RefCell")
                                                                      [
                                                                        Ty.path
                                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                      ],
                                                                    "borrow_mut",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::deref::Deref",
                                                                        Ty.apply
                                                                          (Ty.path "alloc::rc::Rc")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::cell::RefCell")
                                                                              [
                                                                                Ty.path
                                                                                  "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        [],
                                                                        "deref",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.SubPointer.get_struct_record_field (|
                                                                          M.read (| self |),
                                                                          "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                                          "observer"
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            ]
                                                          |),
                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer",
                                                          "counter"
                                                        |) in
                                                      M.write (|
                                                        β,
                                                        BinOp.Panic.add (|
                                                          Integer.Usize,
                                                          M.read (| β |),
                                                          M.rust_cast
                                                            (UnOp.Pure.not
                                                              (M.read (|
                                                                M.match_operator (|
                                                                  t,
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (M.alloc (|
                                                                          Value.Bool true
                                                                        |)));
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (M.alloc (|
                                                                          Value.Bool false
                                                                        |)))
                                                                  ]
                                                                |)
                                                              |)))
                                                        |)
                                                      |) in
                                                    M.alloc (| Value.Tuple [] |)));
                                                fun γ =>
                                                  ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                              ]
                                            |) in
                                          let _ :=
                                            let β :=
                                              M.SubPointer.get_struct_record_field (|
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::ops::deref::DerefMut",
                                                    Ty.apply
                                                      (Ty.path "core::cell::RefMut")
                                                      [
                                                        Ty.path
                                                          "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                      ],
                                                    [],
                                                    "deref_mut",
                                                    []
                                                  |),
                                                  [
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "core::cell::RefCell")
                                                            [
                                                              Ty.path
                                                                "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                            ],
                                                          "borrow_mut",
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::rc::Rc")
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "core::cell::RefCell")
                                                                    [
                                                                      Ty.path
                                                                        "delphinus_zkwasm::runtime::monitor::observer::Observer"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              "deref",
                                                              []
                                                            |),
                                                            [
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.read (| self |),
                                                                "delphinus_zkwasm::runtime::monitor::plugins::statistic::StatisticPlugin",
                                                                "observer"
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  ]
                                                |),
                                                "delphinus_zkwasm::runtime::monitor::observer::Observer",
                                                "counter"
                                              |) in
                                            M.write (|
                                              β,
                                              BinOp.Panic.add (|
                                                Integer.Usize,
                                                M.read (| β |),
                                                Value.Integer 1
                                              |)
                                            |) in
                                          M.alloc (| Value.Tuple [] |)));
                                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                    ]
                                  |)));
                              fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                            ]
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |)
                |)))
            | _, _ => M.impossible
            end.
          
          Axiom Implements :
            M.IsTraitInstance
              "wasmi::monitor::Monitor"
              Self
              (* Trait polymorphic types *) []
              (* Instance *)
              [
                ("register_module", InstanceField.Method register_module);
                ("invoke_instruction_post_hook", InstanceField.Method invoke_instruction_post_hook)
              ].
        End Impl_wasmi_monitor_Monitor_for_delphinus_zkwasm_runtime_monitor_plugins_statistic_StatisticPlugin.
      End statistic.
    End plugins.
  End monitor.
End runtime.
