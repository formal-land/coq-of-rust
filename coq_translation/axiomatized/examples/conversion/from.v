(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Number.
  Record t : Set := {
    value : i32;
  }.
  
  Global Instance Get_value : Notation.Dot "value" := {
    Notation.dot '(Build_t x0) := x0;
  }.
End Number.
Definition Number : Set := Number.t.

Module Impl_core_fmt_Debug_for_from_Number.
  Definition Self := from.Number.
  
  Parameter fmt : ref Self-> mut_ref core.fmt.Formatter -> M core.fmt.Result.
  
  Global Instance Method_fmt : Notation.Dot "fmt" := {
    Notation.dot := fmt;
  }.
  
  Global Instance I : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt := fmt;
  }.
End Impl_core_fmt_Debug_for_from_Number.

Module Impl_core_convert_From_for_from_Number.
  Definition Self := from.Number.
  
  Parameter from : i32 -> M Self.
  
  Global Instance AssociatedFunction_from :
    Notation.DoubleColon Self "from" := {
    Notation.double_colon := from;
  }.
  
  Global Instance I : core.convert.From.Trait Self (T := i32) := {
    core.convert.From.from := from;
  }.
End Impl_core_convert_From_for_from_Number.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : unit -> M unit.
