(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Ltac Result T :=
  refine
    (core.result.Result
      T
      (alloc.boxed.Box _ (* OpaqueTy *) alloc.boxed.Box.Default.A)).

Module  EmptyVec.
Section EmptyVec.
  Context `{ℋ : State.Trait}.
  
  Inductive t : Set := Build.
End EmptyVec.
End EmptyVec.
Definition EmptyVec `{ℋ : State.Trait} := M.Val EmptyVec.t.

Module  Impl_core_fmt_Debug_for_other_uses_of_question_mark_EmptyVec.
Section Impl_core_fmt_Debug_for_other_uses_of_question_mark_EmptyVec.
  Context `{ℋ : State.Trait}.
  
  Definition Self : Set := other_uses_of_question_mark.EmptyVec.
  
  Parameter fmt :
      (ref Self) -> (mut_ref core.fmt.Formatter) -> M ltac:(core.fmt.Result).
  
  Global Instance AssociatedFunction_fmt : Notation.DoubleColon Self "fmt" := {
    Notation.double_colon := fmt;
  }.
  
  Global Instance ℐ : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt := fmt;
  }.
End Impl_core_fmt_Debug_for_other_uses_of_question_mark_EmptyVec.
End Impl_core_fmt_Debug_for_other_uses_of_question_mark_EmptyVec.

Module  Impl_core_fmt_Display_for_other_uses_of_question_mark_EmptyVec.
Section Impl_core_fmt_Display_for_other_uses_of_question_mark_EmptyVec.
  Context `{ℋ : State.Trait}.
  
  Definition Self : Set := other_uses_of_question_mark.EmptyVec.
  
  Parameter fmt :
      (ref Self) -> (mut_ref core.fmt.Formatter) -> M ltac:(core.fmt.Result).
  
  Global Instance AssociatedFunction_fmt : Notation.DoubleColon Self "fmt" := {
    Notation.double_colon := fmt;
  }.
  
  Global Instance ℐ : core.fmt.Display.Trait Self := {
    core.fmt.Display.fmt := fmt;
  }.
End Impl_core_fmt_Display_for_other_uses_of_question_mark_EmptyVec.
End Impl_core_fmt_Display_for_other_uses_of_question_mark_EmptyVec.

Module  Impl_core_error_Error_for_other_uses_of_question_mark_EmptyVec.
Section Impl_core_error_Error_for_other_uses_of_question_mark_EmptyVec.
  Context `{ℋ : State.Trait}.
  
  Definition Self : Set := other_uses_of_question_mark.EmptyVec.
  
  Global Instance ℐ : core.error.Error.Required.Trait Self := {
    core.error.Error.source := Datatypes.None;
    core.error.Error.type_id := Datatypes.None;
    core.error.Error.description := Datatypes.None;
    core.error.Error.cause := Datatypes.None;
    core.error.Error.provide := Datatypes.None;
  }.
End Impl_core_error_Error_for_other_uses_of_question_mark_EmptyVec.
End Impl_core_error_Error_for_other_uses_of_question_mark_EmptyVec.

Parameter double_first :
    forall `{ℋ : State.Trait},
    (alloc.vec.Vec (ref str) alloc.vec.Vec.Default.A) ->
      M ltac:(other_uses_of_question_mark.Result constr:(i32)).

Parameter print :
    forall `{ℋ : State.Trait},
    ltac:(other_uses_of_question_mark.Result constr:(i32)) -> M unit.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{ℋ : State.Trait}, M unit.
