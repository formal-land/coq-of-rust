(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module HasArea.
  Class Trait (Self : Set) : Set := {
    area `{H : State.Trait} : (ref Self) -> (M (H := H) f64);
  }.
  
  Global Instance Method_area `{H : State.Trait} `(Trait)
    : Notation.Dot "area" := {
    Notation.dot := area;
  }.
End HasArea.

Module Impl_generics_bounds_HasArea_for_generics_bounds_Rectangle.
  Definition Self := generics_bounds.Rectangle.
  
  Parameter area : forall `{H : State.Trait}, ref Self -> M (H := H) f64.
  
  Global Instance Method_area `{H : State.Trait} : Notation.Dot "area" := {
    Notation.dot := area;
  }.
  
  Global Instance I : generics_bounds.HasArea.Trait Self := {
    generics_bounds.HasArea.area `{H : State.Trait} := area;
  }.
End Impl_generics_bounds_HasArea_for_generics_bounds_Rectangle.

Module Rectangle.
  Unset Primitive Projections.
  Record t : Set := {
    length : f64;
    height : f64;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_length : Notation.Dot "length" := {
    Notation.dot '(Build_t x0 _) := x0;
  }.
  Global Instance Get_height : Notation.Dot "height" := {
    Notation.dot '(Build_t _ x1) := x1;
  }.
End Rectangle.
Definition Rectangle : Set := Rectangle.t.

Module Impl_core_fmt_Debug_for_generics_bounds_Rectangle.
  Definition Self := generics_bounds.Rectangle.
  
  Parameter debug_struct_field2_finish : core.fmt.Formatter -> string -> 
    string -> f64 -> 
    string -> f64 -> 
    M (H := H) core.fmt.Result.
  
  Global Instance Deb_debug_struct_field2_finish : Notation.DoubleColon
    core.fmt.Formatter "debug_struct_field2_finish" := {
    Notation.double_colon := debug_struct_field2_finish; }.
  
  Parameter fmt : forall `{H : State.Trait},
      ref Self ->
      mut_ref core.fmt.Formatter ->
      M (H := H) core.fmt.Result.
  
  Global Instance Method_fmt `{H : State.Trait} : Notation.Dot "fmt" := {
    Notation.dot := fmt;
  }.
  
  Global Instance I : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt `{H : State.Trait} := fmt;
  }.
End Impl_core_fmt_Debug_for_generics_bounds_Rectangle.

(* #[allow(dead_code)] - struct was ignored by the compiler *)
Module Triangle.
  Unset Primitive Projections.
  Record t : Set := {
    length : f64;
    height : f64;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_length : Notation.Dot "length" := {
    Notation.dot '(Build_t x0 _) := x0;
  }.
  Global Instance Get_height : Notation.Dot "height" := {
    Notation.dot '(Build_t _ x1) := x1;
  }.
End Triangle.
Definition Triangle : Set := Triangle.t.

Parameter print_debug : forall `{H : State.Trait},
    forall
    {T : Set},
    `{core.fmt.Debug.Trait T}
    ref T ->
    M (H := H) unit.

Parameter area : forall `{H : State.Trait},
    forall
    {T : Set},
    `{generics_bounds.HasArea.Trait T}
    ref T ->
    M (H := H) f64.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{H : State.Trait}, M (H := H) unit.
