(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module A.
  Inductive t : Set := Build.
End A.
Definition A := A.t.

Module S.
  Record t : Set := { _ : generics_functions.A;}.
  
  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0) := x0;
  }.
End S.
Definition S := S.t.

Module SGen.
  Record t : Set := { _ : T;}.
  
  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0) := x0;
  }.
End SGen.
Definition SGen := SGen.t.

Parameter reg_fn : generics_functions.S -> M unit.

Parameter gen_spec_t : generics_functions.SGen generics_functions.A -> M unit.

Parameter gen_spec_i32 : generics_functions.SGen i32 -> M unit.

Parameter generic : forall {T : Set}, generics_functions.SGen T -> M unit.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : unit -> M unit.
