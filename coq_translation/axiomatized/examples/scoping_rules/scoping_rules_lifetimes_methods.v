(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Owner.
  Unset Primitive Projections.
  Record t : Set := {
    _ : i32;
  }.
  Global Set Primitive Projections.

  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0) := x0;
  }.
End Owner.
Definition Owner := Owner.t.

Module Impl_scoping_rules_lifetimes_methods_Owner.
  Definition Self := scoping_rules_lifetimes_methods.Owner.
  
  Parameter add_one : forall `{H : State.Trait},
      mut_ref Self ->
      M (H := H) unit.
  
  Global Instance Method_add_one `{H : State.Trait} :
    Notation.Dot "add_one" := {
    Notation.dot := add_one;
  }.
  
  Parameter print : forall `{H : State.Trait}, ref Self -> M (H := H) unit.
  
  Global Instance Method_print `{H : State.Trait} : Notation.Dot "print" := {
    Notation.dot := print;
  }.
End Impl_scoping_rules_lifetimes_methods_Owner.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{H : State.Trait}, M (H := H) unit.
