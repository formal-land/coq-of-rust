(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Droppable.
  Section Droppable.
    Context `{ℋ : State.Trait}.
    
    Unset Primitive Projections.
    Record t : Set := {
      name : ref str;
    }.
    Global Set Primitive Projections.
    
    #[refine] Global Instance Get_name : Notation.Dot "name" := {
      Notation.dot x := let* x := M.read x in Pure x.(name) : M _;
    }.
    Admitted.
    #[refine] Global Instance Get_AF_name : Notation.DoubleColon t "name" := {
      Notation.double_colon x := let* x := M.read x in Pure x.(name) : M _;
    }.
    Admitted.
  End Droppable.
End Droppable.
Definition Droppable `{ℋ : State.Trait} : Set := M.val Droppable.t.

Module Impl_core_ops_drop_Drop_for_drop_Droppable.
  Section Impl_core_ops_drop_Drop_for_drop_Droppable.
    Context `{ℋ : State.Trait}.
    
    Definition Self : Set := drop.Droppable.
    
    Parameter drop : (mut_ref Self) -> M unit.
    
    Global Instance AssociatedFunction_drop :
      Notation.DoubleColon Self "drop" := {
      Notation.double_colon := drop;
    }.
    
    #[refine] Global Instance ℐ : core.ops.drop.Drop.Trait Self := {
      core.ops.drop.Drop.drop := drop;
    }.
    Admitted.
  End Impl_core_ops_drop_Drop_for_drop_Droppable.
  Global Hint Resolve ℐ : core.
End Impl_core_ops_drop_Drop_for_drop_Droppable.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{ℋ : State.Trait}, M unit.
