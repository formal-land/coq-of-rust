(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Droppable.
Section Droppable.
  Context `{ℋ : State.Trait}.
  
  Record t : Set := {
    name : ref str;
  }.
  
  Global Instance Get_name : Notation.Dot "name" := {
    Notation.dot x := let* x := M.read x in M.pure x.(name) : M _;
  }.
  Global Instance Get_AF_name : Notation.DoubleColon t "name" := {
    Notation.double_colon x := let* x := M.read x in M.pure x.(name) : M _;
  }.
End Droppable.
End Droppable.
Definition Droppable `{ℋ : State.Trait} : Set := M.Val Droppable.t.

Module  Impl_core_ops_drop_Drop_for_drop_Droppable.
Section Impl_core_ops_drop_Drop_for_drop_Droppable.
  Context `{ℋ : State.Trait}.
  
  Definition Self : Set := drop.Droppable.
  
  Parameter drop : (mut_ref Self) -> M unit.
  
  Global Instance AssociatedFunction_drop :
    Notation.DoubleColon Self "drop" := {
    Notation.double_colon := drop;
  }.
  
  Global Instance ℐ : core.ops.drop.Drop.Trait Self := {
    core.ops.drop.Drop.drop := drop;
  }.
End Impl_core_ops_drop_Drop_for_drop_Droppable.
End Impl_core_ops_drop_Drop_for_drop_Droppable.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{ℋ : State.Trait}, M unit.
