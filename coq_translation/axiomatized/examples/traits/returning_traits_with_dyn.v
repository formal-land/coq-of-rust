(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Sheep.
Section Sheep.
  Context `{ℋ : State.Trait}.
  
  Record t : Set := { }.
End Sheep.
End Sheep.
Definition Sheep `{ℋ : State.Trait} : Set := M.Val Sheep.t.

Module  Cow.
Section Cow.
  Context `{ℋ : State.Trait}.
  
  Record t : Set := { }.
End Cow.
End Cow.
Definition Cow `{ℋ : State.Trait} : Set := M.Val Cow.t.

Module  Animal.
Section Animal.
  Context `{ℋ : State.Trait}.
  
  Class Trait (Self : Set) : Type := {
    noise : (ref Self) -> M (ref str);
  }.
  
End Animal.
End Animal.

Module  Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.
Section Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.
  Context `{ℋ : State.Trait}.
  
  Definition Self : Set := returning_traits_with_dyn.Sheep.
  
  Parameter noise : (ref Self) -> M (ref str).
  
  Global Instance AssociatedFunction_noise :
    Notation.DoubleColon Self "noise" := {
    Notation.double_colon := noise;
  }.
  
  Global Instance ℐ : returning_traits_with_dyn.Animal.Trait Self := {
    returning_traits_with_dyn.Animal.noise := noise;
  }.
End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.
End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.

Module  Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.
Section Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.
  Context `{ℋ : State.Trait}.
  
  Definition Self : Set := returning_traits_with_dyn.Cow.
  
  Parameter noise : (ref Self) -> M (ref str).
  
  Global Instance AssociatedFunction_noise :
    Notation.DoubleColon Self "noise" := {
    Notation.double_colon := noise;
  }.
  
  Global Instance ℐ : returning_traits_with_dyn.Animal.Trait Self := {
    returning_traits_with_dyn.Animal.noise := noise;
  }.
End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.
End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.

Parameter random_animal :
    forall `{ℋ : State.Trait},
    f64 -> M (alloc.boxed.Box _ (* dyn *) alloc.boxed.Box.Default.A).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{ℋ : State.Trait}, M unit.
