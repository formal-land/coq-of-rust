(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Foo.
Section Foo.
  Context `{ℋ : State.Trait}.
  
  Record t : Set := {
    test : bool;
  }.
  
  Global Instance Get_test : Notation.Dot "test" := {
    Notation.dot x := let* x := M.read x in M.pure x.(test) : M _;
  }.
  Global Instance Get_AF_test : Notation.DoubleColon t "test" := {
    Notation.double_colon x := let* x := M.read x in M.pure x.(test) : M _;
  }.
End Foo.
End Foo.
Definition Foo `{ℋ : State.Trait} : Set := M.Val Foo.t.

Module  Bar.
Section Bar.
  Context `{ℋ : State.Trait}.
  
  Record t : Set := {
    test : alloc.string.String;
  }.
  
  Global Instance Get_test : Notation.Dot "test" := {
    Notation.dot x := let* x := M.read x in M.pure x.(test) : M _;
  }.
  Global Instance Get_AF_test : Notation.DoubleColon t "test" := {
    Notation.double_colon x := let* x := M.read x in M.pure x.(test) : M _;
  }.
End Bar.
End Bar.
Definition Bar `{ℋ : State.Trait} : Set := M.Val Bar.t.

Module  BarTrait.
Section BarTrait.
  Context `{ℋ : State.Trait}.
  
  Class Trait (Self : Set) : Type := {
    show : Self -> M alloc.string.String;
  }.
  
End BarTrait.
End BarTrait.

Module  Impl_const_underscore_expression_BarTrait_for_const_underscore_expression_Bar.
Section Impl_const_underscore_expression_BarTrait_for_const_underscore_expression_Bar.
  Context `{ℋ : State.Trait}.
  
  Definition Self : Set := const_underscore_expression.Bar.
  
  Definition show (self : Self) : M alloc.string.String :=
    M.function_body self.["test"].
  
  Global Instance AssociatedFunction_show :
    Notation.DoubleColon Self "show" := {
    Notation.double_colon := show;
  }.
  
  Global Instance ℐ : const_underscore_expression.BarTrait.Trait Self := {
    const_underscore_expression.BarTrait.show := show;
  }.
End Impl_const_underscore_expression_BarTrait_for_const_underscore_expression_Bar.
End Impl_const_underscore_expression_BarTrait_for_const_underscore_expression_Bar.
