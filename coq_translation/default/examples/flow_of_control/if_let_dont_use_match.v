(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  M.function_body
    (let* optional : ltac:(refine (core.option.Option i32)) :=
      let* α0 : ltac:(refine i32) := M.alloc 7 in
      M.alloc (core.option.Option.Some α0) in
    let* _ : ltac:(refine unit) :=
      let* α0 := M.read optional in
      match α0 with
      | core.option.Option.Some i =>
        let* _ : ltac:(refine unit) :=
          let* _ : ltac:(refine unit) :=
            let* α0 : ltac:(refine (array (ref str))) :=
              M.alloc
                [ mk_str "This is a really long string and `"; mk_str "`
" ] in
            let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
            let* α2 : ltac:(refine (ref (slice (ref str)))) :=
              pointer_coercion "Unsize" α1 in
            let* α3 : ltac:(refine (ref i32)) := borrow i in
            let* α4 : ltac:(refine core.fmt.rt.Argument) :=
              core.fmt.rt.Argument::["new_debug"] α3 in
            let* α5 : ltac:(refine (array core.fmt.rt.Argument)) :=
              M.alloc [ α4 ] in
            let* α6 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
              borrow α5 in
            let* α7 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
              pointer_coercion "Unsize" α6 in
            let* α8 : ltac:(refine core.fmt.Arguments) :=
              core.fmt.Arguments::["new_v1"] α2 α7 in
            std.io.stdio._print α8 in
          M.alloc tt in
        M.alloc tt
      | _ => M.alloc tt
      end in
    M.alloc tt).
