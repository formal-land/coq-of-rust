(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{H' : State.Trait} : M (H := H') unit :=
  let n := 1 in
  loop
    (let* α0 := n.["lt"] 101 in
    if (α0 : bool) then
      let* _ :=
        let* α0 := n.["rem"] 15 in
        let* α1 := α0.["eq"] 0 in
        if (α1 : bool) then
          let* _ :=
            let* _ :=
              let* α0 :=
                format_arguments::["new_const"] (addr_of [ "fizzbuzz
" ]) in
              std.io.stdio._print α0 in
            Pure tt in
          Pure tt
        else
          let* α0 := n.["rem"] 3 in
          let* α1 := α0.["eq"] 0 in
          if (α1 : bool) then
            let* _ :=
              let* _ :=
                let* α0 :=
                  format_arguments::["new_const"] (addr_of [ "fizz
" ]) in
                std.io.stdio._print α0 in
              Pure tt in
            Pure tt
          else
            let* α0 := n.["rem"] 5 in
            let* α1 := α0.["eq"] 0 in
            if (α1 : bool) then
              let* _ :=
                let* _ :=
                  let* α0 :=
                    format_arguments::["new_const"] (addr_of [ "buzz
" ]) in
                  std.io.stdio._print α0 in
                Pure tt in
              Pure tt
            else
              let* _ :=
                let* _ :=
                  let* α0 := format_argument::["new_display"] (addr_of n) in
                  let* α1 :=
                    format_arguments::["new_v1"]
                      (addr_of [ ""; "
" ])
                      (addr_of [ α0 ]) in
                  std.io.stdio._print α1 in
                Pure tt in
              Pure tt in
      let* _ := n.["add_assign"] 1 in
      Pure tt
    else
      let* _ := Break in
      Pure tt).
