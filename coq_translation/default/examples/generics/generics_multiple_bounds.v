(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition compare_prints
    `{H' : State.Trait}
    {T : Set}
    `{core.fmt.Debug.Trait T}
    `{core.fmt.Display.Trait T}
    (t : ref T)
    : M (H := H') unit :=
  let* _ :=
    let* _ :=
      let* α0 := format_argument::["new_debug"] (addr_of t) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "Debug: `"; "`
" ])
          (addr_of [ α0 ]) in
      std.io.stdio._print α1 in
    Pure tt in
  let* _ :=
    let* _ :=
      let* α0 := format_argument::["new_display"] (addr_of t) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "Display: `"; "`
" ])
          (addr_of [ α0 ]) in
      std.io.stdio._print α1 in
    Pure tt in
  Pure tt.

Definition compare_types
    `{H' : State.Trait}
    {T U : Set}
    `{core.fmt.Debug.Trait T}
    `{core.fmt.Debug.Trait U}
    (t : ref T)
    (u : ref U)
    : M (H := H') unit :=
  let* _ :=
    let* _ :=
      let* α0 := format_argument::["new_debug"] (addr_of t) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "t: `"; "`
" ])
          (addr_of [ α0 ]) in
      std.io.stdio._print α1 in
    Pure tt in
  let* _ :=
    let* _ :=
      let* α0 := format_argument::["new_debug"] (addr_of u) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "u: `"; "`
" ])
          (addr_of [ α0 ]) in
      std.io.stdio._print α1 in
    Pure tt in
  Pure tt.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{H' : State.Trait} : M (H := H') unit :=
  let string := "words" in
  let array := [ 1; 2; 3 ] in
  let* vec :=
    let* α0 := alloc.boxed.Box::["new"] [ 1; 2; 3 ] in
    (Slice _)::["into_vec"] α0 in
  let* _ := generics_multiple_bounds.compare_prints (addr_of string) in
  let* _ :=
    generics_multiple_bounds.compare_types (addr_of array) (addr_of vec) in
  Pure tt.
