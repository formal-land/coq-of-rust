(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition gen_range `{ℋ : State.Trait} : M u32 :=
  let* α0 := core.panicking.panic (mk_str "not yet implemented") in
  never_to_any α0.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  let* _ :=
    let* _ :=
      let* α0 := borrow [ mk_str "Guess the number!
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := core.fmt.Arguments::["new_const"] α3 in
      std.io.stdio._print α4 in
    M.alloc tt in
  let* secret_number := guessing_game.gen_range in
  loop
    (let* _ :=
      let* _ :=
        let* α0 :=
          borrow [ mk_str "Please input your guess.
" ] (list (ref str)) in
        let* α1 := deref α0 (list (ref str)) in
        let* α2 := borrow α1 (list (ref str)) in
        let* α3 := pointer_coercion "Unsize" α2 in
        let* α4 := core.fmt.Arguments::["new_const"] α3 in
        std.io.stdio._print α4 in
      M.alloc tt in
    let* guess := alloc.string.String::["new"] in
    let* _ :=
      let* α0 := std.io.stdio.stdin in
      let* α1 := borrow α0 std.io.stdio.Stdin in
      let* α2 := borrow_mut guess alloc.string.String in
      let* α3 := deref α2 alloc.string.String in
      let* α4 := borrow_mut α3 alloc.string.String in
      let* α5 := std.io.stdio.Stdin::["read_line"] α1 α4 in
      let* α6 := deref (mk_str "Failed to read line") str in
      let* α7 := borrow α6 str in
      (core.result.Result T E)::["expect"] α5 α7 in
    let* guess :=
      let* α0 := borrow guess alloc.string.String in
      let* α1 :=
        (core.ops.deref.Deref.deref (Self := alloc.string.String)) α0 in
      let* α2 := deref α1 str in
      let* α3 := borrow α2 str in
      let* α4 := str::["trim"] α3 in
      let* α5 := deref α4 str in
      let* α6 := borrow α5 str in
      let* α7 := str::["parse"] α6 in
      match α7 with
      | core.result.Result num => Pure num
      | core.result.Result _ =>
        let* α0 := Continue in
        never_to_any α0
      end in
    let* _ :=
      let* _ :=
        let* α0 :=
          borrow [ mk_str "You guessed: "; mk_str "
" ] (list (ref str)) in
        let* α1 := deref α0 (list (ref str)) in
        let* α2 := borrow α1 (list (ref str)) in
        let* α3 := pointer_coercion "Unsize" α2 in
        let* α4 := borrow guess u32 in
        let* α5 := deref α4 u32 in
        let* α6 := borrow α5 u32 in
        let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
        let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
        let* α9 := deref α8 (list core.fmt.rt.Argument) in
        let* α10 := borrow α9 (list core.fmt.rt.Argument) in
        let* α11 := pointer_coercion "Unsize" α10 in
        let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
        std.io.stdio._print α12 in
      M.alloc tt in
    let* α0 := borrow guess u32 in
    let* α1 := borrow secret_number u32 in
    let* α2 := deref α1 u32 in
    let* α3 := borrow α2 u32 in
    let* α4 := (core.cmp.Ord.cmp (Self := u32)) α0 α3 in
    match α4 with
    | core.cmp.Ordering  =>
      let* _ :=
        let* α0 := borrow [ mk_str "Too small!
" ] (list (ref str)) in
        let* α1 := deref α0 (list (ref str)) in
        let* α2 := borrow α1 (list (ref str)) in
        let* α3 := pointer_coercion "Unsize" α2 in
        let* α4 := core.fmt.Arguments::["new_const"] α3 in
        std.io.stdio._print α4 in
      M.alloc tt
    | core.cmp.Ordering  =>
      let* _ :=
        let* α0 := borrow [ mk_str "Too big!
" ] (list (ref str)) in
        let* α1 := deref α0 (list (ref str)) in
        let* α2 := borrow α1 (list (ref str)) in
        let* α3 := pointer_coercion "Unsize" α2 in
        let* α4 := core.fmt.Arguments::["new_const"] α3 in
        std.io.stdio._print α4 in
      M.alloc tt
    | core.cmp.Ordering  =>
      let* _ :=
        let* _ :=
          let* α0 := borrow [ mk_str "You win!
" ] (list (ref str)) in
          let* α1 := deref α0 (list (ref str)) in
          let* α2 := borrow α1 (list (ref str)) in
          let* α3 := pointer_coercion "Unsize" α2 in
          let* α4 := core.fmt.Arguments::["new_const"] α3 in
          std.io.stdio._print α4 in
        M.alloc tt in
      let* _ := Break in
      let* α0 := M.alloc tt in
      never_to_any α0
    end).
