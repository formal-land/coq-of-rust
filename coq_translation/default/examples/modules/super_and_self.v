(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Function defined in outside *)
Definition function `{ℋ : State.Trait} : M unit :=
  let* _ :=
    let* _ :=
      let* α0 := borrow [ mk_str "called `function()`
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := core.fmt.Arguments::["new_const"] α3 in
      std.io.stdio._print α4 in
    M.alloc tt in
  M.alloc tt.

Module cool.
(* Function defined under cool *)
  Definition function `{H' : State.Trait} : M (H := H') unit :=
    let* _ :=
      let* _ :=
        let* α0 :=
          borrow [ mk_str "called `cool::function()`
" ] (list (ref str)) in
        let* α1 := deref α0 (list (ref str)) in
        let* α2 := borrow α1 (list (ref str)) in
        let* α3 := pointer_coercion "Unsize" α2 in
        let* α4 := core.fmt.Arguments::["new_const"] α3 in
        std.io.stdio._print α4 in
      M.alloc tt in
    M.alloc tt.
End cool.

(* ????????????????????????????? *)
Definition function `{H' : State.Trait} : M (H := H') unit :=
  let* _ :=
    let* _ :=
      let* α0 :=
        borrow [ mk_str "called `cool::function()`
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := core.fmt.Arguments::["new_const"] α3 in
      std.io.stdio._print α4 in
    M.alloc tt in
  M.alloc tt.

Module my.
  Definition function `{ℋ : State.Trait} : M unit :=
    let* _ :=
      let* _ :=
        let* α0 :=
          borrow [ mk_str "called `my::function()`
" ] (list (ref str)) in
        let* α1 := deref α0 (list (ref str)) in
        let* α2 := borrow α1 (list (ref str)) in
        let* α3 := pointer_coercion "Unsize" α2 in
        let* α4 := core.fmt.Arguments::["new_const"] α3 in
        std.io.stdio._print α4 in
      M.alloc tt in
    M.alloc tt.
  
  Module cool.
    Definition function `{ℋ : State.Trait} : M unit :=
      let* _ :=
        let* _ :=
          let* α0 :=
            borrow
              [ mk_str "called `my::cool::function()`
" ]
              (list (ref str)) in
          let* α1 := deref α0 (list (ref str)) in
          let* α2 := borrow α1 (list (ref str)) in
          let* α3 := pointer_coercion "Unsize" α2 in
          let* α4 := core.fmt.Arguments::["new_const"] α3 in
          std.io.stdio._print α4 in
        M.alloc tt in
      M.alloc tt.
  End cool.
  
  Definition indirect_call `{ℋ : State.Trait} : M unit :=
    let* _ :=
      let* _ :=
        let* α0 :=
          borrow
            [ mk_str "called `my::indirect_call()`, that
> " ]
            (list (ref str)) in
        let* α1 := deref α0 (list (ref str)) in
        let* α2 := borrow α1 (list (ref str)) in
        let* α3 := pointer_coercion "Unsize" α2 in
        let* α4 := core.fmt.Arguments::["new_const"] α3 in
        std.io.stdio._print α4 in
      M.alloc tt in
    let* _ := super_and_self.my.function in
    let* _ := super_and_self.my.function in
    let* _ := super_and_self.my.cool.function in
    let* _ := super_and_self.function in
    let* _ := super_and_self.cool.function in
    M.alloc tt.
End my.

Definition function `{ℋ : State.Trait} : M unit :=
  let* _ :=
    let* _ :=
      let* α0 :=
        borrow [ mk_str "called `my::function()`
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := core.fmt.Arguments::["new_const"] α3 in
      std.io.stdio._print α4 in
    M.alloc tt in
  M.alloc tt.

Module Wrap_cool_1.
  Module cool.
    Definition function `{ℋ : State.Trait} : M unit :=
      let* _ :=
        let* _ :=
          let* α0 :=
            borrow
              [ mk_str "called `my::cool::function()`
" ]
              (list (ref str)) in
          let* α1 := deref α0 (list (ref str)) in
          let* α2 := borrow α1 (list (ref str)) in
          let* α3 := pointer_coercion "Unsize" α2 in
          let* α4 := core.fmt.Arguments::["new_const"] α3 in
          std.io.stdio._print α4 in
        M.alloc tt in
      M.alloc tt.
  End cool.
End Wrap_cool_1.
Import Wrap_cool_1.

Definition function `{ℋ : State.Trait} : M unit :=
  let* _ :=
    let* _ :=
      let* α0 :=
        borrow [ mk_str "called `my::cool::function()`
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := core.fmt.Arguments::["new_const"] α3 in
      std.io.stdio._print α4 in
    M.alloc tt in
  M.alloc tt.

Definition indirect_call `{ℋ : State.Trait} : M unit :=
  let* _ :=
    let* _ :=
      let* α0 :=
        borrow
          [ mk_str "called `my::indirect_call()`, that
> " ]
          (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := core.fmt.Arguments::["new_const"] α3 in
      std.io.stdio._print α4 in
    M.alloc tt in
  let* _ := super_and_self.my.function in
  let* _ := super_and_self.my.function in
  let* _ := super_and_self.my.cool.function in
  let* _ := super_and_self.function in
  let* _ := super_and_self.cool.function in
  M.alloc tt.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  let* _ := super_and_self.my.indirect_call in
  M.alloc tt.
