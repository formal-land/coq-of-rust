(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Point.
Section Point.
  Context `{ℋ : State.Trait}.
  
  Record t : Set := {
    x : i32;
    y : i32;
    z : i32;
  }.
  
  Global Instance Get_x : Notation.Dot "x" := {
    Notation.dot x' := let* x' := M.read x' in M.pure x'.(x) : M _;
  }.
  Global Instance Get_AF_x : Notation.DoubleColon t "x" := {
    Notation.double_colon x' := let* x' := M.read x' in M.pure x'.(x) : M _;
  }.
  Global Instance Get_y : Notation.Dot "y" := {
    Notation.dot x := let* x := M.read x in M.pure x.(y) : M _;
  }.
  Global Instance Get_AF_y : Notation.DoubleColon t "y" := {
    Notation.double_colon x := let* x := M.read x in M.pure x.(y) : M _;
  }.
  Global Instance Get_z : Notation.Dot "z" := {
    Notation.dot x := let* x := M.read x in M.pure x.(z) : M _;
  }.
  Global Instance Get_AF_z : Notation.DoubleColon t "z" := {
    Notation.double_colon x := let* x := M.read x in M.pure x.(z) : M _;
  }.
End Point.
End Point.
Definition Point `{ℋ : State.Trait} : Set := M.Val Point.t.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  M.function_body
    (let* point : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
      let* α0 : ltac:(refine i32) := M.alloc 0 in
      let* α1 : ltac:(refine i32) := M.alloc 0 in
      let* α2 : ltac:(refine i32) := M.alloc 0 in
      M.alloc
        {|
          scoping_rules_borrowing_aliasing.Point.x := α0;
          scoping_rules_borrowing_aliasing.Point.y := α1;
          scoping_rules_borrowing_aliasing.Point.z := α2;
        |} in
    let* borrowed_point :
        ltac:(refine (ref scoping_rules_borrowing_aliasing.Point)) :=
      borrow point in
    let* another_borrow :
        ltac:(refine (ref scoping_rules_borrowing_aliasing.Point)) :=
      borrow point in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc
            [
              mk_str "Point has coordinates: (";
              mk_str ", ";
              mk_str ", ";
              mk_str ")
"
            ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α1 in
        let* α3 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref borrowed_point in
        let* α4 : ltac:(refine i32) := α3.["x"] in
        let* α5 : ltac:(refine (ref i32)) := borrow α4 in
        let* α6 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α5 in
        let* α7 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref another_borrow in
        let* α8 : ltac:(refine i32) := α7.["y"] in
        let* α9 : ltac:(refine (ref i32)) := borrow α8 in
        let* α10 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α9 in
        let* α11 : ltac:(refine i32) := point.["z"] in
        let* α12 : ltac:(refine (ref i32)) := borrow α11 in
        let* α13 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α12 in
        let* α14 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α6; α10; α13 ] in
        let* α15 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α14 in
        let* α16 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α15 in
        let* α17 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α2 α16 in
        std.io.stdio._print α17 in
      M.alloc tt in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc
            [
              mk_str "Point has coordinates: (";
              mk_str ", ";
              mk_str ", ";
              mk_str ")
"
            ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α1 in
        let* α3 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref borrowed_point in
        let* α4 : ltac:(refine i32) := α3.["x"] in
        let* α5 : ltac:(refine (ref i32)) := borrow α4 in
        let* α6 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α5 in
        let* α7 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref another_borrow in
        let* α8 : ltac:(refine i32) := α7.["y"] in
        let* α9 : ltac:(refine (ref i32)) := borrow α8 in
        let* α10 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α9 in
        let* α11 : ltac:(refine i32) := point.["z"] in
        let* α12 : ltac:(refine (ref i32)) := borrow α11 in
        let* α13 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α12 in
        let* α14 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α6; α10; α13 ] in
        let* α15 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α14 in
        let* α16 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α15 in
        let* α17 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α2 α16 in
        std.io.stdio._print α17 in
      M.alloc tt in
    let* mutable_borrow :
        ltac:(refine (mut_ref scoping_rules_borrowing_aliasing.Point)) :=
      borrow_mut point in
    let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
        deref mutable_borrow in
      let* α1 : ltac:(refine i32) := α0.["x"] in
      let* α2 : ltac:(refine i32) := M.alloc 5 in
      assign α1 α2 in
    let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
        deref mutable_borrow in
      let* α1 : ltac:(refine i32) := α0.["y"] in
      let* α2 : ltac:(refine i32) := M.alloc 2 in
      assign α1 α2 in
    let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
        deref mutable_borrow in
      let* α1 : ltac:(refine i32) := α0.["z"] in
      let* α2 : ltac:(refine i32) := M.alloc 1 in
      assign α1 α2 in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc
            [
              mk_str "Point has coordinates: (";
              mk_str ", ";
              mk_str ", ";
              mk_str ")
"
            ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α1 in
        let* α3 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref mutable_borrow in
        let* α4 : ltac:(refine i32) := α3.["x"] in
        let* α5 : ltac:(refine (ref i32)) := borrow α4 in
        let* α6 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α5 in
        let* α7 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref mutable_borrow in
        let* α8 : ltac:(refine i32) := α7.["y"] in
        let* α9 : ltac:(refine (ref i32)) := borrow α8 in
        let* α10 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α9 in
        let* α11 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref mutable_borrow in
        let* α12 : ltac:(refine i32) := α11.["z"] in
        let* α13 : ltac:(refine (ref i32)) := borrow α12 in
        let* α14 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α13 in
        let* α15 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α6; α10; α14 ] in
        let* α16 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α15 in
        let* α17 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α16 in
        let* α18 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α2 α17 in
        std.io.stdio._print α18 in
      M.alloc tt in
    let* new_borrowed_point :
        ltac:(refine (ref scoping_rules_borrowing_aliasing.Point)) :=
      borrow point in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc
            [
              mk_str "Point now has coordinates: (";
              mk_str ", ";
              mk_str ", ";
              mk_str ")
"
            ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α1 in
        let* α3 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref new_borrowed_point in
        let* α4 : ltac:(refine i32) := α3.["x"] in
        let* α5 : ltac:(refine (ref i32)) := borrow α4 in
        let* α6 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α5 in
        let* α7 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref new_borrowed_point in
        let* α8 : ltac:(refine i32) := α7.["y"] in
        let* α9 : ltac:(refine (ref i32)) := borrow α8 in
        let* α10 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α9 in
        let* α11 : ltac:(refine scoping_rules_borrowing_aliasing.Point) :=
          deref new_borrowed_point in
        let* α12 : ltac:(refine i32) := α11.["z"] in
        let* α13 : ltac:(refine (ref i32)) := borrow α12 in
        let* α14 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α13 in
        let* α15 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α6; α10; α14 ] in
        let* α16 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α15 in
        let* α17 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α16 in
        let* α18 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α2 α17 in
        std.io.stdio._print α18 in
      M.alloc tt in
    M.alloc tt).
