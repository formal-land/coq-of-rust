(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition print_one `{ℋ : State.Trait} (x : ref i32) : M unit :=
  let* _ :=
    let* _ :=
      let* α0 :=
        borrow [ mk_str "`print_one`: x is "; mk_str "
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := borrow x (ref i32) in
      let* α5 := deref α4 (ref i32) in
      let* α6 := borrow α5 (ref i32) in
      let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
      let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
      let* α9 := deref α8 (list core.fmt.rt.Argument) in
      let* α10 := borrow α9 (list core.fmt.rt.Argument) in
      let* α11 := pointer_coercion "Unsize" α10 in
      let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
      std.io.stdio._print α12 in
    M.alloc tt in
  M.alloc tt.

Definition add_one `{ℋ : State.Trait} (x : mut_ref i32) : M unit :=
  let* _ :=
    let* α0 := deref x i32 in
    let* α1 := M.alloc 1 in
    assign_op add α0 α1 in
  M.alloc tt.

Definition print_multi
    `{ℋ : State.Trait}
    (x : ref i32)
    (y : ref i32)
    : M unit :=
  let* _ :=
    let* _ :=
      let* α0 :=
        borrow
          [ mk_str "`print_multi`: x is "; mk_str ", y is "; mk_str "
" ]
          (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := borrow x (ref i32) in
      let* α5 := deref α4 (ref i32) in
      let* α6 := borrow α5 (ref i32) in
      let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
      let* α8 := borrow y (ref i32) in
      let* α9 := deref α8 (ref i32) in
      let* α10 := borrow α9 (ref i32) in
      let* α11 := core.fmt.rt.Argument::["new_display"] α10 in
      let* α12 := borrow [ α7; α11 ] (list core.fmt.rt.Argument) in
      let* α13 := deref α12 (list core.fmt.rt.Argument) in
      let* α14 := borrow α13 (list core.fmt.rt.Argument) in
      let* α15 := pointer_coercion "Unsize" α14 in
      let* α16 := core.fmt.Arguments::["new_v1"] α3 α15 in
      std.io.stdio._print α16 in
    M.alloc tt in
  M.alloc tt.

Definition pass_x
    `{ℋ : State.Trait}
    (x : ref i32)
    (arg : ref i32)
    : M (ref i32) :=
  Pure x.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  let* x := M.alloc 7 in
  let* y := M.alloc 9 in
  let* _ :=
    let* α0 := borrow x i32 in
    let* α1 := deref α0 i32 in
    let* α2 := borrow α1 i32 in
    scoping_rules_lifetimes_functions.print_one α2 in
  let* _ :=
    let* α0 := borrow x i32 in
    let* α1 := deref α0 i32 in
    let* α2 := borrow α1 i32 in
    let* α3 := borrow y i32 in
    let* α4 := deref α3 i32 in
    let* α5 := borrow α4 i32 in
    scoping_rules_lifetimes_functions.print_multi α2 α5 in
  let* z :=
    let* α0 := borrow x i32 in
    let* α1 := deref α0 i32 in
    let* α2 := borrow α1 i32 in
    let* α3 := borrow y i32 in
    let* α4 := deref α3 i32 in
    let* α5 := borrow α4 i32 in
    scoping_rules_lifetimes_functions.pass_x α2 α5 in
  let* _ :=
    let* α0 := deref z i32 in
    let* α1 := borrow α0 i32 in
    scoping_rules_lifetimes_functions.print_one α1 in
  let* t := M.alloc 3 in
  let* _ :=
    let* α0 := borrow_mut t i32 in
    let* α1 := deref α0 i32 in
    let* α2 := borrow_mut α1 i32 in
    scoping_rules_lifetimes_functions.add_one α2 in
  let* _ :=
    let* α0 := borrow t i32 in
    let* α1 := deref α0 i32 in
    let* α2 := borrow α1 i32 in
    scoping_rules_lifetimes_functions.print_one α2 in
  M.alloc tt.
