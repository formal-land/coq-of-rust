(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{H : State.Trait} : M (H := H) unit :=
  let* a :=
    let* α0 := alloc.boxed.Box::["new"] [ 1; 2; 3 ] in
    let* α1 := (Slice _)::["into_vec"] α0 in
    let* α2 := α1.["into_iter"] in
    α2.["collect"] in
  let* b :=
    let* α0 := alloc.boxed.Box::["new"] [ 2; 3; 4 ] in
    let* α1 := (Slice _)::["into_vec"] α0 in
    let* α2 := α1.["into_iter"] in
    α2.["collect"] in
  let* _ :=
    let* α0 := a.["insert"] 4 in
    let* α1 := α0.["not"] in
    if (α1 : bool) then
      core.panicking.panic "assertion failed: a.insert(4)"
    else
      Pure tt in
  let* _ :=
    let* α0 := a.["contains"] (addr_of 4) in
    let* α1 := α0.["not"] in
    if (α1 : bool) then
      core.panicking.panic "assertion failed: a.contains(&4)"
    else
      Pure tt in
  let* _ := b.["insert"] 5 in
  let* _ :=
    let* _ :=
      let* α0 := format_argument::["new_debug"] (addr_of a) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "A: "; "
" ])
          (addr_of [ α0 ]) in
      std.io.stdio._print α1 in
    Pure tt in
  let* _ :=
    let* _ :=
      let* α0 := format_argument::["new_debug"] (addr_of b) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "B: "; "
" ])
          (addr_of [ α0 ]) in
      std.io.stdio._print α1 in
    Pure tt in
  let* _ :=
    let* _ :=
      let* α0 := a.["union"] (addr_of b) in
      let* α1 := α0.["collect"] : M (alloc.vec.Vec (ref i32)) in
      let* α2 := format_argument::["new_debug"] (addr_of α1) in
      let* α3 :=
        format_arguments::["new_v1"]
          (addr_of [ "Union: "; "
" ])
          (addr_of [ α2 ]) in
      std.io.stdio._print α3 in
    Pure tt in
  let* _ :=
    let* _ :=
      let* α0 := a.["difference"] (addr_of b) in
      let* α1 := α0.["collect"] : M (alloc.vec.Vec (ref i32)) in
      let* α2 := format_argument::["new_debug"] (addr_of α1) in
      let* α3 :=
        format_arguments::["new_v1"]
          (addr_of [ "Difference: "; "
" ])
          (addr_of [ α2 ]) in
      std.io.stdio._print α3 in
    Pure tt in
  let* _ :=
    let* _ :=
      let* α0 := a.["intersection"] (addr_of b) in
      let* α1 := α0.["collect"] : M (alloc.vec.Vec (ref i32)) in
      let* α2 := format_argument::["new_debug"] (addr_of α1) in
      let* α3 :=
        format_arguments::["new_v1"]
          (addr_of [ "Intersection: "; "
" ])
          (addr_of [ α2 ]) in
      std.io.stdio._print α3 in
    Pure tt in
  let* _ :=
    let* _ :=
      let* α0 := a.["symmetric_difference"] (addr_of b) in
      let* α1 := α0.["collect"] : M (alloc.vec.Vec (ref i32)) in
      let* α2 := format_argument::["new_debug"] (addr_of α1) in
      let* α3 :=
        format_arguments::["new_v1"]
          (addr_of [ "Symmetric Difference: "; "
" ])
          (addr_of [ α2 ]) in
      std.io.stdio._print α3 in
    Pure tt in
  Pure tt.
