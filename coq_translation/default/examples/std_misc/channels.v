(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition NTHREADS `{ℋ : State.Trait} : i32 := M.run (M.alloc 3).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  let* '(tx, rx) := std.sync.mpsc.channel in
  let* children := (alloc.vec.Vec T alloc.alloc.Global)::["new"] in
  let* _ :=
    let* α0 := M.alloc 0 in
    let* α1 := deref channels.NTHREADS i32 in
    let* α2 :=
      M.alloc
        {| core.ops.range.Range.start := α0; core.ops.range.Range.end := α1;
        |} in
    let* α3 :=
      (core.iter.traits.collect.IntoIterator.into_iter
          (Self := (core.ops.range.Range i32)))
        α2 in
    let* α4 :=
      match α3 with
      | iter =>
        loop
          (let* _ :=
            let* α0 := borrow_mut iter (core.ops.range.Range i32) in
            let* α1 := deref α0 (core.ops.range.Range i32) in
            let* α2 := borrow_mut α1 (core.ops.range.Range i32) in
            let* α3 :=
              (core.iter.traits.iterator.Iterator.next
                  (Self := (core.ops.range.Range i32)))
                α2 in
            match α3 with
            | core.option.Option  =>
              let* α0 := Break in
              never_to_any α0
            | core.option.Option id =>
              let* thread_tx :=
                let* α0 := borrow tx (std.sync.mpsc.Sender i32) in
                (core.clone.Clone.clone (Self := (std.sync.mpsc.Sender i32)))
                  α0 in
              let* child :=
                std.thread.spawn
                  (let* _ :=
                    let* α0 := borrow thread_tx (std.sync.mpsc.Sender i32) in
                    let* α1 := (std.sync.mpsc.Sender T)::["send"] α0 id in
                    (core.result.Result T E)::["unwrap"] α1 in
                  let* _ :=
                    let* _ :=
                      let* α0 :=
                        borrow
                          [ mk_str "thread "; mk_str " finished
" ]
                          (list (ref str)) in
                      let* α1 := deref α0 (list (ref str)) in
                      let* α2 := borrow α1 (list (ref str)) in
                      let* α3 := pointer_coercion "Unsize" α2 in
                      let* α4 := borrow id i32 in
                      let* α5 := deref α4 i32 in
                      let* α6 := borrow α5 i32 in
                      let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
                      let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
                      let* α9 := deref α8 (list core.fmt.rt.Argument) in
                      let* α10 := borrow α9 (list core.fmt.rt.Argument) in
                      let* α11 := pointer_coercion "Unsize" α10 in
                      let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
                      std.io.stdio._print α12 in
                    M.alloc tt in
                  M.alloc tt) in
              let* _ :=
                let* α0 :=
                  borrow_mut
                    children
                    (alloc.vec.Vec
                      (std.thread.JoinHandle unit)
                      alloc.alloc.Global) in
                (alloc.vec.Vec T A)::["push"] α0 child in
              M.alloc tt
            end in
          M.alloc tt)
      end in
    use α4 in
  let* ids :=
    let* α0 := deref channels.NTHREADS i32 in
    let* α1 := cast α0 in
    (alloc.vec.Vec T alloc.alloc.Global)::["with_capacity"] α1 in
  let* _ :=
    let* α0 := M.alloc 0 in
    let* α1 := deref channels.NTHREADS i32 in
    let* α2 :=
      M.alloc
        {| core.ops.range.Range.start := α0; core.ops.range.Range.end := α1;
        |} in
    let* α3 :=
      (core.iter.traits.collect.IntoIterator.into_iter
          (Self := (core.ops.range.Range i32)))
        α2 in
    let* α4 :=
      match α3 with
      | iter =>
        loop
          (let* _ :=
            let* α0 := borrow_mut iter (core.ops.range.Range i32) in
            let* α1 := deref α0 (core.ops.range.Range i32) in
            let* α2 := borrow_mut α1 (core.ops.range.Range i32) in
            let* α3 :=
              (core.iter.traits.iterator.Iterator.next
                  (Self := (core.ops.range.Range i32)))
                α2 in
            match α3 with
            | core.option.Option  =>
              let* α0 := Break in
              never_to_any α0
            | core.option.Option _ =>
              let* _ :=
                let* α0 :=
                  borrow_mut
                    ids
                    (alloc.vec.Vec
                      (core.result.Result i32 std.sync.mpsc.RecvError)
                      alloc.alloc.Global) in
                let* α1 := borrow rx (std.sync.mpsc.Receiver i32) in
                let* α2 := (std.sync.mpsc.Receiver T)::["recv"] α1 in
                (alloc.vec.Vec T A)::["push"] α0 α2 in
              M.alloc tt
            end in
          M.alloc tt)
      end in
    use α4 in
  let* _ :=
    let* α0 :=
      (core.iter.traits.collect.IntoIterator.into_iter
          (Self :=
            (alloc.vec.Vec (std.thread.JoinHandle unit) alloc.alloc.Global)))
        children in
    let* α1 :=
      match α0 with
      | iter =>
        loop
          (let* _ :=
            let* α0 :=
              borrow_mut
                iter
                (alloc.vec.into_iter.IntoIter
                  (std.thread.JoinHandle unit)
                  alloc.alloc.Global) in
            let* α1 :=
              deref
                α0
                (alloc.vec.into_iter.IntoIter
                  (std.thread.JoinHandle unit)
                  alloc.alloc.Global) in
            let* α2 :=
              borrow_mut
                α1
                (alloc.vec.into_iter.IntoIter
                  (std.thread.JoinHandle unit)
                  alloc.alloc.Global) in
            let* α3 :=
              (core.iter.traits.iterator.Iterator.next
                  (Self :=
                    (alloc.vec.into_iter.IntoIter
                      (std.thread.JoinHandle unit)
                      alloc.alloc.Global)))
                α2 in
            match α3 with
            | core.option.Option  =>
              let* α0 := Break in
              never_to_any α0
            | core.option.Option child =>
              let* _ :=
                let* α0 := (std.thread.JoinHandle T)::["join"] child in
                let* α1 :=
                  deref (mk_str "oops! the child thread panicked") str in
                let* α2 := borrow α1 str in
                (core.result.Result T E)::["expect"] α0 α2 in
              M.alloc tt
            end in
          M.alloc tt)
      end in
    use α1 in
  let* _ :=
    let* _ :=
      let* α0 := borrow [ mk_str ""; mk_str "
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 :=
        borrow
          ids
          (alloc.vec.Vec
            (core.result.Result i32 std.sync.mpsc.RecvError)
            alloc.alloc.Global) in
      let* α5 :=
        deref
          α4
          (alloc.vec.Vec
            (core.result.Result i32 std.sync.mpsc.RecvError)
            alloc.alloc.Global) in
      let* α6 :=
        borrow
          α5
          (alloc.vec.Vec
            (core.result.Result i32 std.sync.mpsc.RecvError)
            alloc.alloc.Global) in
      let* α7 := core.fmt.rt.Argument::["new_debug"] α6 in
      let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
      let* α9 := deref α8 (list core.fmt.rt.Argument) in
      let* α10 := borrow α9 (list core.fmt.rt.Argument) in
      let* α11 := pointer_coercion "Unsize" α10 in
      let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
      std.io.stdio._print α12 in
    M.alloc tt in
  M.alloc tt.
