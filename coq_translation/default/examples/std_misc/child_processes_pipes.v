(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition PANGRAM `{ℋ : State.Trait} : ref str :=
  M.run (Pure (mk_str "the quick brown fox jumped over the lazy dog
")).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  let* process :=
    let* α0 := std.process.Command::["new"] (mk_str "wc") in
    let* α1 := borrow_mut α0 std.process.Command in
    let* α2 := std.process.Stdio::["piped"] in
    let* α3 := std.process.Command::["stdin"] α1 α2 in
    let* α4 := deref α3 std.process.Command in
    let* α5 := borrow_mut α4 std.process.Command in
    let* α6 := std.process.Stdio::["piped"] in
    let* α7 := std.process.Command::["stdout"] α5 α6 in
    let* α8 := deref α7 std.process.Command in
    let* α9 := borrow_mut α8 std.process.Command in
    let* α10 := std.process.Command::["spawn"] α9 in
    match α10 with
    | core.result.Result why =>
      let* α0 := borrow [ mk_str "couldn't spawn wc: " ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := borrow why std.io.error.Error in
      let* α5 := deref α4 std.io.error.Error in
      let* α6 := borrow α5 std.io.error.Error in
      let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
      let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
      let* α9 := deref α8 (list core.fmt.rt.Argument) in
      let* α10 := borrow α9 (list core.fmt.rt.Argument) in
      let* α11 := pointer_coercion "Unsize" α10 in
      let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
      let* α13 := core.panicking.panic_fmt α12 in
      never_to_any α13
    | core.result.Result process => Pure process
    end in
  let* _ :=
    let* α0 := process.["stdin"] in
    let* α1 := (core.option.Option T)::["unwrap"] α0 in
    let* α2 := borrow_mut α1 std.process.ChildStdin in
    let* α3 := deref child_processes_pipes.PANGRAM (ref str) in
    let* α4 := deref α3 str in
    let* α5 := borrow α4 str in
    let* α6 := str::["as_bytes"] α5 in
    let* α7 := deref α6 (Slice u8) in
    let* α8 := borrow α7 (Slice u8) in
    let* α9 :=
      (std.io.Write.write_all (Self := std.process.ChildStdin)) α2 α8 in
    match α9 with
    | core.result.Result why =>
      let* α0 :=
        borrow [ mk_str "couldn't write to wc stdin: " ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := borrow why std.io.error.Error in
      let* α5 := deref α4 std.io.error.Error in
      let* α6 := borrow α5 std.io.error.Error in
      let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
      let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
      let* α9 := deref α8 (list core.fmt.rt.Argument) in
      let* α10 := borrow α9 (list core.fmt.rt.Argument) in
      let* α11 := pointer_coercion "Unsize" α10 in
      let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
      let* α13 := core.panicking.panic_fmt α12 in
      never_to_any α13
    | core.result.Result _ =>
      let* _ :=
        let* α0 := borrow [ mk_str "sent pangram to wc
" ] (list (ref str)) in
        let* α1 := deref α0 (list (ref str)) in
        let* α2 := borrow α1 (list (ref str)) in
        let* α3 := pointer_coercion "Unsize" α2 in
        let* α4 := core.fmt.Arguments::["new_const"] α3 in
        std.io.stdio._print α4 in
      M.alloc tt
    end in
  let* s := alloc.string.String::["new"] in
  let* α0 := process.["stdout"] in
  let* α1 := (core.option.Option T)::["unwrap"] α0 in
  let* α2 := borrow_mut α1 std.process.ChildStdout in
  let* α3 := borrow_mut s alloc.string.String in
  let* α4 := deref α3 alloc.string.String in
  let* α5 := borrow_mut α4 alloc.string.String in
  let* α6 :=
    (std.io.Read.read_to_string (Self := std.process.ChildStdout)) α2 α5 in
  match α6 with
  | core.result.Result why =>
    let* α0 := borrow [ mk_str "couldn't read wc stdout: " ] (list (ref str)) in
    let* α1 := deref α0 (list (ref str)) in
    let* α2 := borrow α1 (list (ref str)) in
    let* α3 := pointer_coercion "Unsize" α2 in
    let* α4 := borrow why std.io.error.Error in
    let* α5 := deref α4 std.io.error.Error in
    let* α6 := borrow α5 std.io.error.Error in
    let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
    let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
    let* α9 := deref α8 (list core.fmt.rt.Argument) in
    let* α10 := borrow α9 (list core.fmt.rt.Argument) in
    let* α11 := pointer_coercion "Unsize" α10 in
    let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
    let* α13 := core.panicking.panic_fmt α12 in
    never_to_any α13
  | core.result.Result _ =>
    let* _ :=
      let* α0 := borrow [ mk_str "wc responded with:
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := borrow s alloc.string.String in
      let* α5 := deref α4 alloc.string.String in
      let* α6 := borrow α5 alloc.string.String in
      let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
      let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
      let* α9 := deref α8 (list core.fmt.rt.Argument) in
      let* α10 := borrow α9 (list core.fmt.rt.Argument) in
      let* α11 := pointer_coercion "Unsize" α10 in
      let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
      std.io.stdio._print α12 in
    M.alloc tt
  end.
