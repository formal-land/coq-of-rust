(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  M.function_body
    (let* child : ltac:(refine std.process.Child) :=
      let* α0 : ltac:(refine std.process.Command) :=
        std.process.Command::["new"] (mk_str "sleep") in
      let* α1 : ltac:(refine (mut_ref std.process.Command)) := borrow_mut α0 in
      let* α2 : ltac:(refine (mut_ref std.process.Command)) :=
        std.process.Command::["arg"] α1 (mk_str "5") in
      let* α3 : ltac:(refine std.process.Command) := deref α2 in
      let* α4 : ltac:(refine (mut_ref std.process.Command)) := borrow_mut α3 in
      let* α5 :
          ltac:(refine
            (core.result.Result std.process.Child std.io.error.Error)) :=
        std.process.Command::["spawn"] α4 in
      (core.result.Result std.process.Child std.io.error.Error)::["unwrap"]
        α5 in
    let* _result : ltac:(refine std.process.ExitStatus) :=
      let* α0 : ltac:(refine (mut_ref std.process.Child)) := borrow_mut child in
      let* α1 :
          ltac:(refine
            (core.result.Result std.process.ExitStatus std.io.error.Error)) :=
        std.process.Child::["wait"] α0 in
      (core.result.Result std.process.ExitStatus std.io.error.Error)::["unwrap"]
        α1 in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "reached end of main
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α1 in
        let* α3 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_const"] α2 in
        std.io.stdio._print α3 in
      M.alloc tt in
    M.alloc tt).
