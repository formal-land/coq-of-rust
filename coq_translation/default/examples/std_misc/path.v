(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  M.function_body
    (let* path : ltac:(refine (ref std.path.Path)) :=
      let* α0 : ltac:(refine str) := deref (mk_str ".") in
      let* α1 : ltac:(refine (ref str)) := borrow α0 in
      std.path.Path::["new"] α1 in
    let* _display : ltac:(refine std.path.Display) :=
      let* α0 : ltac:(refine std.path.Path) := deref path in
      let* α1 : ltac:(refine (ref std.path.Path)) := borrow α0 in
      std.path.Path::["display"] α1 in
    let* new_path : ltac:(refine std.path.PathBuf) :=
      let* α0 : ltac:(refine std.path.Path) := deref path in
      let* α1 : ltac:(refine (ref std.path.Path)) := borrow α0 in
      let* α2 : ltac:(refine std.path.PathBuf) :=
        std.path.Path::["join"] α1 (mk_str "a") in
      let* α3 : ltac:(refine (ref std.path.PathBuf)) := borrow α2 in
      let* α4 : ltac:(refine (ref std.path.Path)) :=
        (core.ops.deref.Deref.deref
            (Self := std.path.PathBuf)
            (Trait := ltac:(refine _)))
          α3 in
      let* α5 : ltac:(refine std.path.Path) := deref α4 in
      let* α6 : ltac:(refine (ref std.path.Path)) := borrow α5 in
      std.path.Path::["join"] α6 (mk_str "b") in
    let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine (mut_ref std.path.PathBuf)) :=
        borrow_mut new_path in
      std.path.PathBuf::["push"] α0 (mk_str "c") in
    let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine (mut_ref std.path.PathBuf)) :=
        borrow_mut new_path in
      std.path.PathBuf::["push"] α0 (mk_str "myfile.tar.gz") in
    let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine (mut_ref std.path.PathBuf)) :=
        borrow_mut new_path in
      std.path.PathBuf::["set_file_name"] α0 (mk_str "package.tgz") in
    let* α0 : ltac:(refine (ref std.path.PathBuf)) := borrow new_path in
    let* α1 : ltac:(refine (ref std.path.Path)) :=
      (core.ops.deref.Deref.deref
          (Self := std.path.PathBuf)
          (Trait := ltac:(refine _)))
        α0 in
    let* α2 : ltac:(refine std.path.Path) := deref α1 in
    let* α3 : ltac:(refine (ref std.path.Path)) := borrow α2 in
    let* α4 : ltac:(refine (core.option.Option (ref str))) :=
      std.path.Path::["to_str"] α3 in
    let* α5 := M.read α4 in
    match α5 with
    | core.option.Option.None  =>
      let* α0 : ltac:(refine never) :=
        std.panicking.begin_panic
          (mk_str "new path is not a valid UTF-8 sequence") in
      never_to_any α0
    | core.option.Option.Some s =>
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "new path is "; mk_str "
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α1 in
        let* α3 : ltac:(refine (ref (ref str))) := borrow s in
        let* α4 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α3 in
        let* α5 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α4 ] in
        let* α6 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α5 in
        let* α7 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α6 in
        let* α8 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α2 α7 in
        std.io.stdio._print α8 in
      M.alloc tt
    end).
