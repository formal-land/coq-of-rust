(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition add `{ℋ : State.Trait} (a : i32) (b : i32) : M i32 :=
  M.function_body (BinOp.add a b).

Definition div `{ℋ : State.Trait} (a : i32) (b : i32) : M i32 :=
  M.function_body
    (let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine i32) := M.alloc 0 in
      let* α1 : ltac:(refine bool) := BinOp.eq b α0 in
      let* α2 : ltac:(refine bool) := use α1 in
      if (α2 : bool) then
        let* _ : ltac:(refine unit) :=
          let* α0 : ltac:(refine never) :=
            std.panicking.begin_panic (mk_str "Divide-by-zero error") in
          never_to_any α0 in
        let* α0 : ltac:(refine unit) := M.alloc tt in
        never_to_any α0
      else
        M.alloc tt in
    BinOp.div a b).
