(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Status.
  Inductive t : Set :=
  | Rich
  | Poor.
End Status.
Definition Status := Status.t.

Module Work.
  Inductive t : Set :=
  | Civilian
  | Soldier.
End Work.
Definition Work := Work.t.

Definition main :=
  let return_type := unit in
  ltac:(function (
    let status := Poor in
    let work := Civilian in
    let '_ :=
      match status with
      | Rich =>
        let '_ :=
          _crate.io._print(|
            format_arguments::["new_const"](|
              [ "The rich have lots of money!
" ]
            |)
          |) in
        tt
      | Poor =>
        let '_ :=
          _crate.io._print(|
            format_arguments::["new_const"](| [ "The poor have no money...
" ]
            |)
          |) in
        tt
      end in
    match work with
    | Civilian =>
      let '_ :=
        _crate.io._print(|
          format_arguments::["new_const"](| [ "Civilians work!
" ] |)
        |) in
      tt
    | Soldier =>
      let '_ :=
        _crate.io._print(|
          format_arguments::["new_const"](| [ "Soldiers fight!
" ] |)
        |) in
      tt
    end
  : return_type)).

Module Poor := crate.Status.Poor.

Module Rich := crate.Status.Rich.

Import crate.Work.
