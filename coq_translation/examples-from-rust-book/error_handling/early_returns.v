(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module ParseIntError := std.num.ParseIntError.
Definition ParseIntError := ParseIntError.t.

Definition multiply
    (first_number_str : ref str)
    (second_number_str : ref str) :=
  ltac:(function (
    let first_number :=
      match first_number_str.["parse"](||) with
      | Ok first_number => first_number
      | Err e => Return(| Err e |)
      end in
    let second_number :=
      match second_number_str.["parse"](||) with
      | Ok second_number => second_number
      | Err e => Return(| Err e |)
      end in
    Ok (first_number.["mul"](| second_number |))
    : Result i32 ParseIntError)).

Definition print (result : Result i32 ParseIntError) :=
  ltac:(function (
    match result with
    | Ok n =>
      let '_ :=
        _crate.io._print(|
          format_arguments::["new_v1"](|
            [ "n is "; "
" ],
            [ format_argument::["new_display"](| n |) ]
          |)
        |) in
      tt
    | Err e =>
      let '_ :=
        _crate.io._print(|
          format_arguments::["new_v1"](|
            [ "Error: "; "
" ],
            [ format_argument::["new_display"](| e |) ]
          |)
        |) in
      tt
    end
    : unit)).

Definition main :=
  ltac:(function (
    let '_ := print(| multiply(| "10", "2" |) |) in
    let '_ := print(| multiply(| "t", "2" |) |) in
    tt
    : unit)).
