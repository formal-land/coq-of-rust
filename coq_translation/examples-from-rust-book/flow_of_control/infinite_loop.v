(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition main :=
  let return_type := unit in
  ltac:(function (
    let count := 0 in
    let _ : unit :=
      let _ : unit :=
        _crate.io._print(|
          format_arguments::["new_const"](| [ "Let's count until infinity!
" ]
          |)
        |) in
      tt in
    loop
      let _ : unit := count.["add_assign"](| 1 |) in
      let _ : unit :=
        if (count.["eq"](| 3 |) : bool) then
          let _ : unit :=
            let _ : unit :=
              _crate.io._print(|
                format_arguments::["new_const"](| [ "three
" ] |)
              |) in
            tt in
          let _ : unit := M.Continue in
          tt
        else
          tt in
      let _ : unit :=
        let _ : unit :=
          _crate.io._print(|
            format_arguments::["new_v1"](|
              [ ""; "
" ],
              [ format_argument::["new_display"](| count |) ]
            |)
          |) in
        tt in
      if (count.["eq"](| 5 |) : bool) then
        let _ : unit :=
          let _ : unit :=
            _crate.io._print(|
              format_arguments::["new_const"](| [ "OK, that's enough
" ] |)
            |) in
          tt in
        let _ : unit := M.Break in
        tt
      else
        tt
      from
      loop
  : return_type)).
