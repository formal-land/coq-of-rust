(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition main :=
  let return_type := unit in
  ltac:(function (
    let counter := 0 in
    let result :=
      loop
        let _ : unit := counter.["add_assign"](| 1 |) in
        if (counter.["eq"](| 10 |) : bool) then
          let _ : unit := M.Break in
          tt
        else
          tt
        from
        loop in
    let _ : unit :=
      match (result, 20) with
      | (left_val, right_val) =>
        if
          (left_val.["deref"](||).["eq"](| right_val.["deref"](||)
          |).["not"](||)
          : bool)
        then
          let kind := _crate.panicking.AssertKind.Eq in
          let _ : unit :=
            _crate.panicking.assert_failed(|
              kind,
              left_val.["deref"](||),
              right_val.["deref"](||),
              _crate.option.Option.None
            |) in
          tt
        else
          tt
      end in
    tt
  : return_type)).
