(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition main :=
  let return_type := unit in
  ltac:(function (
    let _ : unit :=
      let _ : unit :=
        _crate.io._print(|
          format_arguments::["new_v1"](|
            [ "Sum of odd numbers up to 9 (excluding): "; "
" ],
            [ format_argument::["new_display"](| sum_odd_numbers(| 9 |) |) ]
          |)
        |) in
      tt in
    tt
  : return_type)).

Definition sum_odd_numbers (up_to : u32) :=
  let return_type := u32 in
  ltac:(function (
    let acc := 0 in
    let _ : unit :=
      match LangItem(| Range {| Range.start := 0; Range.end := up_to; |} |) with
      | iter =>
        loop
          let _ : unit :=
            match LangItem(| iter |) with
            | None => M.Break
            | Some {| Some.0 := i; |} =>
              let addition :=
                match i.["rem"](| 2 |).["eq"](| 1 |) with
                | true => i
                | false => M.Continue
                end in
              let _ : unit := acc.["add_assign"](| addition |) in
              tt
            end in
          tt
          from
          for
      end in
    acc
  : return_type)).
