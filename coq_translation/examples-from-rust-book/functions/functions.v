(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : unit :=
  fizzbuzz_to 100 ;;
  tt.

Definition is_divisible_by (lhs : u32) (rhs : u32) : bool :=
  if (rhs.["eq"] 0 : bool) then
    Return false ;;
    tt
  else
    tt ;;
  (lhs.["rem"] rhs).["eq"] 0.

Definition fizzbuzz (n : u32) : unit :=
  if (is_divisible_by n 15 : bool) then
    _crate.io._print (format_arguments::["new_const"] [ "fizzbuzz
" ]) ;;
    tt ;;
    tt
  else
    if (is_divisible_by n 3 : bool) then
      _crate.io._print (format_arguments::["new_const"] [ "fizz
" ]) ;;
      tt ;;
      tt
    else
      if (is_divisible_by n 5 : bool) then
        _crate.io._print (format_arguments::["new_const"] [ "buzz
" ]) ;;
        tt ;;
        tt
      else
        _crate.io._print
          (format_arguments::["new_v1"]
            [ ""; "
" ]
            [ format_argument::["new_display"] n ]) ;;
        tt ;;
        tt.

Definition fizzbuzz_to (n : u32) : unit :=
  match LangItem (LangItem 1 n) with
  | iter =>
    loop
      match LangItem iter with
      | None => Break
      | Some {| Some.0 := n; |} =>
        fizzbuzz n ;;
        tt
      end ;;
      tt
      from
      for
  end.
