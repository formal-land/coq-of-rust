(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition main :=
  let return_type := unit in
  ltac:(function (
    let color := String::["from"](| "green" |) in
    let print :=
      fun  =>
        let _ : unit :=
          _crate.io._print(|
            format_arguments::["new_v1"](|
              [ "`color`: "; "
" ],
              [ format_argument::["new_display"](| color |) ]
            |)
          |) in
        tt in
    let _ : unit := print(||) in
    let _reborrow := color in
    let _ : unit := print(||) in
    let _color_moved := color in
    let count := 0 in
    let inc :=
      fun  =>
        let _ : unit := count.["add_assign"](| 1 |) in
        let _ : unit :=
          let _ : unit :=
            _crate.io._print(|
              format_arguments::["new_v1"](|
                [ "`count`: "; "
" ],
                [ format_argument::["new_display"](| count |) ]
              |)
            |) in
          tt in
        tt in
    let _ : unit := inc(||) in
    let _ : unit := inc(||) in
    let _count_reborrowed := count in
    let movable := Box::["new"](| 3 |) in
    let consume :=
      fun  =>
        let _ : unit :=
          let _ : unit :=
            _crate.io._print(|
              format_arguments::["new_v1"](|
                [ "`movable`: "; "
" ],
                [ format_argument::["new_debug"](| movable |) ]
              |)
            |) in
          tt in
        let _ : unit := mem.drop(| movable |) in
        tt in
    let _ : unit := consume(||) in
    tt
  : return_type)).

Module mem := std.mem.
