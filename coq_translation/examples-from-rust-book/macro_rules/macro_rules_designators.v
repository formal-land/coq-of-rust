(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition foo :=
  let return_type := unit in
  ltac:(function (
    let _ : unit :=
      let _ : unit :=
        _crate.io._print(|
          format_arguments::["new_v1"](|
            [ "You called "; "()
" ],
            [ format_argument::["new_debug"](| "foo" |) ]
          |)
        |) in
      tt in
    tt
  : return_type)).

Definition bar :=
  let return_type := unit in
  ltac:(function (
    let _ : unit :=
      let _ : unit :=
        _crate.io._print(|
          format_arguments::["new_v1"](|
            [ "You called "; "()
" ],
            [ format_argument::["new_debug"](| "bar" |) ]
          |)
        |) in
      tt in
    tt
  : return_type)).

Definition main :=
  let return_type := unit in
  ltac:(function (
    let _ : unit := foo(||) in
    let _ : unit := bar(||) in
    let _ : unit :=
      let _ : unit :=
        _crate.io._print(|
          format_arguments::["new_v1"](|
            [ ""; " = "; "
" ],
            [
              format_argument::["new_debug"](| "1u32 + 1" |);
              format_argument::["new_debug"](| 1.["add"](| 1 |) |)
            ]
          |)
        |) in
      tt in
    let _ : unit :=
      let _ : unit :=
        _crate.io._print(|
          format_arguments::["new_v1"](|
            [ ""; " = "; "
" ],
            [
              format_argument::["new_debug"](|
                "{ let x = 1u32; x * x + 2 * x - 1 }"
              |);
              format_argument::["new_debug"](|
                let x := 1 in
                x.["mul"](| x |).["add"](| 2.["mul"](| x |) |).["sub"](| 1 |)
              |)
            ]
          |)
        |) in
      tt in
    tt
  : return_type)).
