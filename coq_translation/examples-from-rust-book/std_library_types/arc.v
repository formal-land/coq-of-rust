(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Arc := std.sync.Arc.
Definition Arc := Arc.t.

Module thread := std.thread.

Module Duration := std.time.Duration.
Definition Duration := Duration.t.

Definition main :=
  let return_type := unit in
  ltac:(function (
    let apple := Arc::["new"](| "the same apple" |) in
    let _ : unit :=
      match LangItem(| Range {| Range.start := 0; Range.end := 10; |} |) with
      | iter =>
        loop
          let _ : unit :=
            match LangItem(| iter |) with
            | None => M.Break
            | Some {| Some.0 := _; |} =>
              let apple := Arc::["clone"](| apple |) in
              let _ : unit :=
                thread.spawn(|
                  fun  =>
                    let _ : unit :=
                      let _ : unit :=
                        _crate.io._print(|
                          format_arguments::["new_v1"](|
                            [ ""; "
" ],
                            [ format_argument::["new_debug"](| apple |) ]
                          |)
                        |) in
                      tt in
                    tt
                |) in
              tt
            end in
          tt
          from
          for
      end in
    let _ : unit := thread.sleep(| Duration::["from_secs"](| 1 |) |) in
    tt
  : return_type)).
