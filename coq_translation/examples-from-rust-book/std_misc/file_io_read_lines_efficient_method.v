(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module File := std.fs.File.
Definition File := File.t.

Module io := std.io.

Module Path := std.path.Path.
Definition Path := Path.t.

Definition main :=
  ltac:(function (
    if (let_if Ok lines := read_lines(| "./hosts" |) : bool) then
      match LangItem(| lines |) with
      | iter =>
        loop
          let '_ :=
            match LangItem(| iter |) with
            | None => Break
            | Some {| Some.0 := line; |} =>
              if (let_if Ok ip := line : bool) then
                let '_ :=
                  let '_ :=
                    _crate.io._print(|
                      format_arguments::["new_v1"](|
                        [ ""; "
" ],
                        [ format_argument::["new_display"](| ip |) ]
                      |)
                    |) in
                  tt in
                tt
              else
                tt
            end in
          tt
          from
          for
      end
    else
      tt
    : unit)).

Definition read_lines {P : Set} `{AsRef.Trait Path P} (filename : P) :=
  ltac:(function (
    let file :=
      match LangItem(| File::["open"](| filename |) |) with
      | Break {| Break.0 := residual; |} => Return(| LangItem(| residual |) |)
      | Continue {| Continue.0 := val; |} => val
      end in
    Ok ((io.BufReader::["new"](| file |)).["lines"](||))
    : io.Result (io.Lines (io.BufReader File)))).
