(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Import crate.List.

Module List.
  Inductive t : Set :=
  | Cons (_ : u32) (_ : Box List)
  | Nil.
End List.
Definition List := List.t.

Module ImplList.
  Definition Self := List.
  
  Definition new (_ : unit) : M List := Pure Nil.
  
  Global Instance AssociatedFunction_new : Notation.DoubleColon Self "new" := {
    Notation.double_colon := new;
  }.
  
  Definition prepend (self : Self) (elem : u32) : M List :=
    let* α0 := Box::["new"] self in
    Cons elem α0.
  
  Global Instance Method_prepend : Notation.Dot "prepend" := {
    Notation.dot := prepend;
  }.
  
  Definition len (self : ref Self) : M u32 :=
    let* α0 := self.["deref"] in
    match α0 with
    | Cons _ tail =>
      let* α0 := tail.["len"] in
      1.["add"] α0
    | Nil => Pure 0
    end.
  
  Global Instance Method_len : Notation.Dot "len" := {
    Notation.dot := len;
  }.
  
  Definition stringify (self : ref Self) : M String :=
    let* α0 := self.["deref"] in
    match α0 with
    | Cons head tail =>
      let* α0 := format_argument::["new_display"] (deref head) in
      let* α1 := tail.["stringify"] in
      let* α2 := format_argument::["new_display"] (deref α1) in
      let* α3 :=
        format_arguments::["new_v1"] (deref [ ""; ", " ]) (deref [ α0; α2 ]) in
      let* res := _crate.fmt.format α3 in
      Pure res
    | Nil =>
      let* α0 := format_arguments::["new_const"] (deref [ "Nil" ]) in
      let* res := _crate.fmt.format α0 in
      Pure res
    end.
  
  Global Instance Method_stringify : Notation.Dot "stringify" := {
    Notation.dot := stringify;
  }.
End ImplList.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let* list := List::["new"] tt in
  let* α0 := list.["prepend"] 1 in
  let* _ := assign list α0 in
  let* α1 := list.["prepend"] 2 in
  let* _ := assign list α1 in
  let* α2 := list.["prepend"] 3 in
  let* _ := assign list α2 in
  let* α3 := list.["len"] in
  let* α4 := format_argument::["new_display"] (deref α3) in
  let* α5 :=
    format_arguments::["new_v1"]
      (deref [ "linked list has length: "; "
" ])
      (deref [ α4 ]) in
  let* _ := _crate.io._print α5 in
  let _ := tt in
  let* α6 := list.["stringify"] in
  let* α7 := format_argument::["new_display"] (deref α6) in
  let* α8 := format_arguments::["new_v1"] (deref [ ""; "
" ]) (deref [ α7 ]) in
  let* _ := _crate.io._print α8 in
  let _ := tt in
  Pure tt.
