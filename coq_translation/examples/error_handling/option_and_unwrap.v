(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition give_adult (drink : Option (ref str)) : unit :=
  match drink with
  | Some "lemonade" =>
    let _ :=
      _crate.io._print
        (format_arguments::["new_const"] [ "Yuck! Too sugary.
" ]) in
    tt
  | Some inner =>
    let _ :=
      _crate.io._print
        (format_arguments::["new_v1"]
          [ ""; "? How nice.
" ]
          [ format_argument::["new_display"] inner ]) in
    tt
  | None =>
    let _ :=
      _crate.io._print
        (format_arguments::["new_const"] [ "No drink? Oh well.
" ]) in
    tt
  end.

Definition drink (drink : Option (ref str)) : unit :=
  let inside := drink.["unwrap"] in
  let _ :=
    if (inside.["eq"] "lemonade" : bool) then
      let _ := _crate.rt.begin_panic "AAAaaaaa!!!!" in
      tt
    else
      tt in
  let _ :=
    let _ :=
      _crate.io._print
        (format_arguments::["new_v1"]
          [ "I love "; "s!!!!!
" ]
          [ format_argument::["new_display"] inside ]) in
    tt in
  tt.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : unit :=
  let water := Some "water" in
  let lemonade := Some "lemonade" in
  let void := None in
  let _ := give_adult water in
  let _ := give_adult lemonade in
  let _ := give_adult void in
  let coffee := Some "coffee" in
  let nothing := None in
  let _ := drink coffee in
  let _ := drink nothing in
  tt.
