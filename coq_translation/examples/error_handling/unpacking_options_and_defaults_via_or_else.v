(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Fruit.
  Inductive t : Set :=
  | Apple
  | Orange
  | Banana
  | Kiwi
  | Lemon.
End Fruit.
Definition Fruit := Fruit.t.

Module Impl__crate_fmt_Debug_for_Fruit.
  Definition Self := Fruit.
  
  Definition fmt
      (self : ref Self)
      (f : mut_ref _crate.fmt.Formatter)
      : M _crate.fmt.Result :=
    let* α0 :=
      match self with
      | Fruit.Apple => Pure "Apple"
      | Fruit.Orange => Pure "Orange"
      | Fruit.Banana => Pure "Banana"
      | Fruit.Kiwi => Pure "Kiwi"
      | Fruit.Lemon => Pure "Lemon"
      end in
    _crate.fmt.Formatter::["write_str"] f α0.
  
  Global Instance Method_fmt : Notation.Dot "fmt" := {
    Notation.dot := fmt;
  }.
  
  Global Instance I : _crate.fmt.Debug.Trait Self := {
    _crate.fmt.Debug.fmt := fmt;
  }.
End Impl__crate_fmt_Debug_for_Fruit.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let apple := Some Fruit.Apple in
  let no_fruit := None in
  let get_kiwi_as_fallback :=
    fun  =>
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of [ "Providing kiwi as fallback
" ]) in
          _crate.io._print α0 in
        Pure tt in
      Pure (Some Fruit.Kiwi) in
  let get_lemon_as_fallback :=
    fun  =>
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of [ "Providing lemon as fallback
" ]) in
          _crate.io._print α0 in
        Pure tt in
      Pure (Some Fruit.Lemon) in
  let* first_available_fruit :=
    let* α0 := no_fruit.["or_else"] get_kiwi_as_fallback in
    α0.["or_else"] get_lemon_as_fallback in
  let* _ :=
    let* _ :=
      let* α0 :=
        format_argument::["new_debug"] (addr_of first_available_fruit) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "first_available_fruit: "; "
" ])
          (addr_of [ α0 ]) in
      _crate.io._print α1 in
    Pure tt in
  Pure tt.
