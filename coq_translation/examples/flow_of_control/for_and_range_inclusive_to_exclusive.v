(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let* α0 := LangItem Range {| Range.start := 1; Range.end := 101; |} in
  match α0 with
  | iter =>
    loop
      let* α0 := LangItem (deref iter) in
      let* _ :=
        match α0 with
        | None => Pure Break
        | Some {| Some.0 := n; |} =>
          let* α0 := n.["rem"] 15 in
          let* α1 := α0.["eq"] 0 in
          if (α1 : bool) then
            let* α0 :=
              format_arguments::["new_const"] (deref [ "fizzbuzz
" ]) in
            let* _ := _crate.io._print α0 in
            let _ := tt in
            Pure tt
          else
            let* α0 := n.["rem"] 3 in
            let* α1 := α0.["eq"] 0 in
            if (α1 : bool) then
              let* α0 := format_arguments::["new_const"] (deref [ "fizz
" ]) in
              let* _ := _crate.io._print α0 in
              let _ := tt in
              Pure tt
            else
              let* α0 := n.["rem"] 5 in
              let* α1 := α0.["eq"] 0 in
              if (α1 : bool) then
                let* α0 :=
                  format_arguments::["new_const"] (deref [ "buzz
" ]) in
                let* _ := _crate.io._print α0 in
                let _ := tt in
                Pure tt
              else
                let* α0 := format_argument::["new_display"] (deref n) in
                let* α1 :=
                  format_arguments::["new_v1"]
                    (deref [ ""; "
" ])
                    (deref [ α0 ]) in
                let* _ := _crate.io._print α1 in
                let _ := tt in
                Pure tt
        end in
      Pure tt
      from
      for
  end.
