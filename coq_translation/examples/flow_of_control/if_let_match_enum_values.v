(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Foo.
  Inductive t : Set :=
  | Bar
  | Baz
  | Qux (_ : u32).
End Foo.
Definition Foo := Foo.t.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let a := Foo.Bar in
  let b := Foo.Baz in
  let* c := Foo.Qux 100 in
  let* α0 := let_if Foo.Bar := a in
  let* _ :=
    if (α0 : bool) then
      let* α0 := format_arguments::["new_const"] (deref [ "a is foobar
" ]) in
      let* _ := _crate.io._print α0 in
      let _ := tt in
      Pure tt
    else
      Pure tt in
  let* α1 := let_if Foo.Bar := b in
  let* _ :=
    if (α1 : bool) then
      let* α0 := format_arguments::["new_const"] (deref [ "b is foobar
" ]) in
      let* _ := _crate.io._print α0 in
      let _ := tt in
      Pure tt
    else
      Pure tt in
  let* α2 := let_if Foo.Qux value := c in
  let* _ :=
    if (α2 : bool) then
      let* α0 := format_argument::["new_display"] (deref value) in
      let* α1 :=
        format_arguments::["new_v1"] (deref [ "c is "; "
" ]) (deref [ α0 ]) in
      let* _ := _crate.io._print α1 in
      let _ := tt in
      Pure tt
    else
      Pure tt in
  let* α3 := let_if Foo.Qux (100 as value) := c in
  if (α3 : bool) then
    let* α0 :=
      format_arguments::["new_const"] (deref [ "c is one hundred
" ]) in
    let* _ := _crate.io._print α0 in
    let _ := tt in
    Pure tt
  else
    Pure tt.
