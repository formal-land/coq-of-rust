(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Foo.
  Unset Primitive Projections.
  Record t : Set := {
    x : u32 * u32;
    y : u32;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_x : Notation.Dot "x" := {
    Notation.dot '(Build_t x0 _) := x0;
  }.
  Global Instance Get_y : Notation.Dot "y" := {
    Notation.dot '(Build_t _ x1) := x1;
  }.
End Foo.
Definition Foo : Set := @Foo.t.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{H : State.Trait} : M (H := H) unit :=
  let foo :=
    {|
      match_destructuring_structs.Foo.x := (1, 2);
      match_destructuring_structs.Foo.y := 3;
    |} in
  match foo with
  |
      {|
        match_destructuring_structs.Foo.x := (1, b);
        match_destructuring_structs.Foo.y := y;
      |}
      =>
    let* _ :=
      let* α0 := format_argument::["new_display"] (addr_of b) in
      let* α1 := format_argument::["new_display"] (addr_of y) in
      let* α2 :=
        format_arguments::["new_v1"]
          (addr_of [ "First of x is 1, b = "; ",  y = "; " 
" ])
          (addr_of [ α0; α1 ]) in
      std.io.stdio._print α2 in
    Pure tt
  |
      {|
        match_destructuring_structs.Foo.y := 2;
        match_destructuring_structs.Foo.x := i;
      |}
      =>
    let* _ :=
      let* α0 := format_argument::["new_debug"] (addr_of i) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "y is 2, i = "; "
" ])
          (addr_of [ α0 ]) in
      std.io.stdio._print α1 in
    Pure tt
  | {| match_destructuring_structs.Foo.y := y; |} =>
    let* _ :=
      let* α0 := format_argument::["new_display"] (addr_of y) in
      let* α1 :=
        format_arguments::["new_v1"]
          (addr_of [ "y = "; ", we don't care about x
" ])
          (addr_of [ α0 ]) in
      std.io.stdio._print α1 in
    Pure tt
  end.
