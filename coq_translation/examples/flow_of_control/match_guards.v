(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Temperature.
  Inductive t : Set :=
  | Celsius (_ : i32)
  | Fahrenheit (_ : i32).
End Temperature.
Definition Temperature := Temperature.t.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : unit :=
  let temperature := Temperature.Celsius 35 in
  match temperature with
  | Temperature.Celsius t =>
    let _ :=
      _crate.io._print
        (format_arguments::["new_v1"]
          [ ""; "C is above 30 Celsius
" ]
          [ format_argument::["new_display"] t ]) in
    tt
  | Temperature.Celsius t =>
    let _ :=
      _crate.io._print
        (format_arguments::["new_v1"]
          [ ""; "C is below 30 Celsius
" ]
          [ format_argument::["new_display"] t ]) in
    tt
  | Temperature.Fahrenheit t =>
    let _ :=
      _crate.io._print
        (format_arguments::["new_v1"]
          [ ""; "F is above 86 Fahrenheit
" ]
          [ format_argument::["new_display"] t ]) in
    tt
  | Temperature.Fahrenheit t =>
    let _ :=
      _crate.io._print
        (format_arguments::["new_v1"]
          [ ""; "F is below 86 Fahrenheit
" ]
          [ format_argument::["new_display"] t ]) in
    tt
  end.
