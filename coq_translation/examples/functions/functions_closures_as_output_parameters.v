(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

<<<<<<< HEAD
<<<<<<< HEAD
Definition create_fn `{H : State.Trait} (_ : unit) : M (H := H) OpaqueDef :=
=======
Definition create_fn (_ : unit) : M OpaqueDef :=
>>>>>>> 0b98590 (Rerun the conversion without the --axiomatize flag)
  let* text := "Fn".["to_owned"] in
  Pure
    (fun  =>
      let* _ :=
        let* α0 := format_argument::["new_display"] (addr_of text) in
        let* α1 :=
          format_arguments::["new_v1"]
            (addr_of [ "This is a: "; "
" ])
            (addr_of [ α0 ]) in
        std.io.stdio._print α1 in
      Pure tt).
<<<<<<< HEAD

Error OpaqueTy.

Definition create_fnmut `{H : State.Trait} (_ : unit) : M (H := H) OpaqueDef :=
  let* text := "FnMut".["to_owned"] in
  Pure
    (fun  =>
      let* _ :=
        let* α0 := format_argument::["new_display"] (addr_of text) in
        let* α1 :=
          format_arguments::["new_v1"]
            (addr_of [ "This is a: "; "
" ])
            (addr_of [ α0 ]) in
        std.io.stdio._print α1 in
      Pure tt).

Error OpaqueTy.

Definition create_fnonce `{H : State.Trait} (_ : unit) : M (H := H) OpaqueDef :=
  let* text := "FnOnce".["to_owned"] in
  Pure
    (fun  =>
      let* _ :=
        let* α0 := format_argument::["new_display"] (addr_of text) in
        let* α1 :=
          format_arguments::["new_v1"]
            (addr_of [ "This is a: "; "
" ])
            (addr_of [ α0 ]) in
        std.io.stdio._print α1 in
      Pure tt).
=======
Parameter create_fn : unit -> M OpaqueDef.
=======
>>>>>>> 0b98590 (Rerun the conversion without the --axiomatize flag)

Error OpaqueTy.

Definition create_fnmut (_ : unit) : M OpaqueDef :=
  let* text := "FnMut".["to_owned"] in
  Pure
    (fun  =>
      let* _ :=
        let* α0 := format_argument::["new_display"] (addr_of text) in
        let* α1 :=
          format_arguments::["new_v1"]
            (addr_of [ "This is a: "; "
" ])
            (addr_of [ α0 ]) in
        std.io.stdio._print α1 in
      Pure tt).

Error OpaqueTy.

<<<<<<< HEAD
Parameter create_fnonce : unit -> M OpaqueDef.
>>>>>>> 39940eb (Update examples with --axiomatize (will be reverted soon))
=======
Definition create_fnonce (_ : unit) : M OpaqueDef :=
  let* text := "FnOnce".["to_owned"] in
  Pure
    (fun  =>
      let* _ :=
        let* α0 := format_argument::["new_display"] (addr_of text) in
        let* α1 :=
          format_arguments::["new_v1"]
            (addr_of [ "This is a: "; "
" ])
            (addr_of [ α0 ]) in
        std.io.stdio._print α1 in
      Pure tt).
>>>>>>> 0b98590 (Rerun the conversion without the --axiomatize flag)

Error OpaqueTy.

(* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
Definition main `{H : State.Trait} (_ : unit) : M (H := H) unit :=
=======
Definition main (_ : unit) : M unit :=
>>>>>>> 0b98590 (Rerun the conversion without the --axiomatize flag)
  let* fn_plain := functions_closures_as_output_parameters.create_fn tt in
  let* fn_mut := functions_closures_as_output_parameters.create_fnmut tt in
  let* fn_once := functions_closures_as_output_parameters.create_fnonce tt in
  let* _ := fn_plain tt in
  let* _ := fn_mut tt in
  let* _ := fn_once tt in
  Pure tt.
<<<<<<< HEAD
=======
Parameter main : unit -> M unit.
>>>>>>> 39940eb (Update examples with --axiomatize (will be reverted soon))
=======
>>>>>>> 0b98590 (Rerun the conversion without the --axiomatize flag)
