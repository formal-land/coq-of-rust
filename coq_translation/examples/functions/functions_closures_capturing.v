(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : unit :=
  let color := String::["from"] "green" in
  let print :=
    fun  =>
      let _ :=
        _crate.io._print
          (format_arguments::["new_v1"]
            [ "`color`: "; "
" ]
            [ format_argument::["new_display"] color ]) in
      tt in
  let _ := print tt in
  let _reborrow := color in
  let _ := print tt in
  let _color_moved := color in
  let count := 0 in
  let inc :=
    fun  =>
      let _ := count.["add_assign"] 1 in
      let _ :=
        let _ :=
          _crate.io._print
            (format_arguments::["new_v1"]
              [ "`count`: "; "
" ]
              [ format_argument::["new_display"] count ]) in
        tt in
      tt in
  let _ := inc tt in
  let _ := inc tt in
  let _count_reborrowed := count in
  let movable := Box::["new"] 3 in
  let consume :=
    fun  =>
      let _ :=
        let _ :=
          _crate.io._print
            (format_arguments::["new_v1"]
              [ "`movable`: "; "
" ]
              [ format_argument::["new_debug"] movable ]) in
        tt in
      let _ := mem.drop movable in
      tt in
  let _ := consume tt in
  tt.

Module mem := std.mem.
