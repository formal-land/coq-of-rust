(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module my_mod.
<<<<<<< HEAD
<<<<<<< HEAD
  Definition private_function : M unit :=
=======
  Definition private_function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition private_function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of [ "called `my_mod::private_function()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
  
<<<<<<< HEAD
<<<<<<< HEAD
  Definition function : M unit :=
=======
  Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of [ "called `my_mod::function()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
  
<<<<<<< HEAD
<<<<<<< HEAD
  Definition indirect_access : M unit :=
=======
  Definition indirect_access  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition indirect_access : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of [ "called `my_mod::indirect_access()`, that
> " ]) in
        std.io.stdio._print α0 in
      Pure tt in
<<<<<<< HEAD
    let* _ := visibility.my_mod.private_function in
=======
    let* _ := visibility.my_mod.private_function  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
    Pure tt.
  
  Module nested.
<<<<<<< HEAD
<<<<<<< HEAD
    Definition function : M unit :=
=======
    Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
    Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of [ "called `my_mod::nested::function()`
" ]) in
          std.io.stdio._print α0 in
        Pure tt in
      Pure tt.
    
    (* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
    Definition private_function : M unit :=
=======
    Definition private_function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
    Definition private_function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of [ "called `my_mod::nested::private_function()`
" ]) in
          std.io.stdio._print α0 in
        Pure tt in
      Pure tt.
    
<<<<<<< HEAD
<<<<<<< HEAD
    Definition public_function_in_my_mod : M unit :=
=======
    Definition public_function_in_my_mod  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
    Definition public_function_in_my_mod : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of
                [
                  "called `my_mod::nested::public_function_in_my_mod()`, that
> "
                ]) in
          std.io.stdio._print α0 in
        Pure tt in
<<<<<<< HEAD
      let* _ := visibility.my_mod.nested.public_function_in_nested in
=======
      let* _ := visibility.my_mod.nested.public_function_in_nested  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
      Pure tt.
    
<<<<<<< HEAD
<<<<<<< HEAD
    Definition public_function_in_nested : M unit :=
=======
    Definition public_function_in_nested  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
    Definition public_function_in_nested : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of
                [ "called `my_mod::nested::public_function_in_nested()`
" ]) in
          std.io.stdio._print α0 in
        Pure tt in
      Pure tt.
    
<<<<<<< HEAD
<<<<<<< HEAD
    Definition public_function_in_super_mod : M unit :=
=======
    Definition public_function_in_super_mod  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
    Definition public_function_in_super_mod : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of
                [ "called `my_mod::nested::public_function_in_super_mod()`
"
                ]) in
          std.io.stdio._print α0 in
        Pure tt in
      Pure tt.
  End nested.
  
<<<<<<< HEAD
<<<<<<< HEAD
  Definition call_public_function_in_my_mod : M unit :=
=======
  Definition call_public_function_in_my_mod  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition call_public_function_in_my_mod : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of
              [ "called `my_mod::call_public_function_in_my_mod()`, that
> "
              ]) in
        std.io.stdio._print α0 in
      Pure tt in
<<<<<<< HEAD
    let* _ := visibility.my_mod.nested.public_function_in_my_mod in
=======
    let* _ := visibility.my_mod.nested.public_function_in_my_mod  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
    let* _ :=
      let* _ :=
        let* α0 := format_arguments::["new_const"] (addr_of [ "> " ]) in
        std.io.stdio._print α0 in
      Pure tt in
<<<<<<< HEAD
    let* _ := visibility.my_mod.nested.public_function_in_super_mod in
=======
    let* _ := visibility.my_mod.nested.public_function_in_super_mod  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
    Pure tt.
  
<<<<<<< HEAD
<<<<<<< HEAD
  Definition public_function_in_crate : M unit :=
=======
  Definition public_function_in_crate  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition public_function_in_crate : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of [ "called `my_mod::public_function_in_crate()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
  
  Module private_nested.
    (* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
    Definition function : M unit :=
=======
    Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
    Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of [ "called `my_mod::private_nested::function()`
" ]) in
          std.io.stdio._print α0 in
        Pure tt in
      Pure tt.
    
    (* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
    Definition restricted_function : M unit :=
=======
    Definition restricted_function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
    Definition restricted_function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
      let* _ :=
        let* _ :=
          let* α0 :=
            format_arguments::["new_const"]
              (addr_of
                [ "called `my_mod::private_nested::restricted_function()`
"
                ]) in
          std.io.stdio._print α0 in
        Pure tt in
      Pure tt.
  End private_nested.
End my_mod.

<<<<<<< HEAD
<<<<<<< HEAD
Definition private_function : M unit :=
=======
Definition private_function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition private_function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of [ "called `my_mod::private_function()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

<<<<<<< HEAD
<<<<<<< HEAD
Definition function : M unit :=
=======
Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of [ "called `my_mod::function()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

<<<<<<< HEAD
<<<<<<< HEAD
Definition indirect_access : M unit :=
=======
Definition indirect_access  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition indirect_access : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of [ "called `my_mod::indirect_access()`, that
> " ]) in
      std.io.stdio._print α0 in
    Pure tt in
<<<<<<< HEAD
  let* _ := visibility.my_mod.private_function in
=======
  let* _ := visibility.my_mod.private_function  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
  Pure tt.

Module nested.
<<<<<<< HEAD
<<<<<<< HEAD
  Definition function : M unit :=
=======
  Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of [ "called `my_mod::nested::function()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
  
  (* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
  Definition private_function : M unit :=
=======
  Definition private_function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition private_function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of [ "called `my_mod::nested::private_function()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
  
<<<<<<< HEAD
<<<<<<< HEAD
  Definition public_function_in_my_mod : M unit :=
=======
  Definition public_function_in_my_mod  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition public_function_in_my_mod : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of
              [ "called `my_mod::nested::public_function_in_my_mod()`, that
> "
              ]) in
        std.io.stdio._print α0 in
      Pure tt in
<<<<<<< HEAD
    let* _ := visibility.my_mod.nested.public_function_in_nested in
=======
    let* _ := visibility.my_mod.nested.public_function_in_nested  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
    Pure tt.
  
<<<<<<< HEAD
<<<<<<< HEAD
  Definition public_function_in_nested : M unit :=
=======
  Definition public_function_in_nested  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition public_function_in_nested : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of
              [ "called `my_mod::nested::public_function_in_nested()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
  
<<<<<<< HEAD
<<<<<<< HEAD
  Definition public_function_in_super_mod : M unit :=
=======
  Definition public_function_in_super_mod  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition public_function_in_super_mod : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of
              [ "called `my_mod::nested::public_function_in_super_mod()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
End nested.

<<<<<<< HEAD
<<<<<<< HEAD
Definition function : M unit :=
=======
Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of [ "called `my_mod::nested::function()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

(* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
Definition private_function : M unit :=
=======
Definition private_function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition private_function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of [ "called `my_mod::nested::private_function()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

<<<<<<< HEAD
<<<<<<< HEAD
Definition public_function_in_my_mod : M unit :=
=======
Definition public_function_in_my_mod  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition public_function_in_my_mod : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of
            [ "called `my_mod::nested::public_function_in_my_mod()`, that
> "
            ]) in
      std.io.stdio._print α0 in
    Pure tt in
<<<<<<< HEAD
  let* _ := visibility.my_mod.nested.public_function_in_nested in
=======
  let* _ := visibility.my_mod.nested.public_function_in_nested  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
  Pure tt.

<<<<<<< HEAD
<<<<<<< HEAD
Definition public_function_in_nested : M unit :=
=======
Definition public_function_in_nested  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition public_function_in_nested : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of
            [ "called `my_mod::nested::public_function_in_nested()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

<<<<<<< HEAD
<<<<<<< HEAD
Definition public_function_in_super_mod : M unit :=
=======
Definition public_function_in_super_mod  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition public_function_in_super_mod : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of
            [ "called `my_mod::nested::public_function_in_super_mod()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

<<<<<<< HEAD
<<<<<<< HEAD
Definition call_public_function_in_my_mod : M unit :=
=======
Definition call_public_function_in_my_mod  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition call_public_function_in_my_mod : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of
            [ "called `my_mod::call_public_function_in_my_mod()`, that
> " ]) in
      std.io.stdio._print α0 in
    Pure tt in
<<<<<<< HEAD
  let* _ := visibility.my_mod.nested.public_function_in_my_mod in
=======
  let* _ := visibility.my_mod.nested.public_function_in_my_mod  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
  let* _ :=
    let* _ :=
      let* α0 := format_arguments::["new_const"] (addr_of [ "> " ]) in
      std.io.stdio._print α0 in
    Pure tt in
<<<<<<< HEAD
  let* _ := visibility.my_mod.nested.public_function_in_super_mod in
=======
  let* _ := visibility.my_mod.nested.public_function_in_super_mod  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
  Pure tt.

<<<<<<< HEAD
<<<<<<< HEAD
Definition public_function_in_crate : M unit :=
=======
Definition public_function_in_crate  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition public_function_in_crate : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of [ "called `my_mod::public_function_in_crate()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

Module private_nested.
  (* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
  Definition function : M unit :=
=======
  Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of [ "called `my_mod::private_nested::function()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
  
  (* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
  Definition restricted_function : M unit :=
=======
  Definition restricted_function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
  Definition restricted_function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
    let* _ :=
      let* _ :=
        let* α0 :=
          format_arguments::["new_const"]
            (addr_of
              [ "called `my_mod::private_nested::restricted_function()`
" ]) in
        std.io.stdio._print α0 in
      Pure tt in
    Pure tt.
End private_nested.

(* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
Definition function : M unit :=
=======
Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of [ "called `my_mod::private_nested::function()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

(* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
Definition restricted_function : M unit :=
=======
Definition restricted_function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition restricted_function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"]
          (addr_of
            [ "called `my_mod::private_nested::restricted_function()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

<<<<<<< HEAD
<<<<<<< HEAD
Definition function : M unit :=
=======
Definition function  : M unit :=
>>>>>>> 6ee776e (update snapshot)
=======
Definition function : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ :=
    let* _ :=
      let* α0 :=
        format_arguments::["new_const"] (addr_of [ "called `function()`
" ]) in
      std.io.stdio._print α0 in
    Pure tt in
  Pure tt.

(* #[allow(dead_code)] - function was ignored by the compiler *)
<<<<<<< HEAD
<<<<<<< HEAD
Definition main : M unit :=
  let* _ := visibility.function in
  let* _ := visibility.my_mod.function in
  let* _ := visibility.my_mod.indirect_access in
  let* _ := visibility.my_mod.nested.function in
  let* _ := visibility.my_mod.call_public_function_in_my_mod in
  let* _ := visibility.my_mod.public_function_in_crate in
=======
Definition main  : M unit :=
<<<<<<< HEAD
=======
Definition main : M unit :=
>>>>>>> b389ac0 (ci: update the snapshots)
  let* _ := visibility.function tt in
  let* _ := visibility.my_mod.function tt in
  let* _ := visibility.my_mod.indirect_access tt in
  let* _ := visibility.my_mod.nested.function tt in
  let* _ := visibility.my_mod.call_public_function_in_my_mod tt in
  let* _ := visibility.my_mod.public_function_in_crate tt in
>>>>>>> 6ee776e (update snapshot)
=======
  let* _ := visibility.function  in
  let* _ := visibility.my_mod.function  in
  let* _ := visibility.my_mod.indirect_access  in
  let* _ := visibility.my_mod.nested.function  in
  let* _ := visibility.my_mod.call_public_function_in_my_mod  in
  let* _ := visibility.my_mod.public_function_in_crate  in
>>>>>>> 1abfb9d (Eliminate redundant tt & update snapshot)
  Pure tt.
