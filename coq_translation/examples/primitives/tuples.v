(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition reverse (pair : i32 * bool) : M (bool * i32) :=
  let '(int_param, bool_param) := pair in
  Pure (bool_param, int_param).

Module Matrix.
  Record t : Set := { _ : f32; _ : f32; _ : f32; _ : f32;}.
  
  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0 _ _ _) := x0;
  }.
  Global Instance Get_1 : Notation.Dot 1 := {
    Notation.dot '(Build_t _ x1 _ _) := x1;
  }.
  Global Instance Get_2 : Notation.Dot 2 := {
    Notation.dot '(Build_t _ _ x2 _) := x2;
  }.
  Global Instance Get_3 : Notation.Dot 3 := {
    Notation.dot '(Build_t _ _ _ x3) := x3;
  }.
End Matrix.
Definition Matrix := Matrix.t.

Module Impl__crate_fmt_Debug_for_Matrix.
  Definition Self := Matrix.
  
  Definition fmt
      (self : ref Self)
      (f : mut_ref _crate.fmt.Formatter)
      : M _crate.fmt.Result :=
    _crate.fmt.Formatter::["debug_tuple_field4_finish"]
      f
      "Matrix"
      (deref (self.[0]))
      (deref (self.[1]))
      (deref (self.[2]))
      (deref (deref (self.[3]))).
  
  Global Instance Method_fmt : Notation.Dot "fmt" := {
    Notation.dot := fmt;
  }.
  
  Global Instance I : _crate.fmt.Debug.Trait Self := {
    _crate.fmt.Debug.fmt := fmt;
  }.
End Impl__crate_fmt_Debug_for_Matrix.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let* α0 := 1.["neg"] in
  let* α1 := 2.["neg"] in
  let* α2 := 3.["neg"] in
  let* α3 := 4.["neg"] in
  let long_tuple :=
    (1, 2, 3, 4, α0, α1, α2, α3, 0 (* 0.1 *), 0 (* 0.2 *), "a"%char, true) in
  let* α4 := format_argument::["new_display"] (deref (long_tuple.[0])) in
  let* α5 :=
    format_arguments::["new_v1"]
      (deref [ "long tuple first value: "; "
" ])
      (deref [ α4 ]) in
  let* _ := _crate.io._print α5 in
  let _ := tt in
  let* α6 := format_argument::["new_display"] (deref (long_tuple.[1])) in
  let* α7 :=
    format_arguments::["new_v1"]
      (deref [ "long tuple second value: "; "
" ])
      (deref [ α6 ]) in
  let* _ := _crate.io._print α7 in
  let _ := tt in
  let* α8 := 1.["neg"] in
  let* α9 := 2.["neg"] in
  let tuple_of_tuples := ((1, 2, 2), (4, α8), α9) in
  let* α10 := format_argument::["new_debug"] (deref tuple_of_tuples) in
  let* α11 :=
    format_arguments::["new_v1"]
      (deref [ "tuple of tuples: "; "
" ])
      (deref [ α10 ]) in
  let* _ := _crate.io._print α11 in
  let _ := tt in
  let pair := (1, true) in
  let* α12 := format_argument::["new_debug"] (deref pair) in
  let* α13 :=
    format_arguments::["new_v1"] (deref [ "pair is "; "
" ]) (deref [ α12 ]) in
  let* _ := _crate.io._print α13 in
  let _ := tt in
  let* α14 := reverse pair in
  let* α15 := format_argument::["new_debug"] (deref α14) in
  let* α16 :=
    format_arguments::["new_v1"]
      (deref [ "the reversed pair is "; "
" ])
      (deref [ α15 ]) in
  let* _ := _crate.io._print α16 in
  let _ := tt in
  let* α17 := format_argument::["new_debug"] (deref (5)) in
  let* α18 :=
    format_arguments::["new_v1"]
      (deref [ "one element tuple: "; "
" ])
      (deref [ α17 ]) in
  let* _ := _crate.io._print α18 in
  let _ := tt in
  let* α19 := format_argument::["new_debug"] (deref 5) in
  let* α20 :=
    format_arguments::["new_v1"]
      (deref [ "just an integer: "; "
" ])
      (deref [ α19 ]) in
  let* _ := _crate.io._print α20 in
  let _ := tt in
  let tuple := (1, "hello", 5 (* 4.5 *), true) in
  let '(a, b, c, d) := tuple in
  let* α21 := format_argument::["new_debug"] (deref a) in
  let* α22 := format_argument::["new_debug"] (deref b) in
  let* α23 := format_argument::["new_debug"] (deref c) in
  let* α24 := format_argument::["new_debug"] (deref d) in
  let* α25 :=
    format_arguments::["new_v1"]
      (deref [ ""; ", "; ", "; ", "; "
" ])
      (deref [ α21; α22; α23; α24 ]) in
  let* _ := _crate.io._print α25 in
  let _ := tt in
  let matrix :=
    Matrix.Build_t 1 (* 1.1 *) 1 (* 1.2 *) 2 (* 2.1 *) 2 (* 2.2 *) in
  let* α26 := format_argument::["new_debug"] (deref matrix) in
  let* α27 :=
    format_arguments::["new_v1"] (deref [ ""; "
" ]) (deref [ α26 ]) in
  let* _ := _crate.io._print α27 in
  let _ := tt in
  Pure tt.
