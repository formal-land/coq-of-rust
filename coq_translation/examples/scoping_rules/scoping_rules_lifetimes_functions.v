(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition print_one (x : ref i32) : M unit :=
  let* α0 := format_argument::["new_display"] (deref x) in
  let* α1 :=
    format_arguments::["new_v1"]
      (deref [ "`print_one`: x is "; "
" ])
      (deref [ α0 ]) in
  let* _ := _crate.io._print α1 in
  let _ := tt in
  Pure tt.

Definition add_one (x : mut_ref i32) : M unit :=
  let* α0 := x.["deref"] in
  let* _ := α0.["add_assign"] 1 in
  Pure tt.

Definition print_multi (x : ref i32) (y : ref i32) : M unit :=
  let* α0 := format_argument::["new_display"] (deref x) in
  let* α1 := format_argument::["new_display"] (deref y) in
  let* α2 :=
    format_arguments::["new_v1"]
      (deref [ "`print_multi`: x is "; ", y is "; "
" ])
      (deref [ α0; α1 ]) in
  let* _ := _crate.io._print α2 in
  let _ := tt in
  Pure tt.

Definition pass_x (x : ref i32) (arg : ref i32) : M (ref i32) := Pure x.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let x := 7 in
  let y := 9 in
  let* _ := print_one (deref x) in
  let* _ := print_multi (deref x) (deref y) in
  let* z := pass_x (deref x) (deref y) in
  let* _ := print_one z in
  let t := 3 in
  let* _ := add_one (deref t) in
  let* _ := print_one (deref t) in
  Pure tt.
