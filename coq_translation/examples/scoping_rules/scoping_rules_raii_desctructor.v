(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module ToDrop.
  Inductive t : Set := Build.
End ToDrop.
Definition ToDrop := ToDrop.t.

Module Impl_Drop_for_ToDrop.
  Definition Self := ToDrop.
  
  Definition drop (self : mut_ref Self) : M unit :=
    let* α0 :=
      format_arguments::["new_const"] (deref [ "ToDrop is being dropped
" ]) in
    let* _ := _crate.io._print α0 in
    let _ := tt in
    Pure tt.
  
  Global Instance Method_drop : Notation.Dot "drop" := {
    Notation.dot := drop;
  }.
  
  Global Instance I : Drop.Trait Self := {
    Drop.drop := drop;
  }.
End Impl_Drop_for_ToDrop.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let x := ToDrop.Build in
  let* α0 := format_arguments::["new_const"] (deref [ "Made a ToDrop!
" ]) in
  let* _ := _crate.io._print α0 in
  let _ := tt in
  Pure tt.
