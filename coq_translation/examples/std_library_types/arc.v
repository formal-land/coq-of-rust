(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Arc := std.sync.Arc.
Definition Arc := Arc.t.

Module thread := std.thread.

Module Duration := std.time.Duration.
Definition Duration := Duration.t.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : unit :=
  let apple := Arc::["new"] "the same apple" in
  let _ :=
    match LangItem Range {| Range.start := 0; Range.end := 10; |} with
    | iter =>
      loop
        let _ :=
          match LangItem iter with
          | None => Break
          | Some {| Some.0 := _; |} =>
            let apple := Arc::["clone"] apple in
            let _ :=
              thread.spawn
                (fun  =>
                  let _ :=
                    let _ :=
                      _crate.io._print
                        (format_arguments::["new_v1"]
                          [ ""; "
" ]
                          [ format_argument::["new_debug"] apple ]) in
                    tt in
                  tt) in
            tt
          end in
        tt
        from
        for
    end in
  let _ := thread.sleep (Duration::["from_secs"] 1) in
  tt.
