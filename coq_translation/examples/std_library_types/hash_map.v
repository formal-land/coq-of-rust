(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module HashMap := std.collections.HashMap.
Definition HashMap := HashMap.t.

Definition call (number : ref str) : M (ref str) :=
  match number with
  | "798-1364" =>
    Pure "We're sorry, the call cannot be completed as dialed. 
            Please hang up and try again."
  | "645-7689" =>
    Pure "Hello, this is Mr. Awesome's Pizza. My name is Fred.
            What can I get for you today?"
  | _ => Pure "Hi! Who is this again?"
  end.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let* contacts := HashMap::["new"] tt in
  let* _ := contacts.["insert"] "Daniel" "798-1364" in
  let* _ := contacts.["insert"] "Ashley" "645-7689" in
  let* _ := contacts.["insert"] "Katie" "435-8291" in
  let* _ := contacts.["insert"] "Robert" "956-1745" in
  let* α0 := contacts.["get"] (deref "Daniel") in
  let* _ :=
    match α0 with
    | Some number =>
      let* α0 := call number in
      let* α1 := format_argument::["new_display"] (deref α0) in
      let* α2 :=
        format_arguments::["new_v1"]
          (deref [ "Calling Daniel: "; "
" ])
          (deref [ α1 ]) in
      let* _ := _crate.io._print α2 in
      Pure tt
    | _ =>
      let* α0 :=
        format_arguments::["new_const"]
          (deref [ "Don't have Daniel's number.
" ]) in
      let* _ := _crate.io._print α0 in
      Pure tt
    end in
  let* _ := contacts.["insert"] "Daniel" "164-6743" in
  let* α1 := contacts.["get"] (deref "Ashley") in
  let* _ :=
    match α1 with
    | Some number =>
      let* α0 := call number in
      let* α1 := format_argument::["new_display"] (deref α0) in
      let* α2 :=
        format_arguments::["new_v1"]
          (deref [ "Calling Ashley: "; "
" ])
          (deref [ α1 ]) in
      let* _ := _crate.io._print α2 in
      Pure tt
    | _ =>
      let* α0 :=
        format_arguments::["new_const"]
          (deref [ "Don't have Ashley's number.
" ]) in
      let* _ := _crate.io._print α0 in
      Pure tt
    end in
  let* _ := contacts.["remove"] (deref "Ashley") in
  let* α2 := contacts.["iter"] in
  let* α3 := LangItem α2 in
  match α3 with
  | iter =>
    loop
      let* α0 := LangItem (deref iter) in
      let* _ :=
        match α0 with
        | None => Pure Break
        | Some {| Some.0 := (contact, number); |} =>
          let* α0 := format_argument::["new_display"] (deref contact) in
          let* α1 := call number in
          let* α2 := format_argument::["new_display"] (deref α1) in
          let* α3 :=
            format_arguments::["new_v1"]
              (deref [ "Calling "; ": "; "
" ])
              (deref [ α0; α2 ]) in
          let* _ := _crate.io._print α3 in
          let _ := tt in
          Pure tt
        end in
      Pure tt
      from
      for
  end.
