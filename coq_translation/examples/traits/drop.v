(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Droppable.
  Record t : Set := {
    name : ref str;
  }.
  
  Global Instance Get_name : Notation.Dot "name" := {
    Notation.dot '(Build_t x0) := x0;
  }.
End Droppable.
Definition Droppable : Set := Droppable.t.

Module Impl_Drop_for_Droppable.
  Definition Self := Droppable.
  
  Definition drop (self : mut_ref Self) : M unit :=
    let* α0 := format_argument::["new_display"] (deref self.["name"]) in
    let* α1 :=
      format_arguments::["new_v1"]
        (deref [ "> Dropping "; "
" ])
        (deref [ α0 ]) in
    let* _ := _crate.io._print α1 in
    let _ := tt in
    Pure tt.
  
  Global Instance Method_drop : Notation.Dot "drop" := {
    Notation.dot := drop;
  }.
  
  Global Instance I : Drop.Trait Self := {
    Drop.drop := drop;
  }.
End Impl_Drop_for_Droppable.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let _a := {| Droppable.name := "a"; |} in
  let _b := {| Droppable.name := "b"; |} in
  let _c := {| Droppable.name := "c"; |} in
  let _d := {| Droppable.name := "d"; |} in
  let* α0 := format_arguments::["new_const"] (deref [ "Exiting block B
" ]) in
  let* _ := _crate.io._print α0 in
  let _ := tt in
  let _ := tt in
  let* α1 :=
    format_arguments::["new_const"] (deref [ "Just exited block B
" ]) in
  let* _ := _crate.io._print α1 in
  let _ := tt in
  let* α2 := format_arguments::["new_const"] (deref [ "Exiting block A
" ]) in
  let* _ := _crate.io._print α2 in
  let _ := tt in
  let _ := tt in
  let* α3 :=
    format_arguments::["new_const"] (deref [ "Just exited block A
" ]) in
  let* _ := _crate.io._print α3 in
  let _ := tt in
  let* _ := drop _a in
  let* α4 :=
    format_arguments::["new_const"] (deref [ "end of the main function
" ]) in
  let* _ := _crate.io._print α4 in
  let _ := tt in
  Pure tt.
